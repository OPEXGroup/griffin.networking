<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Griffin.Networking">
      <assemblydata version="0.5.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>60480c0b-81fa-4c2d-8ada-069308ea20bd</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Griffin.Networking</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Performant networking library for .NET</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>0.5.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://blog.gauffin.org</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Griffin.Networking</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright ©  Jonas Gauffin 2012</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Griffin.Networking.Protocols.Basic">
      <assemblydata version="0.5.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright © Hewlett-Packard 2012</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Griffin.Networking.Protocols.Basic</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Hewlett-Packard</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Griffin.Networking.Protocols.Basic</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>68767d45-3820-4865-884d-2b5175a465a7</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>0.5.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="Griffin.Networking.Http">
      <assemblydata version="0.1.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>0.1.0.0</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Griffin.Networking.Http</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>HTTP implementation for Griffin.Networking</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>http://blog.gauffin.org</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Griffin.Networking.Http</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright © Jonas Gauffin 2012</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>2d5fae38-143d-4dfa-a08a-a3c595c7d4df</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Griffin.Networking">
      <apidata name="Griffin.Networking" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.ISocketWriterJob" />
        <element api="T:Griffin.Networking.DisconnectEventArgs" />
        <element api="T:Griffin.Networking.IServiceLocator" />
        <element api="T:Griffin.Networking.SliceSocketWriterJob" />
        <element api="T:Griffin.Networking.SocketWriter" />
        <element api="T:Griffin.Networking.StreamSocketWriterJob" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.DisconnectEventArgs">
      <apidata name="DisconnectEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.DisconnectEventArgs.#ctor(System.Net.Sockets.SocketError)" />
        <element api="P:Griffin.Networking.DisconnectEventArgs.SocketError" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.DisconnectEventArgs.#ctor(System.Net.Sockets.SocketError)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="socketError">
          <type api="T:System.Net.Sockets.SocketError" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.DisconnectEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.DisconnectEventArgs.SocketError">
      <apidata name="SocketError" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_SocketError" />
      <setter name="set_SocketError" />
      <returns>
        <type api="T:System.Net.Sockets.SocketError" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.DisconnectEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.IServiceLocator">
      <apidata name="IServiceLocator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:Griffin.Networking.IServiceLocator.Resolve(System.Type)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.IServiceLocator.Resolve(System.Type)">
      <apidata name="Resolve" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.IServiceLocator" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.ISocketWriterJob">
      <apidata name="ISocketWriterJob" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Griffin.Networking.SliceSocketWriterJob" ref="true" />
        <type api="T:Griffin.Networking.StreamSocketWriterJob" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.ISocketWriterJob.Write(System.Net.Sockets.SocketAsyncEventArgs)" />
        <element api="M:Griffin.Networking.ISocketWriterJob.WriteCompleted(System.Int32)" />
        <element api="M:System.IDisposable.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.IDisposable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.ISocketWriterJob.Write(System.Net.Sockets.SocketAsyncEventArgs)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.Net.Sockets.SocketAsyncEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.ISocketWriterJob" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.ISocketWriterJob.WriteCompleted(System.Int32)">
      <apidata name="WriteCompleted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="bytes">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.ISocketWriterJob" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.SliceSocketWriterJob">
      <apidata name="SliceSocketWriterJob" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.ISocketWriterJob" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.SliceSocketWriterJob.#ctor(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.SliceSocketWriterJob.Write(System.Net.Sockets.SocketAsyncEventArgs)" />
        <element api="M:Griffin.Networking.SliceSocketWriterJob.WriteCompleted(System.Int32)" />
        <element api="M:Griffin.Networking.SliceSocketWriterJob.Dispose" />
        <element api="M:Griffin.Networking.SliceSocketWriterJob.ToString" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.SliceSocketWriterJob.#ctor(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="slice">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.SliceSocketWriterJob" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.SliceSocketWriterJob.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.SliceSocketWriterJob" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.SliceSocketWriterJob.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.SliceSocketWriterJob" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.SliceSocketWriterJob.Write(System.Net.Sockets.SocketAsyncEventArgs)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.Net.Sockets.SocketAsyncEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.ISocketWriterJob.Write(System.Net.Sockets.SocketAsyncEventArgs)">
          <type api="T:Griffin.Networking.ISocketWriterJob" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.SliceSocketWriterJob" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.SliceSocketWriterJob.WriteCompleted(System.Int32)">
      <apidata name="WriteCompleted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="bytes">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.ISocketWriterJob.WriteCompleted(System.Int32)">
          <type api="T:Griffin.Networking.ISocketWriterJob" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.SliceSocketWriterJob" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.SocketWriter">
      <apidata name="SocketWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.SocketWriter.#ctor" />
        <element api="M:Griffin.Networking.SocketWriter.Assign(System.Net.Sockets.Socket)" />
        <element api="M:Griffin.Networking.SocketWriter.Send(Griffin.Networking.ISocketWriterJob)" />
        <element api="M:Griffin.Networking.SocketWriter.Reset" />
        <element api="M:Griffin.Networking.SocketWriter.SetBuffer(Griffin.Networking.Buffers.IBufferSlice)" />
        <element api="E:Griffin.Networking.SocketWriter.Disconnected" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.SocketWriter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.SocketWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.SocketWriter.Assign(System.Net.Sockets.Socket)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="socket">
          <type api="T:System.Net.Sockets.Socket" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.SocketWriter" ref="true" />
      </containers>
    </api>
    <api id="E:Griffin.Networking.SocketWriter.Disconnected">
      <apidata name="Disconnected" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Disconnected" />
      <remover name="remove_Disconnected" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Griffin.Networking.DisconnectEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Griffin.Networking.DisconnectEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.SocketWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.SocketWriter.Reset">
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.SocketWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.SocketWriter.Send(Griffin.Networking.ISocketWriterJob)">
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="job">
          <type api="T:Griffin.Networking.ISocketWriterJob" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.SocketWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.SocketWriter.SetBuffer(Griffin.Networking.Buffers.IBufferSlice)">
      <apidata name="SetBuffer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bufferSlice">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.SocketWriter" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.StreamSocketWriterJob">
      <apidata name="StreamSocketWriterJob" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.ISocketWriterJob" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.StreamSocketWriterJob.#ctor(System.IO.Stream)" />
        <element api="M:Griffin.Networking.StreamSocketWriterJob.Dispose" />
        <element api="M:Griffin.Networking.StreamSocketWriterJob.Write(System.Net.Sockets.SocketAsyncEventArgs)" />
        <element api="M:Griffin.Networking.StreamSocketWriterJob.WriteCompleted(System.Int32)" />
        <element api="M:Griffin.Networking.StreamSocketWriterJob.ToString" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.StreamSocketWriterJob.#ctor(System.IO.Stream)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.StreamSocketWriterJob" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.StreamSocketWriterJob.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.StreamSocketWriterJob" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.StreamSocketWriterJob.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.StreamSocketWriterJob" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.StreamSocketWriterJob.Write(System.Net.Sockets.SocketAsyncEventArgs)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="args">
          <type api="T:System.Net.Sockets.SocketAsyncEventArgs" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.ISocketWriterJob.Write(System.Net.Sockets.SocketAsyncEventArgs)">
          <type api="T:Griffin.Networking.ISocketWriterJob" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.StreamSocketWriterJob" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.StreamSocketWriterJob.WriteCompleted(System.Int32)">
      <apidata name="WriteCompleted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="bytes">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.ISocketWriterJob.WriteCompleted(System.Int32)">
          <type api="T:Griffin.Networking.ISocketWriterJob" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking" />
        <type api="T:Griffin.Networking.StreamSocketWriterJob" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Buffers">
      <apidata name="Griffin.Networking.Buffers" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Buffers.IBufferSlice" />
        <element api="T:Griffin.Networking.Buffers.BufferSlice" />
        <element api="T:Griffin.Networking.Buffers.IStringBufferReader" />
        <element api="T:Griffin.Networking.Buffers.StringBufferSliceReader" />
        <element api="T:Griffin.Networking.Buffers.IBufferSliceStack" />
        <element api="T:Griffin.Networking.Buffers.BufferSliceStack" />
        <element api="T:Griffin.Networking.Buffers.IBufferWrapper" />
        <element api="T:Griffin.Networking.Buffers.IBufferWriter" />
        <element api="T:Griffin.Networking.Buffers.BufferWriter" />
        <element api="T:Griffin.Networking.Buffers.IPeekable" />
        <element api="T:Griffin.Networking.Buffers.CircularStream" />
        <element api="T:Griffin.Networking.Buffers.IBufferReader" />
        <element api="T:Griffin.Networking.Buffers.IBufferStream" />
        <element api="T:Griffin.Networking.Buffers.PeekableMemoryStream" />
        <element api="T:Griffin.Networking.Buffers.PooledBufferSlice" />
        <element api="T:Griffin.Networking.Buffers.SliceStream" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Buffers.BufferSlice">
      <apidata name="BufferSlice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Buffers.BufferSlice.#ctor(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.BufferSlice.#ctor(System.Int32)" />
        <element api="P:Griffin.Networking.Buffers.BufferSlice.Buffer" />
        <element api="P:Griffin.Networking.Buffers.BufferSlice.Offset" />
        <element api="P:Griffin.Networking.Buffers.BufferSlice.Count" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.BufferSlice.#ctor(System.Byte[],System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferSlice" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.BufferSlice.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferSlice" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.BufferSlice.Buffer">
      <apidata name="Buffer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Buffer" />
      <setter name="set_Buffer" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IBufferSlice.Buffer">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferSlice" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.BufferSlice.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Count" />
      <setter name="set_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IBufferSlice.Count">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferSlice" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.BufferSlice.Offset">
      <apidata name="Offset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Offset" />
      <setter name="set_Offset" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IBufferSlice.Offset">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferSlice" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.BufferSliceStack">
      <apidata name="BufferSliceStack" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Buffers.IBufferSliceStack" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Buffers.BufferSliceStack.#ctor(System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.BufferSliceStack.Pop" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.BufferSliceStack.#ctor(System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="numberOfBuffers">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferSliceStack" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.BufferSliceStack.Pop">
      <apidata name="Pop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IBufferSliceStack.Pop">
          <type api="T:Griffin.Networking.Buffers.IBufferSliceStack" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferSliceStack" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.BufferWriter">
      <apidata name="BufferWriter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Buffers.IBufferWriter" ref="true" />
        <type api="T:Griffin.Networking.Buffers.IBufferWrapper" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Buffers.BufferWriter.#ctor" />
        <element api="M:Griffin.Networking.Buffers.BufferWriter.#ctor(Griffin.Networking.Buffers.IBufferSlice)" />
        <element api="M:Griffin.Networking.Buffers.BufferWriter.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.BufferWriter.Copy(System.IO.Stream)" />
        <element api="M:Griffin.Networking.Buffers.BufferWriter.Forward(System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.BufferWriter.Assign(Griffin.Networking.Buffers.IBufferSlice)" />
        <element api="M:Griffin.Networking.Buffers.BufferWriter.Reset" />
        <element api="P:Griffin.Networking.Buffers.BufferWriter.Buffer" />
        <element api="P:Griffin.Networking.Buffers.BufferWriter.Position" />
        <element api="P:Griffin.Networking.Buffers.BufferWriter.Count" />
        <element api="P:Griffin.Networking.Buffers.BufferWriter.Capacity" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.BufferWriter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.BufferWriter.#ctor(Griffin.Networking.Buffers.IBufferSlice)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="slice">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.BufferWriter.Assign(Griffin.Networking.Buffers.IBufferSlice)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="slice">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferWriter" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.BufferWriter.Buffer">
      <apidata name="Buffer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Buffer" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferWriter" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.BufferWriter.Capacity">
      <apidata name="Capacity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Capacity" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IBufferWrapper.Capacity">
          <type api="T:Griffin.Networking.Buffers.IBufferWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.BufferWriter.Copy(System.IO.Stream)">
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IBufferWriter.Copy(System.IO.Stream)">
          <type api="T:Griffin.Networking.Buffers.IBufferWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferWriter" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.BufferWriter.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Count" />
      <setter name="set_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IBufferWrapper.Count">
          <type api="T:Griffin.Networking.Buffers.IBufferWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.BufferWriter.Forward(System.Int32)">
      <apidata name="Forward" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bytesToMove">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferWriter" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.BufferWriter.Position">
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IBufferWrapper.Position">
          <type api="T:Griffin.Networking.Buffers.IBufferWrapper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.BufferWriter.Reset">
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.BufferWriter.Write(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IBufferWriter.Write(System.Byte[],System.Int32,System.Int32)">
          <type api="T:Griffin.Networking.Buffers.IBufferWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.BufferWriter" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.CircularStream">
      <apidata name="CircularStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Buffers.IPeekable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Buffers.CircularStream.#ctor(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.CircularStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.CircularStream.Peek" />
        <element api="M:Griffin.Networking.Buffers.CircularStream.Clear(System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.CircularStream.Flush" />
        <element api="M:Griffin.Networking.Buffers.CircularStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:Griffin.Networking.Buffers.CircularStream.SetLength(System.Int64)" />
        <element api="M:Griffin.Networking.Buffers.CircularStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.CircularStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="P:Griffin.Networking.Buffers.CircularStream.CanRead" />
        <element api="P:Griffin.Networking.Buffers.CircularStream.CanSeek" />
        <element api="P:Griffin.Networking.Buffers.CircularStream.CanWrite" />
        <element api="P:Griffin.Networking.Buffers.CircularStream.Length" />
        <element api="P:Griffin.Networking.Buffers.CircularStream.Position" />
        <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)">
          <apidata name="CopyToAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)">
          <apidata name="CopyToAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
          <apidata name="CopyToAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.Close">
          <apidata name="Close" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.Dispose(System.Boolean)">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="disposing">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.FlushAsync">
          <apidata name="FlushAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)">
          <apidata name="FlushAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle">
          <apidata name="CreateWaitHandle" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>CreateWaitHandle will be removed eventually.  Please use "new ManualResetEvent(false)" instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <apidata name="BeginRead" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.EndRead(System.IAsyncResult)">
          <apidata name="EndRead" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="asyncResult">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)">
          <apidata name="ReadAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <apidata name="ReadAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <apidata name="BeginWrite" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.EndWrite(System.IAsyncResult)">
          <apidata name="EndWrite" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="asyncResult">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)">
          <apidata name="WriteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <apidata name="WriteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.ReadByte">
          <apidata name="ReadByte" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)">
          <apidata name="WriteByte" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Byte" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant">
          <apidata name="ObjectInvariant" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Do not call or override this method.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.CanTimeout">
          <apidata name="CanTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanTimeout" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.ReadTimeout">
          <apidata name="ReadTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ReadTimeout" />
          <setter name="set_ReadTimeout" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.WriteTimeout">
          <apidata name="WriteTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_WriteTimeout" />
          <setter name="set_WriteTimeout" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.CircularStream.#ctor(System.Byte[],System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.CircularStream.#ctor(System.Byte[],System.Int32,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="writtenCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.CircularStream.CanRead">
      <apidata name="CanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanRead">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.CircularStream.CanSeek">
      <apidata name="CanSeek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanSeek">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanSeek" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.CircularStream.CanWrite">
      <apidata name="CanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanWrite">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.CircularStream.Clear(System.Int32,System.Int32)">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.CircularStream.Flush">
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Flush">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.CircularStream.Length">
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Length">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.CircularStream.Peek">
      <apidata name="Peek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IPeekable.Peek">
          <type api="T:Griffin.Networking.Buffers.IPeekable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.CircularStream.Position">
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Position">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.CircularStream.Read(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.CircularStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.IO.SeekOrigin" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.CircularStream.SetLength(System.Int64)">
      <apidata name="SetLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.SetLength(System.Int64)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.CircularStream.Write(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.IBufferReader">
      <apidata name="IBufferReader" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:Griffin.Networking.Buffers.IBufferWrapper" ref="true" />
      </implements>
      <implementors>
        <type api="T:Griffin.Networking.Buffers.IBufferStream" ref="true" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Buffers.IBufferReader.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.IBufferReader.Read" />
        <element api="M:Griffin.Networking.Buffers.IBufferReader.CopyTo(System.IO.Stream,System.Int32)" />
        <element api="P:Griffin.Networking.Buffers.IBufferReader.RemainingLength" />
        <element api="P:Griffin.Networking.Buffers.IBufferWrapper.Position" />
        <element api="P:Griffin.Networking.Buffers.IBufferWrapper.Count" />
        <element api="P:Griffin.Networking.Buffers.IBufferWrapper.Capacity" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IBufferReader.CopyTo(System.IO.Stream,System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IBufferReader.Read">
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IBufferReader.Read(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.IBufferReader.RemainingLength">
      <apidata name="RemainingLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RemainingLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.IBufferSlice">
      <apidata name="IBufferSlice" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Buffers.BufferSlice" ref="true" />
        <type api="T:Griffin.Networking.Buffers.PooledBufferSlice" ref="true" />
      </implementors>
      <elements>
        <element api="P:Griffin.Networking.Buffers.IBufferSlice.Buffer" />
        <element api="P:Griffin.Networking.Buffers.IBufferSlice.Offset" />
        <element api="P:Griffin.Networking.Buffers.IBufferSlice.Count" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.IBufferSlice.Buffer">
      <apidata name="Buffer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Buffer" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.IBufferSlice.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.IBufferSlice.Offset">
      <apidata name="Offset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Offset" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.IBufferSliceStack">
      <apidata name="IBufferSliceStack" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Buffers.BufferSliceStack" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Buffers.IBufferSliceStack.Push(Griffin.Networking.Buffers.IBufferSlice)" />
        <element api="M:Griffin.Networking.Buffers.IBufferSliceStack.Pop" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IBufferSliceStack.Pop">
      <apidata name="Pop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IBufferSliceStack" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IBufferSliceStack.Push(Griffin.Networking.Buffers.IBufferSlice)">
      <apidata name="Push" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="slice">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IBufferSliceStack" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.IBufferStream">
      <apidata name="IBufferStream" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        <type api="T:Griffin.Networking.Buffers.IBufferWriter" ref="true" />
        <type api="T:Griffin.Networking.Buffers.IBufferWrapper" ref="true" />
      </implements>
      <implementors>
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Buffers.IBufferReader.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.IBufferReader.Read" />
        <element api="M:Griffin.Networking.Buffers.IBufferReader.CopyTo(System.IO.Stream,System.Int32)" />
        <element api="P:Griffin.Networking.Buffers.IBufferReader.RemainingLength" />
        <element api="M:Griffin.Networking.Buffers.IBufferWriter.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.IBufferWriter.Copy(System.IO.Stream)" />
        <element api="P:Griffin.Networking.Buffers.IBufferWrapper.Position" />
        <element api="P:Griffin.Networking.Buffers.IBufferWrapper.Count" />
        <element api="P:Griffin.Networking.Buffers.IBufferWrapper.Capacity" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.IBufferWrapper">
      <apidata name="IBufferWrapper" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Buffers.IBufferWriter" ref="true" />
        <type api="T:Griffin.Networking.Buffers.BufferWriter" ref="true" />
        <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        <type api="T:Griffin.Networking.Buffers.IBufferStream" ref="true" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </implementors>
      <elements>
        <element api="P:Griffin.Networking.Buffers.IBufferWrapper.Position" />
        <element api="P:Griffin.Networking.Buffers.IBufferWrapper.Count" />
        <element api="P:Griffin.Networking.Buffers.IBufferWrapper.Capacity" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.IBufferWrapper.Capacity">
      <apidata name="Capacity" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Capacity" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IBufferWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.IBufferWrapper.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IBufferWrapper" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.IBufferWrapper.Position">
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IBufferWrapper" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.IBufferWriter">
      <apidata name="IBufferWriter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:Griffin.Networking.Buffers.IBufferWrapper" ref="true" />
      </implements>
      <implementors>
        <type api="T:Griffin.Networking.Buffers.BufferWriter" ref="true" />
        <type api="T:Griffin.Networking.Buffers.IBufferStream" ref="true" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Buffers.IBufferWriter.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.IBufferWriter.Copy(System.IO.Stream)" />
        <element api="P:Griffin.Networking.Buffers.IBufferWrapper.Position" />
        <element api="P:Griffin.Networking.Buffers.IBufferWrapper.Count" />
        <element api="P:Griffin.Networking.Buffers.IBufferWrapper.Capacity" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IBufferWriter.Copy(System.IO.Stream)">
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IBufferWriter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IBufferWriter.Write(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IBufferWriter" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.IPeekable">
      <apidata name="IPeekable" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Buffers.CircularStream" ref="true" />
        <type api="T:Griffin.Networking.Buffers.PeekableMemoryStream" ref="true" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Buffers.IPeekable.Peek" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IPeekable.Peek">
      <apidata name="Peek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IPeekable" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.IStringBufferReader">
      <apidata name="IStringBufferReader" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.Consume" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.Consume(System.Char[])" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.ConsumeUntil(System.Char)" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.ConsumeWhiteSpaces" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.ConsumeWhiteSpaces(System.Char)" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.Contains(System.Char)" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.Read" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadLine" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadQuotedString" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadToEnd(System.String)" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadToEnd" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadToEnd(System.Char)" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadUntil(System.Char)" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadUntil(System.String)" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadWord" />
        <element api="M:Griffin.Networking.Buffers.IStringBufferReader.Assign(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="P:Griffin.Networking.Buffers.IStringBufferReader.Current" />
        <element api="P:Griffin.Networking.Buffers.IStringBufferReader.HasMore" />
        <element api="P:Griffin.Networking.Buffers.IStringBufferReader.Index" />
        <element api="P:Griffin.Networking.Buffers.IStringBufferReader.Length" />
        <element api="P:Griffin.Networking.Buffers.IStringBufferReader.Peek" />
        <element api="P:Griffin.Networking.Buffers.IStringBufferReader.RemainingLength" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.Assign(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="buffer">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.Consume">
      <apidata name="Consume" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.Consume(System.Char[])">
      <apidata name="Consume" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="chars" params="true">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.ConsumeUntil(System.Char)">
      <apidata name="ConsumeUntil" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="delimiter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.ConsumeWhiteSpaces">
      <apidata name="ConsumeWhiteSpaces" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.ConsumeWhiteSpaces(System.Char)">
      <apidata name="ConsumeWhiteSpaces" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="extraCharacter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.Contains(System.Char)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="ch">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.IStringBufferReader.Current">
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.IStringBufferReader.HasMore">
      <apidata name="HasMore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_HasMore" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.IStringBufferReader.Index">
      <apidata name="Index" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Index" />
      <setter name="set_Index" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.IStringBufferReader.Length">
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.IStringBufferReader.Peek">
      <apidata name="Peek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Peek" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.Read">
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.ReadLine">
      <apidata name="ReadLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.ReadQuotedString">
      <apidata name="ReadQuotedString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.ReadToEnd">
      <apidata name="ReadToEnd" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.ReadToEnd(System.Char)">
      <apidata name="ReadToEnd" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="delimiter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.ReadToEnd(System.String)">
      <apidata name="ReadToEnd" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="delimiters">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.ReadUntil(System.Char)">
      <apidata name="ReadUntil" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="delimiter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.ReadUntil(System.String)">
      <apidata name="ReadUntil" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="delimiters">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.IStringBufferReader.ReadWord">
      <apidata name="ReadWord" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.IStringBufferReader.RemainingLength">
      <apidata name="RemainingLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RemainingLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.PeekableMemoryStream">
      <apidata name="PeekableMemoryStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IO.MemoryStream" ref="true" />
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Buffers.IPeekable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Buffers.PeekableMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.PeekableMemoryStream.Peek" />
        <element api="M:System.IO.MemoryStream.Dispose(System.Boolean)">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.IO.Stream.Dispose(System.Boolean)">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="disposing">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.MemoryStream.Flush">
          <apidata name="Flush" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.IO.Stream.Flush">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.MemoryStream.FlushAsync(System.Threading.CancellationToken)">
          <apidata name="FlushAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.FlushAsync">
          <apidata name="FlushAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.MemoryStream.GetBuffer">
          <apidata name="GetBuffer" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.MemoryStream.Read(System.Byte[],System.Int32,System.Int32)">
          <apidata name="Read" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="buffer" in="true" out="true">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.MemoryStream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <apidata name="ReadAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)">
          <apidata name="ReadAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.MemoryStream.ReadByte">
          <apidata name="ReadByte" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.IO.Stream.ReadByte">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.MemoryStream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
          <apidata name="CopyToAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)">
          <apidata name="CopyToAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)">
          <apidata name="CopyToAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.MemoryStream.Seek(System.Int64,System.IO.SeekOrigin)">
          <apidata name="Seek" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="offset">
              <type api="T:System.Int64" ref="false" />
            </parameter>
            <parameter name="loc">
              <type api="T:System.IO.SeekOrigin" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.MemoryStream.SetLength(System.Int64)">
          <apidata name="SetLength" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.IO.Stream.SetLength(System.Int64)">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="value">
              <type api="T:System.Int64" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.MemoryStream.ToArray">
          <apidata name="ToArray" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <arrayOf rank="1">
              <type api="T:System.Byte" ref="false" />
            </arrayOf>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.MemoryStream.Write(System.Byte[],System.Int32,System.Int32)">
          <apidata name="Write" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.MemoryStream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <apidata name="WriteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)">
          <apidata name="WriteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.MemoryStream.WriteByte(System.Byte)">
          <apidata name="WriteByte" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.IO.Stream.WriteByte(System.Byte)">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <parameters>
            <parameter name="value">
              <type api="T:System.Byte" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.MemoryStream.WriteTo(System.IO.Stream)">
          <apidata name="WriteTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="stream">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="P:System.IO.MemoryStream.CanRead">
          <apidata name="CanRead" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.IO.Stream.CanRead">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_CanRead">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="P:System.IO.MemoryStream.CanSeek">
          <apidata name="CanSeek" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.IO.Stream.CanSeek">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_CanSeek">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="P:System.IO.MemoryStream.CanWrite">
          <apidata name="CanWrite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.IO.Stream.CanWrite">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_CanWrite">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="P:System.IO.MemoryStream.Capacity">
          <apidata name="Capacity" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Capacity" />
          <setter name="set_Capacity" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="P:System.IO.MemoryStream.Length">
          <apidata name="Length" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.IO.Stream.Length">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" />
          <getter name="get_Length">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="P:System.IO.MemoryStream.Position">
          <apidata name="Position" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="P:System.IO.Stream.Position">
              <type api="T:System.IO.Stream" ref="true" />
            </member>
          </overrides>
          <propertydata get="true" set="true" />
          <getter name="get_Position">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_Position" />
          <returns>
            <type api="T:System.Int64" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.MemoryStream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.Close">
          <apidata name="Close" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle">
          <apidata name="CreateWaitHandle" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>CreateWaitHandle will be removed eventually.  Please use "new ManualResetEvent(false)" instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <apidata name="BeginRead" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.EndRead(System.IAsyncResult)">
          <apidata name="EndRead" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="asyncResult">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <apidata name="BeginWrite" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.EndWrite(System.IAsyncResult)">
          <apidata name="EndWrite" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="asyncResult">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant">
          <apidata name="ObjectInvariant" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Do not call or override this method.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.CanTimeout">
          <apidata name="CanTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanTimeout" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.ReadTimeout">
          <apidata name="ReadTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ReadTimeout" />
          <setter name="set_ReadTimeout" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.WriteTimeout">
          <apidata name="WriteTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_WriteTimeout" />
          <setter name="set_WriteTimeout" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.PeekableMemoryStream.#ctor(System.Byte[],System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.PeekableMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.PeekableMemoryStream.Peek">
      <apidata name="Peek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IPeekable.Peek">
          <type api="T:Griffin.Networking.Buffers.IPeekable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.PeekableMemoryStream" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.PooledBufferSlice">
      <apidata name="PooledBufferSlice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Buffers.PooledBufferSlice.#ctor(Griffin.Networking.Buffers.IBufferSliceStack,System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.PooledBufferSlice.Dispose" />
        <element api="M:Griffin.Networking.Buffers.PooledBufferSlice.IsMyStack(Griffin.Networking.Buffers.IBufferSliceStack)" />
        <element api="M:Griffin.Networking.Buffers.PooledBufferSlice.Reset" />
        <element api="P:Griffin.Networking.Buffers.PooledBufferSlice.Buffer" />
        <element api="P:Griffin.Networking.Buffers.PooledBufferSlice.Offset" />
        <element api="P:Griffin.Networking.Buffers.PooledBufferSlice.Count" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.PooledBufferSlice.#ctor(Griffin.Networking.Buffers.IBufferSliceStack,System.Byte[],System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="bufferSliceStack">
          <type api="T:Griffin.Networking.Buffers.IBufferSliceStack" ref="true" />
        </parameter>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.PooledBufferSlice" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.PooledBufferSlice.Buffer">
      <apidata name="Buffer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Buffer" />
      <setter name="set_Buffer" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IBufferSlice.Buffer">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.PooledBufferSlice" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.PooledBufferSlice.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Count" />
      <setter name="set_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IBufferSlice.Count">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.PooledBufferSlice" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.PooledBufferSlice.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.PooledBufferSlice" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.PooledBufferSlice.IsMyStack(Griffin.Networking.Buffers.IBufferSliceStack)">
      <apidata name="IsMyStack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stack">
          <type api="T:Griffin.Networking.Buffers.IBufferSliceStack" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.PooledBufferSlice" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.PooledBufferSlice.Offset">
      <apidata name="Offset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Offset" />
      <setter name="set_Offset" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IBufferSlice.Offset">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.PooledBufferSlice" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.PooledBufferSlice.Reset">
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.PooledBufferSlice" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.SliceStream">
      <apidata name="SliceStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.IO.Stream" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Buffers.IBufferStream" ref="true" />
        <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        <type api="T:Griffin.Networking.Buffers.IBufferWriter" ref="true" />
        <type api="T:Griffin.Networking.Buffers.IBufferWrapper" ref="true" />
        <type api="T:Griffin.Networking.Buffers.IPeekable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Buffers.SliceStream.#ctor(Griffin.Networking.Buffers.IBufferSlice)" />
        <element api="M:Griffin.Networking.Buffers.SliceStream.#ctor(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.SliceStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.SliceStream.Read" />
        <element api="M:Griffin.Networking.Buffers.SliceStream.CopyTo(System.IO.Stream,System.Int32)" />
        <element api="M:System.IO.Stream.CopyTo(System.IO.Stream)">
          <apidata name="CopyTo" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:Griffin.Networking.Buffers.SliceStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.SliceStream.Copy(System.IO.Stream)" />
        <element api="M:Griffin.Networking.Buffers.SliceStream.Peek" />
        <element api="M:Griffin.Networking.Buffers.SliceStream.Flush" />
        <element api="M:Griffin.Networking.Buffers.SliceStream.Seek(System.Int64,System.IO.SeekOrigin)" />
        <element api="M:Griffin.Networking.Buffers.SliceStream.SetLength(System.Int64)" />
        <element api="P:Griffin.Networking.Buffers.SliceStream.CanRead" />
        <element api="P:Griffin.Networking.Buffers.SliceStream.CanSeek" />
        <element api="P:Griffin.Networking.Buffers.SliceStream.CanWrite" />
        <element api="P:Griffin.Networking.Buffers.SliceStream.Length" />
        <element api="P:Griffin.Networking.Buffers.SliceStream.Position" />
        <element api="P:Griffin.Networking.Buffers.SliceStream.RemainingLength" />
        <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream)">
          <apidata name="CopyToAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)">
          <apidata name="CopyToAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)">
          <apidata name="CopyToAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="destination">
              <type api="T:System.IO.Stream" ref="true" />
            </parameter>
            <parameter name="bufferSize">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.Close">
          <apidata name="Close" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <implements>
            <member api="M:System.IDisposable.Dispose">
              <type api="T:System.IDisposable" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.Dispose(System.Boolean)">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="disposing">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.FlushAsync">
          <apidata name="FlushAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.FlushAsync(System.Threading.CancellationToken)">
          <apidata name="FlushAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.CreateWaitHandle">
          <apidata name="CreateWaitHandle" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Threading.WaitHandle" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>CreateWaitHandle will be removed eventually.  Please use "new ManualResetEvent(false)" instead.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <apidata name="BeginRead" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.EndRead(System.IAsyncResult)">
          <apidata name="EndRead" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="asyncResult">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)">
          <apidata name="ReadAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <apidata name="ReadAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task`1" ref="true">
              <specialization>
                <type api="T:System.Int32" ref="false" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
          <apidata name="BeginWrite" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="callback">
              <type api="T:System.AsyncCallback" ref="true" />
            </parameter>
            <parameter name="state">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.IAsyncResult" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.EndWrite(System.IAsyncResult)">
          <apidata name="EndWrite" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="asyncResult">
              <type api="T:System.IAsyncResult" ref="true" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)">
          <apidata name="WriteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)">
          <apidata name="WriteAsync" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="buffer">
              <arrayOf rank="1">
                <type api="T:System.Byte" ref="false" />
              </arrayOf>
            </parameter>
            <parameter name="offset">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="count">
              <type api="T:System.Int32" ref="false" />
            </parameter>
            <parameter name="cancellationToken">
              <type api="T:System.Threading.CancellationToken" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Threading.Tasks.Task" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
            <attribute>
              <type api="T:System.Security.Permissions.HostProtectionAttribute" ref="true" />
              <argument>
                <type api="T:System.Security.Permissions.SecurityAction" ref="false" />
                <enumValue>
                  <field name="LinkDemand" />
                </enumValue>
              </argument>
              <assignment name="ExternalThreading">
                <type api="T:System.Boolean" ref="false" />
                <value>True</value>
              </assignment>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.ReadByte">
          <apidata name="ReadByte" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.IO.Stream.WriteByte(System.Byte)">
          <apidata name="WriteByte" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="value">
              <type api="T:System.Byte" ref="false" />
            </parameter>
          </parameters>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
        </element>
        <element api="M:System.IO.Stream.ObjectInvariant">
          <apidata name="ObjectInvariant" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.ObsoleteAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Do not call or override this method.</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.CanTimeout">
          <apidata name="CanTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_CanTimeout" />
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.ReadTimeout">
          <apidata name="ReadTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_ReadTimeout" />
          <setter name="set_ReadTimeout" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="P:System.IO.Stream.WriteTimeout">
          <apidata name="WriteTimeout" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_WriteTimeout" />
          <setter name="set_WriteTimeout" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.IO" />
            <type api="T:System.IO.Stream" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
              <argument>
                <type api="T:System.Boolean" ref="false" />
                <value>False</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <parameters>
            <parameter name="cloneIdentity">
              <type api="T:System.Boolean" ref="false" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.MarshalByRefObject" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.MarshalByRefObject.GetLifetimeService">
          <apidata name="GetLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.InitializeLifetimeService">
          <apidata name="InitializeLifetimeService" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.MarshalByRefObject.CreateObjRef(System.Type)">
          <apidata name="CreateObjRef" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="requestedType">
              <type api="T:System.Type" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Runtime.Remoting.ObjRef" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.MarshalByRefObject" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.SliceStream.#ctor(Griffin.Networking.Buffers.IBufferSlice)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="slice">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.SliceStream.#ctor(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="slice">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.SliceStream.CanRead">
      <apidata name="CanRead" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanRead">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanRead" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.SliceStream.CanSeek">
      <apidata name="CanSeek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanSeek">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanSeek" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.SliceStream.CanWrite">
      <apidata name="CanWrite" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.CanWrite">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_CanWrite" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.SliceStream.Copy(System.IO.Stream)">
      <apidata name="Copy" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IBufferWriter.Copy(System.IO.Stream)">
          <type api="T:Griffin.Networking.Buffers.IBufferWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.SliceStream.CopyTo(System.IO.Stream,System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="other">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IBufferReader.CopyTo(System.IO.Stream,System.Int32)">
          <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.SliceStream.Flush">
      <apidata name="Flush" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Flush">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.SliceStream.Length">
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Length">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.SliceStream.Peek">
      <apidata name="Peek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IPeekable.Peek">
          <type api="T:Griffin.Networking.Buffers.IPeekable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.SliceStream.Position">
      <apidata name="Position" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.Stream.Position">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" set="true" />
      <getter name="get_Position" />
      <setter name="set_Position" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.SliceStream.Read">
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IBufferReader.Read">
          <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.SliceStream.Read(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Read(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IBufferReader.Read(System.Byte[],System.Int32,System.Int32)">
          <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.SliceStream.RemainingLength">
      <apidata name="RemainingLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_RemainingLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IBufferReader.RemainingLength">
          <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.SliceStream.Seek(System.Int64,System.IO.SeekOrigin)">
      <apidata name="Seek" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Seek(System.Int64,System.IO.SeekOrigin)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="offset">
          <type api="T:System.Int64" ref="false" />
        </parameter>
        <parameter name="origin">
          <type api="T:System.IO.SeekOrigin" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.SliceStream.SetLength(System.Int64)">
      <apidata name="SetLength" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.SetLength(System.Int64)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Int64" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.SliceStream.Write(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.Stream.Write(System.Byte[],System.Int32,System.Int32)">
          <type api="T:System.IO.Stream" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IBufferWriter.Write(System.Byte[],System.Int32,System.Int32)">
          <type api="T:Griffin.Networking.Buffers.IBufferWriter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.SliceStream" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Buffers.StringBufferSliceReader">
      <apidata name="StringBufferSliceReader" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.#ctor" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.#ctor(System.Text.Encoding)" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.#ctor(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.Consume" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.Consume(System.Char[])" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.ConsumeUntil(System.Char)" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.ConsumeWhiteSpaces" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.ConsumeWhiteSpaces(System.Char)" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.Contains(System.Char)" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.Read" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadLine" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadQuotedString" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadToEnd(System.String)" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadToEnd" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadToEnd(System.Char)" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadUntil(System.Char)" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadUntil(System.String)" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadWord" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.Assign(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Buffers.StringBufferSliceReader.Assign(System.Byte[],System.Int32,System.Int32)" />
        <element api="P:Griffin.Networking.Buffers.StringBufferSliceReader.Buffer" />
        <element api="P:Griffin.Networking.Buffers.StringBufferSliceReader.EndOfFile" />
        <element api="P:Griffin.Networking.Buffers.StringBufferSliceReader.Current" />
        <element api="P:Griffin.Networking.Buffers.StringBufferSliceReader.HasMore" />
        <element api="P:Griffin.Networking.Buffers.StringBufferSliceReader.Index" />
        <element api="P:Griffin.Networking.Buffers.StringBufferSliceReader.Length" />
        <element api="P:Griffin.Networking.Buffers.StringBufferSliceReader.Peek" />
        <element api="P:Griffin.Networking.Buffers.StringBufferSliceReader.RemainingLength" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.#ctor(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="slice">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.#ctor(System.Text.Encoding)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="encoding">
          <type api="T:System.Text.Encoding" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.Assign(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="buffer">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.Assign(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.Assign(System.Byte[],System.Int32,System.Int32)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.StringBufferSliceReader.Buffer">
      <apidata name="Buffer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Buffer" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.Consume">
      <apidata name="Consume" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.Consume">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.Consume(System.Char[])">
      <apidata name="Consume" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="chars" params="true">
          <arrayOf rank="1">
            <type api="T:System.Char" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.Consume(System.Char[])">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.ConsumeUntil(System.Char)">
      <apidata name="ConsumeUntil" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="delimiter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.ConsumeUntil(System.Char)">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.ConsumeWhiteSpaces">
      <apidata name="ConsumeWhiteSpaces" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.ConsumeWhiteSpaces">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.ConsumeWhiteSpaces(System.Char)">
      <apidata name="ConsumeWhiteSpaces" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="extraCharacter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.ConsumeWhiteSpaces(System.Char)">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.Contains(System.Char)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="ch">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.Contains(System.Char)">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.StringBufferSliceReader.Current">
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IStringBufferReader.Current">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.StringBufferSliceReader.EndOfFile">
      <apidata name="EndOfFile" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndOfFile" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.StringBufferSliceReader.HasMore">
      <apidata name="HasMore" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_HasMore" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IStringBufferReader.HasMore">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.StringBufferSliceReader.Index">
      <apidata name="Index" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Index" />
      <setter name="set_Index" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IStringBufferReader.Index">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.StringBufferSliceReader.Length">
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Length" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IStringBufferReader.Length">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.StringBufferSliceReader.Peek">
      <apidata name="Peek" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Peek" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IStringBufferReader.Peek">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.Read">
      <apidata name="Read" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.Read">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadLine">
      <apidata name="ReadLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadLine">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadQuotedString">
      <apidata name="ReadQuotedString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadQuotedString">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadToEnd">
      <apidata name="ReadToEnd" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadToEnd">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadToEnd(System.Char)">
      <apidata name="ReadToEnd" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="delimiter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadToEnd(System.Char)">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadToEnd(System.String)">
      <apidata name="ReadToEnd" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="delimiters">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadToEnd(System.String)">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadUntil(System.Char)">
      <apidata name="ReadUntil" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="delimiter">
          <type api="T:System.Char" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadUntil(System.Char)">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadUntil(System.String)">
      <apidata name="ReadUntil" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="delimiters">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadUntil(System.String)">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Buffers.StringBufferSliceReader.ReadWord">
      <apidata name="ReadWord" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Buffers.IStringBufferReader.ReadWord">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Buffers.StringBufferSliceReader.RemainingLength">
      <apidata name="RemainingLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_RemainingLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Buffers.IStringBufferReader.RemainingLength">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Buffers" />
        <type api="T:Griffin.Networking.Buffers.StringBufferSliceReader" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Clients">
      <apidata name="Griffin.Networking.Clients" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Clients.ClientBase" />
        <element api="T:Griffin.Networking.Clients.BinaryClient" />
        <element api="T:Griffin.Networking.Clients.ReceivedBufferEventArgs" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Clients.BinaryClient">
      <apidata name="BinaryClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Clients.ClientBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Clients.BinaryClient.OnReceived(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Clients.BinaryClient.#ctor" />
        <element api="E:Griffin.Networking.Clients.BinaryClient.Received" />
        <element api="M:Griffin.Networking.Clients.ClientBase.HandleDisconnect(System.Net.Sockets.SocketAsyncEventArgs)" />
        <element api="M:Griffin.Networking.Clients.ClientBase.Send(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Clients.ClientBase.Send(System.IO.Stream)" />
        <element api="M:Griffin.Networking.Clients.ClientBase.Connect(System.Net.IPEndPoint)" />
        <element api="M:Griffin.Networking.Clients.ClientBase.Close" />
        <element api="E:Griffin.Networking.Clients.ClientBase.Disconnected" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Clients.BinaryClient.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
        <type api="T:Griffin.Networking.Clients.BinaryClient" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Clients.BinaryClient.OnReceived(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name="OnReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Clients.ClientBase.OnReceived(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
          <type api="T:Griffin.Networking.Clients.ClientBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="bytesRead">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
        <type api="T:Griffin.Networking.Clients.BinaryClient" ref="true" />
      </containers>
    </api>
    <api id="E:Griffin.Networking.Clients.BinaryClient.Received">
      <apidata name="Received" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Received" />
      <remover name="remove_Received" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Griffin.Networking.Clients.ReceivedBufferEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Griffin.Networking.Clients.ReceivedBufferEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
        <type api="T:Griffin.Networking.Clients.BinaryClient" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Clients.ClientBase">
      <apidata name="ClientBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Griffin.Networking.Clients.BinaryClient" ref="true" />
          <type api="T:Griffin.Networking.Messaging.MessagingClient" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Clients.ClientBase.#ctor" />
        <element api="M:Griffin.Networking.Clients.ClientBase.HandleDisconnect(System.Net.Sockets.SocketAsyncEventArgs)" />
        <element api="M:Griffin.Networking.Clients.ClientBase.OnReceived(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Clients.ClientBase.Send(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Clients.ClientBase.Send(System.IO.Stream)" />
        <element api="M:Griffin.Networking.Clients.ClientBase.Connect(System.Net.IPEndPoint)" />
        <element api="M:Griffin.Networking.Clients.ClientBase.Close" />
        <element api="E:Griffin.Networking.Clients.ClientBase.Disconnected" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Clients.ClientBase.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
        <type api="T:Griffin.Networking.Clients.ClientBase" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Clients.ClientBase.Close">
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
        <type api="T:Griffin.Networking.Clients.ClientBase" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Clients.ClientBase.Connect(System.Net.IPEndPoint)">
      <apidata name="Connect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="remoteEndPoint">
          <type api="T:System.Net.IPEndPoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
        <type api="T:Griffin.Networking.Clients.ClientBase" ref="true" />
      </containers>
    </api>
    <api id="E:Griffin.Networking.Clients.ClientBase.Disconnected">
      <apidata name="Disconnected" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Disconnected" />
      <remover name="remove_Disconnected" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
        <type api="T:Griffin.Networking.Clients.ClientBase" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Clients.ClientBase.HandleDisconnect(System.Net.Sockets.SocketAsyncEventArgs)">
      <apidata name="HandleDisconnect" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="socketAsyncEventArgs">
          <type api="T:System.Net.Sockets.SocketAsyncEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
        <type api="T:Griffin.Networking.Clients.ClientBase" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Clients.ClientBase.OnReceived(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name="OnReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="buffer">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="bytesRead">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
        <type api="T:Griffin.Networking.Clients.ClientBase" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Clients.ClientBase.Send(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="slice">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
        <type api="T:Griffin.Networking.Clients.ClientBase" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Clients.ClientBase.Send(System.IO.Stream)">
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
        <type api="T:Griffin.Networking.Clients.ClientBase" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Clients.ReceivedBufferEventArgs">
      <apidata name="ReceivedBufferEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Clients.ReceivedBufferEventArgs.#ctor(Griffin.Networking.Buffers.IBufferReader)" />
        <element api="P:Griffin.Networking.Clients.ReceivedBufferEventArgs.BufferReader" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Clients.ReceivedBufferEventArgs.#ctor(Griffin.Networking.Buffers.IBufferReader)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="bufferReader">
          <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
        <type api="T:Griffin.Networking.Clients.ReceivedBufferEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Clients.ReceivedBufferEventArgs.BufferReader">
      <apidata name="BufferReader" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_BufferReader" />
      <setter name="set_BufferReader" />
      <returns>
        <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Clients" />
        <type api="T:Griffin.Networking.Clients.ReceivedBufferEventArgs" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http">
      <apidata name="Griffin.Networking.Http" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.HttpException" />
        <element api="T:Griffin.Networking.Http.BadRequestException" />
        <element api="T:Griffin.Networking.Http.HttpMessageBuilder" />
        <element api="T:Griffin.Networking.Http.HttpMessageFactory" />
        <element api="T:Griffin.Networking.Http.HttpMessageSerializer" />
        <element api="T:Griffin.Networking.Http.HttpService" />
        <element api="T:Griffin.Networking.Http.HttpServerClientContext" />
        <element api="T:Griffin.Networking.Http.HttpServerClientFactory" />
        <element api="T:Griffin.Networking.Http.IParameterCollection" />
        <element api="T:Griffin.Networking.Http.IResponseCookie" />
        <element api="T:Griffin.Networking.Http.NameValueParser" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.BadRequestException">
      <apidata name="BadRequestException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Http.HttpException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.BadRequestException.#ctor(System.String)" />
        <element api="M:Griffin.Networking.Http.BadRequestException.#ctor(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Http.BadRequestException.ToString" />
        <element api="P:Griffin.Networking.Http.HttpException.StatusCode" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_HelpLink">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_HResult">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.BadRequestException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.BadRequestException" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.BadRequestException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="inner">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.BadRequestException" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.BadRequestException.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.ToString">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Runtime.InteropServices._Exception.ToString">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.BadRequestException" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.HttpException">
      <apidata name="HttpException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Griffin.Networking.Http.BadRequestException" ref="true" />
          <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewNotFoundException" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.HttpException.#ctor(System.Net.HttpStatusCode,System.String)" />
        <element api="P:Griffin.Networking.Http.HttpException.StatusCode" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_HelpLink">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_HResult">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpException.#ctor(System.Net.HttpStatusCode,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="statusCode">
          <type api="T:System.Net.HttpStatusCode" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpException" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.HttpException.StatusCode">
      <apidata name="StatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_StatusCode" />
      <setter name="set_StatusCode" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpException" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.HttpMessageBuilder">
      <apidata name="HttpMessageBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Messaging.IMessageBuilder" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.HttpMessageBuilder.#ctor" />
        <element api="M:Griffin.Networking.Http.HttpMessageBuilder.Dispose" />
        <element api="M:Griffin.Networking.Http.HttpMessageBuilder.Append(Griffin.Networking.Buffers.IBufferReader)" />
        <element api="M:Griffin.Networking.Http.HttpMessageBuilder.TryDequeue(System.Object@)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpMessageBuilder.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpMessageBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpMessageBuilder.Append(Griffin.Networking.Buffers.IBufferReader)">
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Messaging.IMessageBuilder.Append(Griffin.Networking.Buffers.IBufferReader)">
          <type api="T:Griffin.Networking.Messaging.IMessageBuilder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpMessageBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpMessageBuilder.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpMessageBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpMessageBuilder.TryDequeue(System.Object@)">
      <apidata name="TryDequeue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Messaging.IMessageBuilder.TryDequeue(System.Object@)">
          <type api="T:Griffin.Networking.Messaging.IMessageBuilder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpMessageBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.HttpMessageFactory">
      <apidata name="HttpMessageFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Messaging.IMessageFormatterFactory" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.HttpMessageFactory.CreateSerializer" />
        <element api="M:Griffin.Networking.Http.HttpMessageFactory.CreateBuilder" />
        <element api="M:Griffin.Networking.Http.HttpMessageFactory.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpMessageFactory.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpMessageFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpMessageFactory.CreateBuilder">
      <apidata name="CreateBuilder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Griffin.Networking.Messaging.IMessageBuilder" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Messaging.IMessageFormatterFactory.CreateBuilder">
          <type api="T:Griffin.Networking.Messaging.IMessageFormatterFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpMessageFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpMessageFactory.CreateSerializer">
      <apidata name="CreateSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Griffin.Networking.Messaging.IMessageSerializer" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Messaging.IMessageFormatterFactory.CreateSerializer">
          <type api="T:Griffin.Networking.Messaging.IMessageFormatterFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpMessageFactory" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.HttpMessageSerializer">
      <apidata name="HttpMessageSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Messaging.IMessageSerializer" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.HttpMessageSerializer.Serialize(System.Object,Griffin.Networking.Buffers.IBufferWriter)" />
        <element api="M:Griffin.Networking.Http.HttpMessageSerializer.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpMessageSerializer.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpMessageSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpMessageSerializer.Serialize(System.Object,Griffin.Networking.Buffers.IBufferWriter)">
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:Griffin.Networking.Buffers.IBufferWriter" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Messaging.IMessageSerializer.Serialize(System.Object,Griffin.Networking.Buffers.IBufferWriter)">
          <type api="T:Griffin.Networking.Messaging.IMessageSerializer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpMessageSerializer" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.HttpServerClientContext">
      <apidata name="HttpServerClientContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.HttpServerClientContext.#ctor(Griffin.Networking.Buffers.IBufferSlice)" />
        <element api="M:Griffin.Networking.Http.HttpServerClientContext.HandleRead(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Http.HttpServerClientContext.OnDisconnect(System.Net.Sockets.SocketError)" />
        <element api="M:Griffin.Networking.Http.HttpServerClientContext.Send(Griffin.Networking.Http.Protocol.IMessage)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Send(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Send(System.IO.Stream)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Close" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Close(System.Boolean)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.TriggerDisconnect(System.Net.Sockets.SocketError)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.TriggerClientReceive(System.Object)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Assign(System.Net.Sockets.Socket,Griffin.Networking.Servers.IServerService)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.SetWriteBuffer(Griffin.Networking.Buffers.IBufferSlice)" />
        <element api="P:Griffin.Networking.Servers.ServerClientContext.ReadBuffer" />
        <element api="P:Griffin.Networking.Servers.ServerClientContext.RemoteEndPoint" />
        <element api="E:Griffin.Networking.Servers.ServerClientContext.Disconnected" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpServerClientContext.#ctor(Griffin.Networking.Buffers.IBufferSlice)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="readBuffer">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpServerClientContext.HandleRead(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name="HandleRead" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Servers.ServerClientContext.HandleRead(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
          <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="readBuffer">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="bytesReceived">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpServerClientContext.OnDisconnect(System.Net.Sockets.SocketError)">
      <apidata name="OnDisconnect" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Servers.ServerClientContext.OnDisconnect(System.Net.Sockets.SocketError)">
          <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="error">
          <type api="T:System.Net.Sockets.SocketError" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpServerClientContext.Send(Griffin.Networking.Http.Protocol.IMessage)">
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.HttpServerClientFactory">
      <apidata name="HttpServerClientFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Servers.IServiceFactory" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.HttpServerClientFactory.CreateClient(System.Net.EndPoint)" />
        <element api="M:Griffin.Networking.Http.HttpServerClientFactory.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpServerClientFactory.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpServerClientFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpServerClientFactory.CreateClient(System.Net.EndPoint)">
      <apidata name="CreateClient" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="remoteEndPoint">
          <type api="T:System.Net.EndPoint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Servers.IServiceFactory.CreateClient(System.Net.EndPoint)">
          <type api="T:Griffin.Networking.Servers.IServiceFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpServerClientFactory" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.HttpService">
      <apidata name="HttpService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Griffin.Networking.Http.Server.HttpServerWorker" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.HttpService.#ctor(Griffin.Networking.Buffers.IBufferSliceStack)" />
        <element api="M:Griffin.Networking.Http.HttpService.Dispose" />
        <element api="M:Griffin.Networking.Http.HttpService.Assign(Griffin.Networking.Servers.IServerClientContext)" />
        <element api="M:Griffin.Networking.Http.HttpService.HandleReceive(System.Object)" />
        <element api="M:Griffin.Networking.Http.HttpService.Send(Griffin.Networking.Http.Protocol.IMessage)" />
        <element api="P:Griffin.Networking.Http.HttpService.Context" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpService.#ctor(Griffin.Networking.Buffers.IBufferSliceStack)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="sliceStack">
          <type api="T:Griffin.Networking.Buffers.IBufferSliceStack" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpService.Assign(Griffin.Networking.Servers.IServerClientContext)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Servers.IServerClientContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Servers.IServerService.Assign(Griffin.Networking.Servers.IServerClientContext)">
          <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpService" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.HttpService.Context">
      <apidata name="Context" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Context" />
      <setter name="set_Context" />
      <returns>
        <type api="T:Griffin.Networking.Servers.IServerClientContext" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpService.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpService.HandleReceive(System.Object)">
      <apidata name="HandleReceive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Servers.IServerService.HandleReceive(System.Object)">
          <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.HttpService.Send(Griffin.Networking.Http.Protocol.IMessage)">
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.HttpService" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.IParameterCollection">
      <apidata name="IParameterCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Griffin.Networking.Http.Protocol.IParameter" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Griffin.Networking.Http.Implementation.ParameterCollection" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.IParameterCollection.Get(System.String)" />
        <element api="M:Griffin.Networking.Http.IParameterCollection.Add(System.String,System.String)" />
        <element api="M:Griffin.Networking.Http.IParameterCollection.Exists(System.String)" />
        <element api="P:Griffin.Networking.Http.IParameterCollection.Count" />
        <element api="P:Griffin.Networking.Http.IParameterCollection.Item(System.String)" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:Griffin.Networking.Http.Protocol.IParameter" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Griffin.Networking.Http.Protocol.IParameter" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.IEnumerable.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IEnumerable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.IParameterCollection.Add(System.String,System.String)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.IParameterCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.IParameterCollection.Exists(System.String)">
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.IParameterCollection.Get(System.String)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IParameter" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.IParameterCollection.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.IResponseCookie">
      <apidata name="IResponseCookie" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:Griffin.Networking.Http.Protocol.IHttpCookie" ref="true" />
      </implements>
      <elements>
        <element api="P:Griffin.Networking.Http.IResponseCookie.Expires" />
        <element api="P:Griffin.Networking.Http.IResponseCookie.Path" />
        <element api="P:Griffin.Networking.Http.Protocol.IHttpCookie.Name" />
        <element api="P:Griffin.Networking.Http.Protocol.IHttpCookie.Value" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.IResponseCookie.Expires">
      <apidata name="Expires" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Expires" />
      <setter name="set_Expires" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.IResponseCookie" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.IResponseCookie.Path">
      <apidata name="Path" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Path" />
      <setter name="set_Path" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.IResponseCookie" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.NameValueParser">
      <apidata name="NameValueParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.NameValueParser.Parse(System.String,Griffin.Networking.Http.IParameterCollection)" />
        <element api="M:Griffin.Networking.Http.NameValueParser.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.NameValueParser.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.NameValueParser" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.NameValueParser.Parse(System.String,Griffin.Networking.Http.IParameterCollection)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="target">
          <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http" />
        <type api="T:Griffin.Networking.Http.NameValueParser" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Handlers">
      <apidata name="Griffin.Networking.Http.Handlers" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Handlers.AuthenticationHandler" />
        <element api="T:Griffin.Networking.Http.Handlers.BodyDecoder" />
        <element api="T:Griffin.Networking.Http.Handlers.BufferTracer" />
        <element api="T:Griffin.Networking.Http.Handlers.HttpErrorHandler" />
        <element api="T:Griffin.Networking.Http.Handlers.IScopeListener" />
        <element api="T:Griffin.Networking.Http.Handlers.PipelineFailureHandler" />
        <element api="T:Griffin.Networking.Http.Handlers.FileHandler" />
        <element api="T:Griffin.Networking.Http.Handlers.RequestScope" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Handlers.AuthenticationHandler">
      <apidata name="AuthenticationHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Handlers.AuthenticationHandler.#ctor(Griffin.Networking.Http.Services.Authentication.IAuthenticator,Griffin.Networking.Http.Services.Authentication.IPrincipalFactory)" />
        <element api="M:Griffin.Networking.Http.Handlers.AuthenticationHandler.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:Griffin.Networking.Http.Handlers.AuthenticationHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.AuthenticationHandler.#ctor(Griffin.Networking.Http.Services.Authentication.IAuthenticator,Griffin.Networking.Http.Services.Authentication.IPrincipalFactory)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="authenticator">
          <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticator" ref="true" />
        </parameter>
        <parameter name="principalFactory">
          <type api="T:Griffin.Networking.Http.Services.Authentication.IPrincipalFactory" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.AuthenticationHandler" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.AuthenticationHandler.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleDownstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IDownstreamHandler.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.AuthenticationHandler" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.AuthenticationHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleUpstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IUpstreamHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.AuthenticationHandler" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Handlers.BodyDecoder">
      <apidata name="BodyDecoder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Handlers.BodyDecoder.#ctor(Griffin.Networking.Http.Services.IBodyDecoder,System.Int32,System.Int32)" />
        <element api="M:Griffin.Networking.Http.Handlers.BodyDecoder.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.BodyDecoder.#ctor(Griffin.Networking.Http.Services.IBodyDecoder,System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="decoderService">
          <type api="T:Griffin.Networking.Http.Services.IBodyDecoder" ref="true" />
        </parameter>
        <parameter name="bufferSize">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="sizeLimit">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.BodyDecoder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.BodyDecoder.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleUpstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IUpstreamHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.BodyDecoder" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Handlers.BufferTracer">
      <apidata name="BufferTracer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Handlers.BufferTracer.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:Griffin.Networking.Http.Handlers.BufferTracer.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:Griffin.Networking.Http.Handlers.BufferTracer.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.BufferTracer.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.BufferTracer" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.BufferTracer.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleDownstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IDownstreamHandler.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.BufferTracer" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.BufferTracer.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleUpstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IUpstreamHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.BufferTracer" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Handlers.FileHandler">
      <apidata name="FileHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Handlers.FileHandler.#ctor(Griffin.Networking.Http.Services.Files.IFileService,Griffin.Networking.Http.Services.Files.MimeTypeProvider)" />
        <element api="M:Griffin.Networking.Http.Handlers.FileHandler.#ctor" />
        <element api="M:Griffin.Networking.Http.Handlers.FileHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.FileHandler.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.FileHandler" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.FileHandler.#ctor(Griffin.Networking.Http.Services.Files.IFileService,Griffin.Networking.Http.Services.Files.MimeTypeProvider)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="fileService">
          <type api="T:Griffin.Networking.Http.Services.Files.IFileService" ref="true" />
        </parameter>
        <parameter name="mimeTypeProvider">
          <type api="T:Griffin.Networking.Http.Services.Files.MimeTypeProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.FileHandler" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.FileHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleUpstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IUpstreamHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.FileHandler" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Handlers.HttpErrorHandler">
      <apidata name="HttpErrorHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Handlers.HttpErrorHandler.#ctor(Griffin.Networking.Http.Services.Errors.IErrorFormatter)" />
        <element api="M:Griffin.Networking.Http.Handlers.HttpErrorHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:Griffin.Networking.Http.Handlers.HttpErrorHandler.LogError(Griffin.Networking.Http.Protocol.IRequest,System.Exception)" />
        <element api="M:Griffin.Networking.Http.Handlers.HttpErrorHandler.FormatException(Griffin.Networking.Http.Protocol.IResponse,Griffin.Networking.Http.Messages.ReceivedHttpRequest,Griffin.Networking.Http.HttpException)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.HttpErrorHandler.#ctor(Griffin.Networking.Http.Services.Errors.IErrorFormatter)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="formatter">
          <type api="T:Griffin.Networking.Http.Services.Errors.IErrorFormatter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.HttpErrorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.HttpErrorHandler.FormatException(Griffin.Networking.Http.Protocol.IResponse,Griffin.Networking.Http.Messages.ReceivedHttpRequest,Griffin.Networking.Http.HttpException)">
      <apidata name="FormatException" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="response">
          <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
        </parameter>
        <parameter name="msg">
          <type api="T:Griffin.Networking.Http.Messages.ReceivedHttpRequest" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:Griffin.Networking.Http.HttpException" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.HttpErrorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.HttpErrorHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleUpstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IUpstreamHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.HttpErrorHandler" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.HttpErrorHandler.LogError(Griffin.Networking.Http.Protocol.IRequest,System.Exception)">
      <apidata name="LogError" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
        <parameter name="err">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.HttpErrorHandler" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Handlers.IScopeListener">
      <apidata name="IScopeListener" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:Griffin.Networking.Http.Handlers.IScopeListener.ScopeStarted(System.Object)" />
        <element api="M:Griffin.Networking.Http.Handlers.IScopeListener.ScopeEnded(System.Object)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.IScopeListener.ScopeEnded(System.Object)">
      <apidata name="ScopeEnded" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.IScopeListener" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.IScopeListener.ScopeStarted(System.Object)">
      <apidata name="ScopeStarted" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.IScopeListener" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Handlers.PipelineFailureHandler">
      <apidata name="PipelineFailureHandler" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Handlers.PipelineFailureHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:Griffin.Networking.Http.Handlers.PipelineFailureHandler.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.PipelineFailureHandler.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.PipelineFailureHandler" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.PipelineFailureHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleUpstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IUpstreamHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.PipelineFailureHandler" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Handlers.RequestScope">
      <apidata name="RequestScope" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Handlers.RequestScope.#ctor(Griffin.Networking.Http.Handlers.IScopeListener)" />
        <element api="M:Griffin.Networking.Http.Handlers.RequestScope.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:Griffin.Networking.Http.Handlers.RequestScope.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.RequestScope.#ctor(Griffin.Networking.Http.Handlers.IScopeListener)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="listener">
          <type api="T:Griffin.Networking.Http.Handlers.IScopeListener" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.RequestScope" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.RequestScope.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleDownstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IDownstreamHandler.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.RequestScope" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Handlers.RequestScope.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleUpstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IUpstreamHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Handlers" />
        <type api="T:Griffin.Networking.Http.Handlers.RequestScope" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Implementation">
      <apidata name="Griffin.Networking.Http.Implementation" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Implementation.HttpHeaderSerializer" />
        <element api="T:Griffin.Networking.Http.Implementation.HttpHeaderParser" />
        <element api="T:Griffin.Networking.Http.Implementation.HeaderEventArgs" />
        <element api="T:Griffin.Networking.Http.Implementation.RequestLineEventArgs" />
        <element api="T:Griffin.Networking.Http.Implementation.HttpMessage" />
        <element api="T:Griffin.Networking.Http.Implementation.HttpRequest" />
        <element api="T:Griffin.Networking.Http.Implementation.HttpResponse" />
        <element api="T:Griffin.Networking.Http.Implementation.IHttpParser" />
        <element api="T:Griffin.Networking.Http.Implementation.ParameterCollection" />
        <element api="T:Griffin.Networking.Http.Implementation.HttpParser" />
        <element api="T:Griffin.Networking.Http.Implementation.HttpFile" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Implementation.HeaderEventArgs">
      <apidata name="HeaderEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Implementation.HeaderEventArgs.Set(System.String,System.String)" />
        <element api="M:Griffin.Networking.Http.Implementation.HeaderEventArgs.#ctor" />
        <element api="P:Griffin.Networking.Http.Implementation.HeaderEventArgs.Value" />
        <element api="P:Griffin.Networking.Http.Implementation.HeaderEventArgs.Name" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HeaderEventArgs.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HeaderEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HeaderEventArgs.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HeaderEventArgs" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HeaderEventArgs.Set(System.String,System.String)">
      <apidata name="Set" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HeaderEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HeaderEventArgs.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HeaderEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Implementation.HttpFile">
      <apidata name="HttpFile" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Protocol.IHttpFile" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Implementation.HttpFile.Dispose" />
        <element api="M:Griffin.Networking.Http.Implementation.HttpFile.#ctor" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpFile.Name" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpFile.OriginalFileName" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpFile.ContentType" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpFile.TempFileName" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpFile.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpFile.ContentType">
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentType" />
      <setter name="set_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IHttpFile.ContentType">
          <type api="T:Griffin.Networking.Http.Protocol.IHttpFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpFile" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpFile.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpFile.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IHttpFile.Name">
          <type api="T:Griffin.Networking.Http.Protocol.IHttpFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpFile.OriginalFileName">
      <apidata name="OriginalFileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_OriginalFileName" />
      <setter name="set_OriginalFileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IHttpFile.OriginalFileName">
          <type api="T:Griffin.Networking.Http.Protocol.IHttpFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpFile.TempFileName">
      <apidata name="TempFileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TempFileName" />
      <setter name="set_TempFileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IHttpFile.TempFileName">
          <type api="T:Griffin.Networking.Http.Protocol.IHttpFile" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpFile" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Implementation.HttpHeaderParser">
      <apidata name="HttpHeaderParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Implementation.HttpHeaderParser.#ctor" />
        <element api="M:Griffin.Networking.Http.Implementation.HttpHeaderParser.Parse(Griffin.Networking.Buffers.IBufferReader)" />
        <element api="M:Griffin.Networking.Http.Implementation.HttpHeaderParser.Reset" />
        <element api="E:Griffin.Networking.Http.Implementation.HttpHeaderParser.Completed" />
        <element api="E:Griffin.Networking.Http.Implementation.HttpHeaderParser.HeaderParsed" />
        <element api="E:Griffin.Networking.Http.Implementation.HttpHeaderParser.RequestLineParsed" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpHeaderParser.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpHeaderParser" ref="true" />
      </containers>
    </api>
    <api id="E:Griffin.Networking.Http.Implementation.HttpHeaderParser.Completed">
      <apidata name="Completed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Completed" />
      <remover name="remove_Completed" />
      <eventhandler>
        <type api="T:System.EventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.EventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpHeaderParser" ref="true" />
      </containers>
    </api>
    <api id="E:Griffin.Networking.Http.Implementation.HttpHeaderParser.HeaderParsed">
      <apidata name="HeaderParsed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_HeaderParsed" />
      <remover name="remove_HeaderParsed" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Griffin.Networking.Http.Implementation.HeaderEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Griffin.Networking.Http.Implementation.HeaderEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpHeaderParser" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpHeaderParser.Parse(Griffin.Networking.Buffers.IBufferReader)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpHeaderParser" ref="true" />
      </containers>
    </api>
    <api id="E:Griffin.Networking.Http.Implementation.HttpHeaderParser.RequestLineParsed">
      <apidata name="RequestLineParsed" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RequestLineParsed" />
      <remover name="remove_RequestLineParsed" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Griffin.Networking.Http.Implementation.RequestLineEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Griffin.Networking.Http.Implementation.RequestLineEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpHeaderParser" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpHeaderParser.Reset">
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpHeaderParser" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Implementation.HttpHeaderSerializer">
      <apidata name="HttpHeaderSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Implementation.HttpHeaderSerializer.SerializeResponse(Griffin.Networking.Http.Protocol.IResponse,Griffin.Networking.Buffers.IBufferWriter)" />
        <element api="M:Griffin.Networking.Http.Implementation.HttpHeaderSerializer.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpHeaderSerializer.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpHeaderSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpHeaderSerializer.SerializeResponse(Griffin.Networking.Http.Protocol.IResponse,Griffin.Networking.Buffers.IBufferWriter)">
      <apidata name="SerializeResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="response">
          <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:Griffin.Networking.Buffers.IBufferWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpHeaderSerializer" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Implementation.HttpMessage">
      <apidata name="HttpMessage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
          <type api="T:Griffin.Networking.Http.Implementation.HttpResponse" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Implementation.HttpMessage.AddHeader(System.String,System.String)" />
        <element api="M:Griffin.Networking.Http.Implementation.HttpMessage.#ctor" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.ProtocolVersion" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.Body" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.ContentLength" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.ContentEncoding" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.Headers" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpMessage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpMessage" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpMessage.AddHeader(System.String,System.String)">
      <apidata name="AddHeader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Protocol.IMessage.AddHeader(System.String,System.String)">
          <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpMessage.Body">
      <apidata name="Body" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Body" />
      <setter name="set_Body" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IMessage.Body">
          <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpMessage.ContentEncoding">
      <apidata name="ContentEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentEncoding" />
      <setter name="set_ContentEncoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IMessage.ContentEncoding">
          <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpMessage.ContentLength">
      <apidata name="ContentLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentLength" />
      <setter name="set_ContentLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IMessage.ContentLength">
          <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpMessage.Headers">
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IHeaderCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IMessage.Headers">
          <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpMessage.ProtocolVersion">
      <apidata name="ProtocolVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ProtocolVersion" />
      <setter name="set_ProtocolVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IMessage.ProtocolVersion">
          <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Implementation.HttpParser">
      <apidata name="HttpParser" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Implementation.IHttpParser" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Implementation.HttpParser.#ctor" />
        <element api="M:Griffin.Networking.Http.Implementation.HttpParser.Parse(Griffin.Networking.Buffers.IStringBufferReader)" />
        <element api="M:Griffin.Networking.Http.Implementation.HttpParser.Reset" />
        <element api="M:Griffin.Networking.Http.Implementation.HttpParser.OnFirstLine(System.String[])" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpParser.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpParser" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpParser.OnFirstLine(System.String[])">
      <apidata name="OnFirstLine" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="words">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpParser" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpParser.Parse(Griffin.Networking.Buffers.IStringBufferReader)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Implementation.IHttpParser.Parse(Griffin.Networking.Buffers.IStringBufferReader)">
          <type api="T:Griffin.Networking.Http.Implementation.IHttpParser" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpParser" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpParser.Reset">
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Griffin.Networking.Http.Implementation.IHttpParser.Reset">
          <type api="T:Griffin.Networking.Http.Implementation.IHttpParser" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpParser" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Implementation.HttpRequest">
      <apidata name="HttpRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Http.Implementation.HttpMessage" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Implementation.HttpRequest.#ctor" />
        <element api="M:Griffin.Networking.Http.Implementation.HttpRequest.#ctor(System.String,System.String,System.String)" />
        <element api="M:Griffin.Networking.Http.Implementation.HttpRequest.CreateResponse(System.Net.HttpStatusCode,System.String)" />
        <element api="M:Griffin.Networking.Http.Implementation.HttpRequest.AddHeader(System.String,System.String)" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpRequest.KeepAlive" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpRequest.ContentType" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpRequest.Cookies" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpRequest.Files" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpRequest.Form" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpRequest.RemoteEndPoint" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpRequest.IsAjax" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpRequest.Method" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpRequest.QueryString" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpRequest.Uri" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.ProtocolVersion" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.Body" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.ContentLength" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.ContentEncoding" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.Headers" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpRequest.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpRequest.#ctor(System.String,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="httpMethod">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="url">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="httpVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpRequest.AddHeader(System.String,System.String)">
      <apidata name="AddHeader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Http.Implementation.HttpMessage.AddHeader(System.String,System.String)">
          <type api="T:Griffin.Networking.Http.Implementation.HttpMessage" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Protocol.IMessage.AddHeader(System.String,System.String)">
          <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
        </member>
        <member api="M:Griffin.Networking.Http.Protocol.IMessage.AddHeader(System.String,System.String)">
          <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpRequest.ContentType">
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IRequest.ContentType">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpRequest.Cookies">
      <apidata name="Cookies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Cookies" />
      <returns>
        <type api="T:Griffin.Networking.Http.Specification.IHttpCookieCollection`1" ref="true">
          <specialization>
            <type api="T:Griffin.Networking.Http.Protocol.IHttpCookie" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IRequest.Cookies">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpRequest.CreateResponse(System.Net.HttpStatusCode,System.String)">
      <apidata name="CreateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="code">
          <type api="T:System.Net.HttpStatusCode" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Protocol.IRequest.CreateResponse(System.Net.HttpStatusCode,System.String)">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpRequest.Files">
      <apidata name="Files" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Files" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IHttpFileCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IRequest.Files">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpRequest.Form">
      <apidata name="Form" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Form" />
      <returns>
        <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IRequest.Form">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpRequest.IsAjax">
      <apidata name="IsAjax" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_IsAjax" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IRequest.IsAjax">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpRequest.KeepAlive">
      <apidata name="KeepAlive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_KeepAlive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IRequest.KeepAlive">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpRequest.Method">
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Method" />
      <setter name="set_Method" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IRequest.Method">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpRequest.QueryString">
      <apidata name="QueryString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_QueryString" />
      <returns>
        <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IRequest.QueryString">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpRequest.RemoteEndPoint">
      <apidata name="RemoteEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_RemoteEndPoint" />
      <setter name="set_RemoteEndPoint" />
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IRequest.RemoteEndPoint">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpRequest.Uri">
      <apidata name="Uri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Uri" />
      <setter name="set_Uri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IRequest.Uri">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Implementation.HttpResponse">
      <apidata name="HttpResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Http.Implementation.HttpMessage" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
        <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Implementation.HttpResponse.#ctor(System.String,System.Int32,System.String)" />
        <element api="M:Griffin.Networking.Http.Implementation.HttpResponse.#ctor(System.String,System.Net.HttpStatusCode,System.String)" />
        <element api="M:Griffin.Networking.Http.Implementation.HttpResponse.Redirect(System.String)" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpResponse.KeepAlive" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpResponse.Cookies" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpResponse.StatusDescription" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpResponse.StatusCode" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpResponse.ContentType" />
        <element api="M:Griffin.Networking.Http.Implementation.HttpMessage.AddHeader(System.String,System.String)" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.ProtocolVersion" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.Body" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.ContentLength" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.ContentEncoding" />
        <element api="P:Griffin.Networking.Http.Implementation.HttpMessage.Headers" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpResponse.#ctor(System.String,System.Int32,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="httpVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpResponse" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpResponse.#ctor(System.String,System.Net.HttpStatusCode,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="httpVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="code">
          <type api="T:System.Net.HttpStatusCode" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpResponse" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpResponse.ContentType">
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentType" />
      <setter name="set_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IResponse.ContentType">
          <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpResponse" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpResponse.Cookies">
      <apidata name="Cookies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Cookies" />
      <returns>
        <type api="T:Griffin.Networking.Http.Specification.IHttpCookieCollection`1" ref="true">
          <specialization>
            <type api="T:Griffin.Networking.Http.IResponseCookie" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IResponse.Cookies">
          <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpResponse" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpResponse.KeepAlive">
      <apidata name="KeepAlive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_KeepAlive" />
      <setter name="set_KeepAlive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IResponse.KeepAlive">
          <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpResponse" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.HttpResponse.Redirect(System.String)">
      <apidata name="Redirect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Protocol.IResponse.Redirect(System.String)">
          <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpResponse" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpResponse.StatusCode">
      <apidata name="StatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_StatusCode" />
      <setter name="set_StatusCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IResponse.StatusCode">
          <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpResponse" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.HttpResponse.StatusDescription">
      <apidata name="StatusDescription" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_StatusDescription" />
      <setter name="set_StatusDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Protocol.IResponse.StatusDescription">
          <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpResponse" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Implementation.IHttpParser">
      <apidata name="IHttpParser" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.Implementation.HttpParser" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Implementation.IHttpParser.Parse(Griffin.Networking.Buffers.IStringBufferReader)" />
        <element api="M:Griffin.Networking.Http.Implementation.IHttpParser.Reset" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.IHttpParser.Parse(Griffin.Networking.Buffers.IStringBufferReader)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:Griffin.Networking.Buffers.IStringBufferReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.IHttpParser" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.IHttpParser.Reset">
      <apidata name="Reset" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.IHttpParser" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Implementation.ParameterCollection">
      <apidata name="ParameterCollection" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Griffin.Networking.Http.Protocol.IParameter" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Implementation.ParameterCollection.GetEnumerator" />
        <element api="M:Griffin.Networking.Http.Implementation.ParameterCollection.Get(System.String)" />
        <element api="M:Griffin.Networking.Http.Implementation.ParameterCollection.Add(System.String,System.String)" />
        <element api="M:Griffin.Networking.Http.Implementation.ParameterCollection.Exists(System.String)" />
        <element api="M:Griffin.Networking.Http.Implementation.ParameterCollection.Clear" />
        <element api="M:Griffin.Networking.Http.Implementation.ParameterCollection.#ctor" />
        <element api="P:Griffin.Networking.Http.Implementation.ParameterCollection.Count" />
        <element api="P:Griffin.Networking.Http.Implementation.ParameterCollection.Item(System.String)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.ParameterCollection.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.ParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.ParameterCollection.Add(System.String,System.String)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.IParameterCollection.Add(System.String,System.String)">
          <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.ParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.ParameterCollection.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.ParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.ParameterCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.IParameterCollection.Count">
          <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.ParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.ParameterCollection.Exists(System.String)">
      <apidata name="Exists" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.IParameterCollection.Exists(System.String)">
          <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.ParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.ParameterCollection.Get(System.String)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IParameter" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.IParameterCollection.Get(System.String)">
          <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.ParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.ParameterCollection.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:Griffin.Networking.Http.Protocol.IParameter" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Griffin.Networking.Http.Protocol.IParameter" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.ParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.ParameterCollection.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.IParameterCollection.Item(System.String)">
          <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.ParameterCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Implementation.RequestLineEventArgs">
      <apidata name="RequestLineEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Implementation.RequestLineEventArgs.#ctor(System.String,System.String,System.String)" />
        <element api="P:Griffin.Networking.Http.Implementation.RequestLineEventArgs.Verb" />
        <element api="P:Griffin.Networking.Http.Implementation.RequestLineEventArgs.Url" />
        <element api="P:Griffin.Networking.Http.Implementation.RequestLineEventArgs.HttpVersion" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.RequestLineEventArgs.#ctor(System.String,System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="verb">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="url">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="httpVersion">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.RequestLineEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.RequestLineEventArgs.HttpVersion">
      <apidata name="HttpVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_HttpVersion" />
      <setter name="set_HttpVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.RequestLineEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.RequestLineEventArgs.Url">
      <apidata name="Url" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Url" />
      <setter name="set_Url" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.RequestLineEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.RequestLineEventArgs.Verb">
      <apidata name="Verb" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Verb" />
      <setter name="set_Verb" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation" />
        <type api="T:Griffin.Networking.Http.Implementation.RequestLineEventArgs" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Implementation.Infrastructure">
      <apidata name="Griffin.Networking.Http.Implementation.Infrastructure" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Implementation.Infrastructure.ReaderResult" />
        <element api="T:Griffin.Networking.Http.Implementation.Infrastructure.TextReaderExtensions" />
        <element api="T:Griffin.Networking.Http.Implementation.Infrastructure.UrlDecoder" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Implementation.Infrastructure.ReaderResult">
      <apidata name="ReaderResult" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Implementation.Infrastructure.ReaderResult.#ctor" />
        <element api="P:Griffin.Networking.Http.Implementation.Infrastructure.ReaderResult.Value" />
        <element api="P:Griffin.Networking.Http.Implementation.Infrastructure.ReaderResult.Delimiter" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation.Infrastructure" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.Infrastructure.ReaderResult.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation.Infrastructure" />
        <type api="T:Griffin.Networking.Http.Implementation.Infrastructure.ReaderResult" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.Infrastructure.ReaderResult.Delimiter">
      <apidata name="Delimiter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Delimiter" />
      <setter name="set_Delimiter" />
      <returns>
        <type api="T:System.Char" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation.Infrastructure" />
        <type api="T:Griffin.Networking.Http.Implementation.Infrastructure.ReaderResult" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Implementation.Infrastructure.ReaderResult.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation.Infrastructure" />
        <type api="T:Griffin.Networking.Http.Implementation.Infrastructure.ReaderResult" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Implementation.Infrastructure.TextReaderExtensions">
      <apidata name="TextReaderExtensions" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Implementation.Infrastructure.TextReaderExtensions.ReadToEnd(System.IO.TextReader,System.String)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation.Infrastructure" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.Infrastructure.TextReaderExtensions.ReadToEnd(System.IO.TextReader,System.String)">
      <apidata name="ReadToEnd" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
        <parameter name="delimiters">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Implementation.Infrastructure.ReaderResult" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation.Infrastructure" />
        <type api="T:Griffin.Networking.Http.Implementation.Infrastructure.TextReaderExtensions" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Griffin.Networking.Http.Implementation.Infrastructure.UrlDecoder">
      <apidata name="UrlDecoder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Implementation.Infrastructure.UrlDecoder.Parse(System.IO.TextReader,Griffin.Networking.Http.IParameterCollection)" />
        <element api="M:Griffin.Networking.Http.Implementation.Infrastructure.UrlDecoder.Parse(System.String)" />
        <element api="M:Griffin.Networking.Http.Implementation.Infrastructure.UrlDecoder.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation.Infrastructure" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.Infrastructure.UrlDecoder.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation.Infrastructure" />
        <type api="T:Griffin.Networking.Http.Implementation.Infrastructure.UrlDecoder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.Infrastructure.UrlDecoder.Parse(System.IO.TextReader,Griffin.Networking.Http.IParameterCollection)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.IO.TextReader" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation.Infrastructure" />
        <type api="T:Griffin.Networking.Http.Implementation.Infrastructure.UrlDecoder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Implementation.Infrastructure.UrlDecoder.Parse(System.String)">
      <apidata name="Parse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="queryString">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Implementation.Infrastructure" />
        <type api="T:Griffin.Networking.Http.Implementation.Infrastructure.UrlDecoder" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Messages">
      <apidata name="Griffin.Networking.Http.Messages" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Messages.HttpError" />
        <element api="T:Griffin.Networking.Http.Messages.ReceivedHttpRequest" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Messages.HttpError">
      <apidata name="HttpError" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Pipelines.Messages.PipelineFailure" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Messages.HttpError.#ctor(System.Net.HttpStatusCode,System.Exception)" />
        <element api="P:Griffin.Networking.Http.Messages.HttpError.StatusCode" />
        <element api="P:Griffin.Networking.Pipelines.Messages.PipelineFailure.Exception" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Messages.HttpError.#ctor(System.Net.HttpStatusCode,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="statusCode">
          <type api="T:System.Net.HttpStatusCode" ref="false" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Messages" />
        <type api="T:Griffin.Networking.Http.Messages.HttpError" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Messages.HttpError.StatusCode">
      <apidata name="StatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_StatusCode" />
      <setter name="set_StatusCode" />
      <returns>
        <type api="T:System.Net.HttpStatusCode" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Messages" />
        <type api="T:Griffin.Networking.Http.Messages.HttpError" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Messages.ReceivedHttpRequest">
      <apidata name="ReceivedHttpRequest" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Messages.ReceivedHttpRequest.#ctor(Griffin.Networking.Http.Protocol.IRequest)" />
        <element api="P:Griffin.Networking.Http.Messages.ReceivedHttpRequest.HttpRequest" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Messages.ReceivedHttpRequest.#ctor(Griffin.Networking.Http.Protocol.IRequest)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="httpRequest">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Messages" />
        <type api="T:Griffin.Networking.Http.Messages.ReceivedHttpRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Messages.ReceivedHttpRequest.HttpRequest">
      <apidata name="HttpRequest" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_HttpRequest" />
      <setter name="set_HttpRequest" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Messages" />
        <type api="T:Griffin.Networking.Http.Messages.ReceivedHttpRequest" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Pipeline.Handlers">
      <apidata name="Griffin.Networking.Http.Pipeline.Handlers" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Pipeline.Handlers.HeaderDecoder" />
        <element api="T:Griffin.Networking.Http.Pipeline.Handlers.ResponseEncoder" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Pipeline.Handlers.HeaderDecoder">
      <apidata name="HeaderDecoder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Pipeline.Handlers.HeaderDecoder.#ctor" />
        <element api="M:Griffin.Networking.Http.Pipeline.Handlers.HeaderDecoder.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Pipeline.Handlers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Pipeline.Handlers.HeaderDecoder.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Pipeline.Handlers" />
        <type api="T:Griffin.Networking.Http.Pipeline.Handlers.HeaderDecoder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Pipeline.Handlers.HeaderDecoder.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleUpstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IUpstreamHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Pipeline.Handlers" />
        <type api="T:Griffin.Networking.Http.Pipeline.Handlers.HeaderDecoder" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Pipeline.Handlers.ResponseEncoder">
      <apidata name="ResponseEncoder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Pipeline.Handlers.ResponseEncoder.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:Griffin.Networking.Http.Pipeline.Handlers.ResponseEncoder.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Pipeline.Handlers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Pipeline.Handlers.ResponseEncoder.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Pipeline.Handlers" />
        <type api="T:Griffin.Networking.Http.Pipeline.Handlers.ResponseEncoder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Pipeline.Handlers.ResponseEncoder.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleDownstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IDownstreamHandler.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Pipeline.Handlers" />
        <type api="T:Griffin.Networking.Http.Pipeline.Handlers.ResponseEncoder" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Pipeline.Messages">
      <apidata name="Griffin.Networking.Http.Pipeline.Messages" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Pipeline.Messages.SendHttpResponse" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Pipeline.Messages.SendHttpResponse">
      <apidata name="SendHttpResponse" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Pipeline.Messages.SendHttpResponse.#ctor(Griffin.Networking.Http.Protocol.IRequest,Griffin.Networking.Http.Protocol.IResponse)" />
        <element api="P:Griffin.Networking.Http.Pipeline.Messages.SendHttpResponse.Request" />
        <element api="P:Griffin.Networking.Http.Pipeline.Messages.SendHttpResponse.Response" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Pipeline.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Pipeline.Messages.SendHttpResponse.#ctor(Griffin.Networking.Http.Protocol.IRequest,Griffin.Networking.Http.Protocol.IResponse)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="request">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
        <parameter name="response">
          <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Pipeline.Messages" />
        <type api="T:Griffin.Networking.Http.Pipeline.Messages.SendHttpResponse" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Pipeline.Messages.SendHttpResponse.Request">
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Request" />
      <setter name="set_Request" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Pipeline.Messages" />
        <type api="T:Griffin.Networking.Http.Pipeline.Messages.SendHttpResponse" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Pipeline.Messages.SendHttpResponse.Response">
      <apidata name="Response" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Response" />
      <setter name="set_Response" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Pipeline.Messages" />
        <type api="T:Griffin.Networking.Http.Pipeline.Messages.SendHttpResponse" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Protocol">
      <apidata name="Griffin.Networking.Http.Protocol" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Protocol.IHttpCookie" />
        <element api="T:Griffin.Networking.Http.Protocol.IHttpFileCollection" />
        <element api="T:Griffin.Networking.Http.Protocol.IHeaderItem" />
        <element api="T:Griffin.Networking.Http.Protocol.IHeaderCollection" />
        <element api="T:Griffin.Networking.Http.Protocol.IMessage" />
        <element api="T:Griffin.Networking.Http.Protocol.IRequest" />
        <element api="T:Griffin.Networking.Http.Protocol.IResponse" />
        <element api="T:Griffin.Networking.Http.Protocol.IParameter" />
        <element api="T:Griffin.Networking.Http.Protocol.IHttpFile" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Protocol.IHeaderCollection">
      <apidata name="IHeaderCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Griffin.Networking.Http.Protocol.IHeaderItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="P:Griffin.Networking.Http.Protocol.IHeaderCollection.Item(System.String)" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:Griffin.Networking.Http.Protocol.IHeaderItem" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:Griffin.Networking.Http.Protocol.IHeaderItem" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.IEnumerable.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IEnumerable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IHeaderCollection.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IHeaderItem" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHeaderCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Protocol.IHeaderItem">
      <apidata name="IHeaderItem" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:Griffin.Networking.Http.Protocol.IHeaderItem.Is(System.String)" />
        <element api="M:Griffin.Networking.Http.Protocol.IHeaderItem.HasParameter(System.String)" />
        <element api="M:Griffin.Networking.Http.Protocol.IHeaderItem.GetParameter(System.String)" />
        <element api="P:Griffin.Networking.Http.Protocol.IHeaderItem.Name" />
        <element api="P:Griffin.Networking.Http.Protocol.IHeaderItem.Value" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Protocol.IHeaderItem.GetParameter(System.String)">
      <apidata name="GetParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHeaderItem" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Protocol.IHeaderItem.HasParameter(System.String)">
      <apidata name="HasParameter" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHeaderItem" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Protocol.IHeaderItem.Is(System.String)">
      <apidata name="Is" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHeaderItem" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IHeaderItem.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHeaderItem" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IHeaderItem.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHeaderItem" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Protocol.IHttpCookie">
      <apidata name="IHttpCookie" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.IResponseCookie" ref="true" />
      </implementors>
      <elements>
        <element api="P:Griffin.Networking.Http.Protocol.IHttpCookie.Name" />
        <element api="P:Griffin.Networking.Http.Protocol.IHttpCookie.Value" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IHttpCookie.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHttpCookie" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IHttpCookie.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Value" />
      <setter name="set_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHttpCookie" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Protocol.IHttpFile">
      <apidata name="IHttpFile" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.Implementation.HttpFile" ref="true" />
      </implementors>
      <elements>
        <element api="P:Griffin.Networking.Http.Protocol.IHttpFile.ContentType" />
        <element api="P:Griffin.Networking.Http.Protocol.IHttpFile.Name" />
        <element api="P:Griffin.Networking.Http.Protocol.IHttpFile.OriginalFileName" />
        <element api="P:Griffin.Networking.Http.Protocol.IHttpFile.TempFileName" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IHttpFile.ContentType">
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentType" />
      <setter name="set_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHttpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IHttpFile.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Name" />
      <setter name="set_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHttpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IHttpFile.OriginalFileName">
      <apidata name="OriginalFileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_OriginalFileName" />
      <setter name="set_OriginalFileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHttpFile" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IHttpFile.TempFileName">
      <apidata name="TempFileName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_TempFileName" />
      <setter name="set_TempFileName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHttpFile" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Protocol.IHttpFileCollection">
      <apidata name="IHttpFileCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:Griffin.Networking.Http.Protocol.IHttpFileCollection.Contains(System.String)" />
        <element api="M:Griffin.Networking.Http.Protocol.IHttpFileCollection.Add(Griffin.Networking.Http.Protocol.IHttpFile)" />
        <element api="M:Griffin.Networking.Http.Protocol.IHttpFileCollection.Clear" />
        <element api="P:Griffin.Networking.Http.Protocol.IHttpFileCollection.Item(System.String)" />
        <element api="P:Griffin.Networking.Http.Protocol.IHttpFileCollection.Count" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Protocol.IHttpFileCollection.Add(Griffin.Networking.Http.Protocol.IHttpFile)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="file">
          <type api="T:Griffin.Networking.Http.Protocol.IHttpFile" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHttpFileCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Protocol.IHttpFileCollection.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHttpFileCollection" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Protocol.IHttpFileCollection.Contains(System.String)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHttpFileCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IHttpFileCollection.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHttpFileCollection" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IHttpFileCollection.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IHttpFile" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IHttpFileCollection" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Protocol.IMessage">
      <apidata name="IMessage" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.Implementation.HttpMessage" ref="true" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
        <type api="T:Griffin.Networking.Http.Implementation.HttpResponse" ref="true" />
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Protocol.IMessage.AddHeader(System.String,System.String)" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.ProtocolVersion" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.Body" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.ContentLength" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.ContentEncoding" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.Headers" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Protocol.IMessage.AddHeader(System.String,System.String)">
      <apidata name="AddHeader" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IMessage.Body">
      <apidata name="Body" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Body" />
      <setter name="set_Body" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IMessage.ContentEncoding">
      <apidata name="ContentEncoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentEncoding" />
      <setter name="set_ContentEncoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IMessage.ContentLength">
      <apidata name="ContentLength" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ContentLength" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IMessage.Headers">
      <apidata name="Headers" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Headers" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IHeaderCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IMessage.ProtocolVersion">
      <apidata name="ProtocolVersion" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ProtocolVersion" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Protocol.IParameter">
      <apidata name="IParameter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Protocol.IParameter.Add(System.String)" />
        <element api="P:Griffin.Networking.Http.Protocol.IParameter.Value" />
        <element api="P:Griffin.Networking.Http.Protocol.IParameter.Name" />
        <element api="P:Griffin.Networking.Http.Protocol.IParameter.Item(System.Int32)" />
        <element api="P:Griffin.Networking.Http.Protocol.IParameter.Count" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <type api="T:System.String" ref="true" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.IEnumerable.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IEnumerable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Protocol.IParameter.Add(System.String)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IParameter" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IParameter.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IParameter" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IParameter.Item(System.Int32)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IParameter" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IParameter.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IParameter" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IParameter.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IParameter" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Protocol.IRequest">
      <apidata name="IRequest" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
      </implements>
      <implementors>
        <type api="T:Griffin.Networking.Http.Implementation.HttpRequest" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Protocol.IRequest.CreateResponse(System.Net.HttpStatusCode,System.String)" />
        <element api="P:Griffin.Networking.Http.Protocol.IRequest.KeepAlive" />
        <element api="P:Griffin.Networking.Http.Protocol.IRequest.ContentType" />
        <element api="P:Griffin.Networking.Http.Protocol.IRequest.Cookies" />
        <element api="P:Griffin.Networking.Http.Protocol.IRequest.Files" />
        <element api="P:Griffin.Networking.Http.Protocol.IRequest.Form" />
        <element api="P:Griffin.Networking.Http.Protocol.IRequest.RemoteEndPoint" />
        <element api="P:Griffin.Networking.Http.Protocol.IRequest.IsAjax" />
        <element api="P:Griffin.Networking.Http.Protocol.IRequest.Method" />
        <element api="P:Griffin.Networking.Http.Protocol.IRequest.QueryString" />
        <element api="P:Griffin.Networking.Http.Protocol.IRequest.Uri" />
        <element api="M:Griffin.Networking.Http.Protocol.IMessage.AddHeader(System.String,System.String)" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.ProtocolVersion" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.Body" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.ContentLength" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.ContentEncoding" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.Headers" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IRequest.ContentType">
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IRequest.Cookies">
      <apidata name="Cookies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Cookies" />
      <returns>
        <type api="T:Griffin.Networking.Http.Specification.IHttpCookieCollection`1" ref="true">
          <specialization>
            <type api="T:Griffin.Networking.Http.Protocol.IHttpCookie" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Protocol.IRequest.CreateResponse(System.Net.HttpStatusCode,System.String)">
      <apidata name="CreateResponse" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="code">
          <type api="T:System.Net.HttpStatusCode" ref="false" />
        </parameter>
        <parameter name="reason">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IRequest.Files">
      <apidata name="Files" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Files" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IHttpFileCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IRequest.Form">
      <apidata name="Form" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Form" />
      <returns>
        <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IRequest.IsAjax">
      <apidata name="IsAjax" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_IsAjax" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IRequest.KeepAlive">
      <apidata name="KeepAlive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_KeepAlive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IRequest.Method">
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Method" />
      <setter name="set_Method" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IRequest.QueryString">
      <apidata name="QueryString" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_QueryString" />
      <returns>
        <type api="T:Griffin.Networking.Http.IParameterCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IRequest.RemoteEndPoint">
      <apidata name="RemoteEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RemoteEndPoint" />
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IRequest.Uri">
      <apidata name="Uri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Uri" />
      <setter name="set_Uri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Protocol.IResponse">
      <apidata name="IResponse" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:Griffin.Networking.Http.Protocol.IMessage" ref="true" />
      </implements>
      <implementors>
        <type api="T:Griffin.Networking.Http.Implementation.HttpResponse" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Protocol.IResponse.Redirect(System.String)" />
        <element api="P:Griffin.Networking.Http.Protocol.IResponse.KeepAlive" />
        <element api="P:Griffin.Networking.Http.Protocol.IResponse.Cookies" />
        <element api="P:Griffin.Networking.Http.Protocol.IResponse.StatusDescription" />
        <element api="P:Griffin.Networking.Http.Protocol.IResponse.StatusCode" />
        <element api="P:Griffin.Networking.Http.Protocol.IResponse.ContentType" />
        <element api="M:Griffin.Networking.Http.Protocol.IMessage.AddHeader(System.String,System.String)" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.ProtocolVersion" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.Body" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.ContentLength" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.ContentEncoding" />
        <element api="P:Griffin.Networking.Http.Protocol.IMessage.Headers" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IResponse.ContentType">
      <apidata name="ContentType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_ContentType" />
      <setter name="set_ContentType" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IResponse.Cookies">
      <apidata name="Cookies" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Cookies" />
      <returns>
        <type api="T:Griffin.Networking.Http.Specification.IHttpCookieCollection`1" ref="true">
          <specialization>
            <type api="T:Griffin.Networking.Http.IResponseCookie" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IResponse.KeepAlive">
      <apidata name="KeepAlive" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_KeepAlive" />
      <setter name="set_KeepAlive" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Protocol.IResponse.Redirect(System.String)">
      <apidata name="Redirect" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="uri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IResponse.StatusCode">
      <apidata name="StatusCode" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_StatusCode" />
      <setter name="set_StatusCode" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Protocol.IResponse.StatusDescription">
      <apidata name="StatusDescription" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_StatusDescription" />
      <setter name="set_StatusDescription" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Protocol" />
        <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Server">
      <apidata name="Griffin.Networking.Http.Server" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Server.IHttpContext" />
        <element api="T:Griffin.Networking.Http.Server.HttpContext" />
        <element api="T:Griffin.Networking.Http.Server.HttpServer" />
        <element api="T:Griffin.Networking.Http.Server.HttpServerWorker" />
        <element api="T:Griffin.Networking.Http.Server.IHttpModule" />
        <element api="T:Griffin.Networking.Http.Server.IAuthenticationModule" />
        <element api="T:Griffin.Networking.Http.Server.IAuthorizationModule" />
        <element api="T:Griffin.Networking.Http.Server.IItemStorage" />
        <element api="T:Griffin.Networking.Http.Server.IModuleManager" />
        <element api="T:Griffin.Networking.Http.Server.IWorkerModule" />
        <element api="T:Griffin.Networking.Http.Server.IRoutingModule" />
        <element api="T:Griffin.Networking.Http.Server.MemoryItemStorage" />
        <element api="T:Griffin.Networking.Http.Server.ModuleManager" />
        <element api="T:Griffin.Networking.Http.Server.ModuleResult" />
        <element api="T:Griffin.Networking.Http.Server.WorkerConfiguration" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Server.HttpContext">
      <apidata name="HttpContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.HttpContext.#ctor" />
        <element api="M:Griffin.Networking.Http.Server.HttpContext.RegisterForDisposal(System.Action{Griffin.Networking.Http.Server.IHttpContext})" />
        <element api="M:Griffin.Networking.Http.Server.HttpContext.Dispose" />
        <element api="P:Griffin.Networking.Http.Server.HttpContext.Request" />
        <element api="P:Griffin.Networking.Http.Server.HttpContext.Response" />
        <element api="P:Griffin.Networking.Http.Server.HttpContext.Items" />
        <element api="P:Griffin.Networking.Http.Server.HttpContext.Application" />
        <element api="P:Griffin.Networking.Http.Server.HttpContext.Session" />
        <element api="P:Griffin.Networking.Http.Server.HttpContext.LastException" />
        <element api="P:Griffin.Networking.Http.Server.HttpContext.User" />
        <element api="P:Griffin.Networking.Http.Server.HttpContext.RouteData" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.HttpContext.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.HttpContext.Application">
      <apidata name="Application" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Application" />
      <setter name="set_Application" />
      <returns>
        <type api="T:Griffin.Networking.Http.Server.IItemStorage" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Server.IHttpContext.Application">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.HttpContext.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.HttpContext.Items">
      <apidata name="Items" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Items" />
      <setter name="set_Items" />
      <returns>
        <type api="T:Griffin.Networking.Http.Server.IItemStorage" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Server.IHttpContext.Items">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.HttpContext.LastException">
      <apidata name="LastException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_LastException" />
      <setter name="set_LastException" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Server.IHttpContext.LastException">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.HttpContext.RegisterForDisposal(System.Action{Griffin.Networking.Http.Server.IHttpContext})">
      <apidata name="RegisterForDisposal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IHttpContext.RegisterForDisposal(System.Action{Griffin.Networking.Http.Server.IHttpContext})">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.HttpContext.Request">
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Request" />
      <setter name="set_Request" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Server.IHttpContext.Request">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.HttpContext.Response">
      <apidata name="Response" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Response" />
      <setter name="set_Response" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Server.IHttpContext.Response">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.HttpContext.RouteData">
      <apidata name="RouteData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_RouteData" />
      <setter name="set_RouteData" />
      <returns>
        <type api="T:Griffin.Networking.Http.Server.IItemStorage" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Server.IHttpContext.RouteData">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.HttpContext.Session">
      <apidata name="Session" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Session" />
      <setter name="set_Session" />
      <returns>
        <type api="T:Griffin.Networking.Http.Server.IItemStorage" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Server.IHttpContext.Session">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.HttpContext.User">
      <apidata name="User" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_User" />
      <setter name="set_User" />
      <returns>
        <type api="T:System.Security.Principal.IPrincipal" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Server.IHttpContext.User">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpContext" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.HttpServer">
      <apidata name="HttpServer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Servers.IServiceFactory" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.HttpServer.#ctor(Griffin.Networking.Http.Server.IModuleManager)" />
        <element api="M:Griffin.Networking.Http.Server.HttpServer.#ctor(Griffin.Networking.Http.Server.IModuleManager,Griffin.Networking.Messaging.MessagingServerConfiguration)" />
        <element api="M:Griffin.Networking.Http.Server.HttpServer.CreateClient(System.Net.EndPoint)" />
        <element api="M:Griffin.Networking.Http.Server.HttpServer.Add(Griffin.Networking.Http.Server.IHttpModule)" />
        <element api="M:Griffin.Networking.Http.Server.HttpServer.Start(System.Net.IPAddress,System.Int32)" />
        <element api="P:Griffin.Networking.Http.Server.HttpServer.ApplicationInfo" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.HttpServer.#ctor(Griffin.Networking.Http.Server.IModuleManager)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="moduleManager">
          <type api="T:Griffin.Networking.Http.Server.IModuleManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpServer" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.HttpServer.#ctor(Griffin.Networking.Http.Server.IModuleManager,Griffin.Networking.Messaging.MessagingServerConfiguration)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="moduleManager">
          <type api="T:Griffin.Networking.Http.Server.IModuleManager" ref="true" />
        </parameter>
        <parameter name="configuration">
          <type api="T:Griffin.Networking.Messaging.MessagingServerConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpServer" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.HttpServer.Add(Griffin.Networking.Http.Server.IHttpModule)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="module">
          <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpServer" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.HttpServer.ApplicationInfo">
      <apidata name="ApplicationInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ApplicationInfo" />
      <setter name="set_ApplicationInfo" />
      <returns>
        <type api="T:Griffin.Networking.Http.Server.IItemStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpServer" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.HttpServer.CreateClient(System.Net.EndPoint)">
      <apidata name="CreateClient" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="remoteEndPoint">
          <type api="T:System.Net.EndPoint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Servers.IServiceFactory.CreateClient(System.Net.EndPoint)">
          <type api="T:Griffin.Networking.Servers.IServiceFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpServer" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.HttpServer.Start(System.Net.IPAddress,System.Int32)">
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="ipAddress">
          <type api="T:System.Net.IPAddress" ref="true" />
        </parameter>
        <parameter name="port">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpServer" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.HttpServerWorker">
      <apidata name="HttpServerWorker" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Http.HttpService" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.HttpServerWorker.#ctor(System.Net.IPEndPoint,Griffin.Networking.Http.Server.WorkerConfiguration)" />
        <element api="M:Griffin.Networking.Http.Server.HttpServerWorker.Dispose" />
        <element api="M:Griffin.Networking.Http.Server.HttpServerWorker.HandleReceive(System.Object)" />
        <element api="P:Griffin.Networking.Http.Server.HttpServerWorker.RemoteEndPoint" />
        <element api="M:Griffin.Networking.Http.HttpService.Assign(Griffin.Networking.Servers.IServerClientContext)" />
        <element api="M:Griffin.Networking.Http.HttpService.Send(Griffin.Networking.Http.Protocol.IMessage)" />
        <element api="P:Griffin.Networking.Http.HttpService.Context" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.HttpServerWorker.#ctor(System.Net.IPEndPoint,Griffin.Networking.Http.Server.WorkerConfiguration)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="remoteEndPoint">
          <type api="T:System.Net.IPEndPoint" ref="true" />
        </parameter>
        <parameter name="configuration">
          <type api="T:Griffin.Networking.Http.Server.WorkerConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpServerWorker" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.HttpServerWorker.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Http.HttpService.Dispose">
          <type api="T:Griffin.Networking.Http.HttpService" ref="true" />
        </member>
      </overrides>
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpServerWorker" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.HttpServerWorker.HandleReceive(System.Object)">
      <apidata name="HandleReceive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Http.HttpService.HandleReceive(System.Object)">
          <type api="T:Griffin.Networking.Http.HttpService" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Servers.IServerService.HandleReceive(System.Object)">
          <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpServerWorker" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.HttpServerWorker.RemoteEndPoint">
      <apidata name="RemoteEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_RemoteEndPoint" />
      <setter name="set_RemoteEndPoint" />
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.HttpServerWorker" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.IAuthenticationModule">
      <apidata name="IAuthenticationModule" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
      </implements>
      <implementors>
        <type api="T:Griffin.Networking.Http.Server.Modules.AuthenticationModule" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.IAuthenticationModule.Authenticate(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.IHttpModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.IHttpModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.IAuthenticationModule.Authenticate(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="Authenticate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Server.ModuleResult" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IAuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.IAuthorizationModule">
      <apidata name="IAuthorizationModule" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.IAuthorizationModule.Authorize(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.IHttpModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.IHttpModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.IAuthorizationModule.Authorize(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="Authorize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Server.ModuleResult" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IAuthorizationModule" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.IHttpContext">
      <apidata name="IHttpContext" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Griffin.Networking.Http.Server.HttpContext" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.IHttpContext.RegisterForDisposal(System.Action{Griffin.Networking.Http.Server.IHttpContext})" />
        <element api="P:Griffin.Networking.Http.Server.IHttpContext.Request" />
        <element api="P:Griffin.Networking.Http.Server.IHttpContext.Response" />
        <element api="P:Griffin.Networking.Http.Server.IHttpContext.Items" />
        <element api="P:Griffin.Networking.Http.Server.IHttpContext.Application" />
        <element api="P:Griffin.Networking.Http.Server.IHttpContext.Session" />
        <element api="P:Griffin.Networking.Http.Server.IHttpContext.LastException" />
        <element api="P:Griffin.Networking.Http.Server.IHttpContext.User" />
        <element api="P:Griffin.Networking.Http.Server.IHttpContext.RouteData" />
        <element api="M:System.IDisposable.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.IDisposable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.IHttpContext.Application">
      <apidata name="Application" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Application" />
      <returns>
        <type api="T:Griffin.Networking.Http.Server.IItemStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.IHttpContext.Items">
      <apidata name="Items" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Items" />
      <returns>
        <type api="T:Griffin.Networking.Http.Server.IItemStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.IHttpContext.LastException">
      <apidata name="LastException" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_LastException" />
      <setter name="set_LastException" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.IHttpContext.RegisterForDisposal(System.Action{Griffin.Networking.Http.Server.IHttpContext})">
      <apidata name="RegisterForDisposal" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="callback">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.IHttpContext.Request">
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Request" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.IHttpContext.Response">
      <apidata name="Response" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Response" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.IHttpContext.RouteData">
      <apidata name="RouteData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RouteData" />
      <returns>
        <type api="T:Griffin.Networking.Http.Server.IItemStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.IHttpContext.Session">
      <apidata name="Session" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Session" />
      <returns>
        <type api="T:Griffin.Networking.Http.Server.IItemStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.IHttpContext.User">
      <apidata name="User" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_User" />
      <setter name="set_User" />
      <returns>
        <type api="T:System.Security.Principal.IPrincipal" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.IHttpModule">
      <apidata name="IHttpModule" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.Server.IAuthenticationModule" ref="true" />
        <type api="T:Griffin.Networking.Http.Server.IAuthorizationModule" ref="true" />
        <type api="T:Griffin.Networking.Http.Server.IWorkerModule" ref="true" />
        <type api="T:Griffin.Networking.Http.Server.IRoutingModule" ref="true" />
        <type api="T:Griffin.Networking.Http.Server.Modules.AuthenticationModule" ref="true" />
        <type api="T:Griffin.Networking.Http.Server.Modules.BodyDecodingModule" ref="true" />
        <type api="T:Griffin.Networking.Http.Server.Modules.ErrorModule" ref="true" />
        <type api="T:Griffin.Networking.Http.Server.Modules.FileModule" ref="true" />
        <type api="T:Griffin.Networking.Http.Server.Modules.RouterModule" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.IHttpModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.IHttpModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.IHttpModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="BeginRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.IHttpModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="EndRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.IItemStorage">
      <apidata name="IItemStorage" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.Server.MemoryItemStorage" ref="true" />
      </implementors>
      <elements>
        <element api="P:Griffin.Networking.Http.Server.IItemStorage.Item(System.String)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.IItemStorage.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IItemStorage" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.IModuleManager">
      <apidata name="IModuleManager" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.Server.ModuleManager" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.IModuleManager.Add(Griffin.Networking.Http.Server.IHttpModule)" />
        <element api="M:Griffin.Networking.Http.Server.IModuleManager.Invoke(Griffin.Networking.Http.Server.IHttpContext)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.IModuleManager.Add(Griffin.Networking.Http.Server.IHttpModule)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="module">
          <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IModuleManager" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.IModuleManager.Invoke(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IModuleManager" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.IRoutingModule">
      <apidata name="IRoutingModule" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
      </implements>
      <implementors>
        <type api="T:Griffin.Networking.Http.Server.Modules.RouterModule" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.IRoutingModule.Route(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.IHttpModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.IHttpModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.IRoutingModule.Route(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="Route" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Server.ModuleResult" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IRoutingModule" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.IWorkerModule">
      <apidata name="IWorkerModule" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
      </implements>
      <implementors>
        <type api="T:Griffin.Networking.Http.Server.Modules.BodyDecodingModule" ref="true" />
        <type api="T:Griffin.Networking.Http.Server.Modules.FileModule" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.IWorkerModule.HandleRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.IHttpModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.IHttpModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.IWorkerModule.HandleRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="HandleRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Server.ModuleResult" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.IWorkerModule" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.MemoryItemStorage">
      <apidata name="MemoryItemStorage" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Server.IItemStorage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.MemoryItemStorage.#ctor" />
        <element api="P:Griffin.Networking.Http.Server.MemoryItemStorage.Item(System.String)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.MemoryItemStorage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.MemoryItemStorage" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.MemoryItemStorage.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Item" />
      <setter name="set_Item" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Server.IItemStorage.Item(System.String)">
          <type api="T:Griffin.Networking.Http.Server.IItemStorage" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.MemoryItemStorage" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.ModuleManager">
      <apidata name="ModuleManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Server.IModuleManager" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.ModuleManager.Add(Griffin.Networking.Http.Server.IHttpModule)" />
        <element api="M:Griffin.Networking.Http.Server.ModuleManager.Invoke(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.ModuleManager.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.ModuleManager.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.ModuleManager" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.ModuleManager.Add(Griffin.Networking.Http.Server.IHttpModule)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="module">
          <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IModuleManager.Add(Griffin.Networking.Http.Server.IHttpModule)">
          <type api="T:Griffin.Networking.Http.Server.IModuleManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.ModuleManager" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.ModuleManager.Invoke(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="Invoke" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IModuleManager.Invoke(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IModuleManager" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.ModuleManager" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.ModuleResult">
      <apidata name="ModuleResult" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Griffin.Networking.Http.Server.ModuleResult.Continue" />
        <element api="F:Griffin.Networking.Http.Server.ModuleResult.Stop" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Http.Server.ModuleResult.Continue">
      <apidata name="Continue" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Griffin.Networking.Http.Server.ModuleResult" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.ModuleResult" ref="false" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Http.Server.ModuleResult.Stop">
      <apidata name="Stop" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Griffin.Networking.Http.Server.ModuleResult" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.ModuleResult" ref="false" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.WorkerConfiguration">
      <apidata name="WorkerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.WorkerConfiguration.#ctor" />
        <element api="P:Griffin.Networking.Http.Server.WorkerConfiguration.ModuleManager" />
        <element api="P:Griffin.Networking.Http.Server.WorkerConfiguration.Application" />
        <element api="P:Griffin.Networking.Http.Server.WorkerConfiguration.BufferSliceStack" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.WorkerConfiguration.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.WorkerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.WorkerConfiguration.Application">
      <apidata name="Application" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Application" />
      <setter name="set_Application" />
      <returns>
        <type api="T:Griffin.Networking.Http.Server.IItemStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.WorkerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.WorkerConfiguration.BufferSliceStack">
      <apidata name="BufferSliceStack" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BufferSliceStack" />
      <setter name="set_BufferSliceStack" />
      <returns>
        <type api="T:Griffin.Networking.Buffers.IBufferSliceStack" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.WorkerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.WorkerConfiguration.ModuleManager">
      <apidata name="ModuleManager" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ModuleManager" />
      <setter name="set_ModuleManager" />
      <returns>
        <type api="T:Griffin.Networking.Http.Server.IModuleManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server" />
        <type api="T:Griffin.Networking.Http.Server.WorkerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Server.Modules">
      <apidata name="Griffin.Networking.Http.Server.Modules" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Server.Modules.AuthenticationModule" />
        <element api="T:Griffin.Networking.Http.Server.Modules.BodyDecodingModule" />
        <element api="T:Griffin.Networking.Http.Server.Modules.ErrorModule" />
        <element api="T:Griffin.Networking.Http.Server.Modules.FileModule" />
        <element api="T:Griffin.Networking.Http.Server.Modules.RouterModule" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Server.Modules.AuthenticationModule">
      <apidata name="AuthenticationModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Server.IAuthenticationModule" ref="true" />
        <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.Modules.AuthenticationModule.#ctor(Griffin.Networking.Http.Services.Authentication.IAuthenticator,Griffin.Networking.Http.Services.Authentication.IPrincipalFactory)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.AuthenticationModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.AuthenticationModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.AuthenticationModule.Authenticate(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.AuthenticationModule.#ctor(Griffin.Networking.Http.Services.Authentication.IAuthenticator,Griffin.Networking.Http.Services.Authentication.IPrincipalFactory)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="authenticator">
          <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticator" ref="true" />
        </parameter>
        <parameter name="principalFactory">
          <type api="T:Griffin.Networking.Http.Services.Authentication.IPrincipalFactory" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.AuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.AuthenticationModule.Authenticate(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="Authenticate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Server.ModuleResult" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IAuthenticationModule.Authenticate(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IAuthenticationModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.AuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.AuthenticationModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="BeginRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IHttpModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.AuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.AuthenticationModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="EndRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IHttpModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.AuthenticationModule" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.Modules.BodyDecodingModule">
      <apidata name="BodyDecodingModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Server.IWorkerModule" ref="true" />
        <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.Modules.BodyDecodingModule.#ctor(Griffin.Networking.Http.Services.IBodyDecoder[])" />
        <element api="M:Griffin.Networking.Http.Server.Modules.BodyDecodingModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.BodyDecodingModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.BodyDecodingModule.HandleRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="P:Griffin.Networking.Http.Server.Modules.BodyDecodingModule.BeRude" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.BodyDecodingModule.#ctor(Griffin.Networking.Http.Services.IBodyDecoder[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="decoders" params="true">
          <arrayOf rank="1">
            <type api="T:Griffin.Networking.Http.Services.IBodyDecoder" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.BodyDecodingModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.BodyDecodingModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="BeginRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IHttpModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.BodyDecodingModule" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Server.Modules.BodyDecodingModule.BeRude">
      <apidata name="BeRude" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BeRude" />
      <setter name="set_BeRude" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.BodyDecodingModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.BodyDecodingModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="EndRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IHttpModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.BodyDecodingModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.BodyDecodingModule.HandleRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="HandleRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Server.ModuleResult" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IWorkerModule.HandleRequest(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IWorkerModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.BodyDecodingModule" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.Modules.ErrorModule">
      <apidata name="ErrorModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.Modules.ErrorModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.ErrorModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.ErrorModule.SendEmailTo(System.String,System.String)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.ErrorModule.LogDetails(System.Action{System.String})" />
        <element api="M:Griffin.Networking.Http.Server.Modules.ErrorModule.BuildCustomErrorPage(System.Func{Griffin.Networking.Http.Server.IHttpContext,System.String})" />
        <element api="M:Griffin.Networking.Http.Server.Modules.ErrorModule.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.ErrorModule.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.ErrorModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.ErrorModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="BeginRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IHttpModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.ErrorModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.ErrorModule.BuildCustomErrorPage(System.Func{Griffin.Networking.Http.Server.IHttpContext,System.String})">
      <apidata name="BuildCustomErrorPage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.ErrorModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.ErrorModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="EndRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IHttpModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.ErrorModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.ErrorModule.LogDetails(System.Action{System.String})">
      <apidata name="LogDetails" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="action">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.ErrorModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.ErrorModule.SendEmailTo(System.String,System.String)">
      <apidata name="SendEmailTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="toAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="fromAddress">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.ErrorModule" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.Modules.FileModule">
      <apidata name="FileModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Server.IWorkerModule" ref="true" />
        <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.Modules.FileModule.#ctor(Griffin.Networking.Http.Services.Files.IFileService)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.FileModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.FileModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.FileModule.HandleRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.FileModule.#ctor(Griffin.Networking.Http.Services.Files.IFileService)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="fileService">
          <type api="T:Griffin.Networking.Http.Services.Files.IFileService" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.FileModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.FileModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="BeginRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IHttpModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.FileModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.FileModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="EndRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IHttpModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.FileModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.FileModule.HandleRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="HandleRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Server.ModuleResult" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IWorkerModule.HandleRequest(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IWorkerModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.FileModule" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Server.Modules.RouterModule">
      <apidata name="RouterModule" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Server.IRoutingModule" ref="true" />
        <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Server.Modules.RouterModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.RouterModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.RouterModule.Route(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.RouterModule.Add(Griffin.Networking.Http.Services.Routing.IRequestRouter)" />
        <element api="M:Griffin.Networking.Http.Server.Modules.RouterModule.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.RouterModule.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.RouterModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.RouterModule.Add(Griffin.Networking.Http.Services.Routing.IRequestRouter)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="router">
          <type api="T:Griffin.Networking.Http.Services.Routing.IRequestRouter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.RouterModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.RouterModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="BeginRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IHttpModule.BeginRequest(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.RouterModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.RouterModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="EndRequest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IHttpModule.EndRequest(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IHttpModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.RouterModule" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Server.Modules.RouterModule.Route(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="Route" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Server.ModuleResult" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Server.IRoutingModule.Route(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Server.IRoutingModule" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Server.Modules" />
        <type api="T:Griffin.Networking.Http.Server.Modules.RouterModule" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Services">
      <apidata name="Griffin.Networking.Http.Services" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Services.IBodyDecoder" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Services.IBodyDecoder">
      <apidata name="IBodyDecoder" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder" ref="true" />
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder" ref="true" />
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.CompositeBodyDecoder" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.IBodyDecoder.Decode(Griffin.Networking.Http.Protocol.IRequest)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.IBodyDecoder.Decode(Griffin.Networking.Http.Protocol.IRequest)">
      <apidata name="Decode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services" />
        <type api="T:Griffin.Networking.Http.Services.IBodyDecoder" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Services.Authentication">
      <apidata name="Griffin.Networking.Http.Services.Authentication" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticator" />
        <element api="T:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator" />
        <element api="T:Griffin.Networking.Http.Services.Authentication.IRealmRepository" />
        <element api="T:Griffin.Networking.Http.Services.Authentication.HostAsRealmRepository" />
        <element api="T:Griffin.Networking.Http.Services.Authentication.IAccountStorage" />
        <element api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser" />
        <element api="T:Griffin.Networking.Http.Services.Authentication.IUserWithRoles" />
        <element api="T:Griffin.Networking.Http.Services.Authentication.IPrincipalFactory" />
        <element api="T:Griffin.Networking.Http.Services.Authentication.PrincipalFactoryContext" />
        <element api="T:Griffin.Networking.Http.Services.Authentication.SingleRealmRepository" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator">
      <apidata name="DigestAuthenticator" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticator" ref="true" />
      </implements>
      <elements>
        <element api="F:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.DisableNonceCheck" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.#ctor(Griffin.Networking.Http.Services.Authentication.IRealmRepository,Griffin.Networking.Http.Services.Authentication.IAccountStorage)" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.CreateChallenge(Griffin.Networking.Http.Protocol.IRequest,Griffin.Networking.Http.Protocol.IResponse)" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.Authenticate(Griffin.Networking.Http.Protocol.IRequest)" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.Encrypt(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.Encrypt(System.String,System.String,System.String,System.String,System.String,System.String)" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.GetHa1(System.String,System.String,System.String)" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.GetMd5HashBinHex(System.String)" />
        <element api="P:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.Scheme" />
        <element api="P:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.AuthenticationScheme" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.#ctor(Griffin.Networking.Http.Services.Authentication.IRealmRepository,Griffin.Networking.Http.Services.Authentication.IAccountStorage)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="realmRepository">
          <type api="T:Griffin.Networking.Http.Services.Authentication.IRealmRepository" ref="true" />
        </parameter>
        <parameter name="userService">
          <type api="T:Griffin.Networking.Http.Services.Authentication.IAccountStorage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.Authenticate(Griffin.Networking.Http.Protocol.IRequest)">
      <apidata name="Authenticate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Services.Authentication.IAuthenticator.Authenticate(Griffin.Networking.Http.Protocol.IRequest)">
          <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.AuthenticationScheme">
      <apidata name="AuthenticationScheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_AuthenticationScheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Http.Services.Authentication.IAuthenticator.AuthenticationScheme">
          <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.CreateChallenge(Griffin.Networking.Http.Protocol.IRequest,Griffin.Networking.Http.Protocol.IResponse)">
      <apidata name="CreateChallenge" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
        <parameter name="response">
          <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Services.Authentication.IAuthenticator.CreateChallenge(Griffin.Networking.Http.Protocol.IRequest,Griffin.Networking.Http.Protocol.IResponse)">
          <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticator" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator" ref="true" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.DisableNonceCheck">
      <apidata name="DisableNonceCheck" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.Encrypt(System.String,System.String,System.String,System.String,System.String,System.String)">
      <apidata name="Encrypt" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="ha1">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="ha2">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="qop">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nonce">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nc">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="cnonce">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.Encrypt(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <apidata name="Encrypt" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="realm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="method">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="uri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="qop">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nonce">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="nc">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="cnonce">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.GetHa1(System.String,System.String,System.String)">
      <apidata name="GetHa1" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="realm">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="userName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="password">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.GetMd5HashBinHex(System.String)">
      <apidata name="GetMd5HashBinHex" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="toBeHashed">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator.Scheme">
      <apidata name="Scheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Scheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Authentication.HostAsRealmRepository">
      <apidata name="HostAsRealmRepository" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Services.Authentication.IRealmRepository" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Authentication.HostAsRealmRepository.GetRealm(Griffin.Networking.Http.Protocol.IRequest)" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.HostAsRealmRepository.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.HostAsRealmRepository.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.HostAsRealmRepository" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.HostAsRealmRepository.GetRealm(Griffin.Networking.Http.Protocol.IRequest)">
      <apidata name="GetRealm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Services.Authentication.IRealmRepository.GetRealm(Griffin.Networking.Http.Protocol.IRequest)">
          <type api="T:Griffin.Networking.Http.Services.Authentication.IRealmRepository" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.HostAsRealmRepository" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Authentication.IAccountStorage">
      <apidata name="IAccountStorage" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.Services.Authentication.IUserWithRoles" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Authentication.IAccountStorage.Lookup(System.String,System.Uri)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.IAccountStorage.Lookup(System.String,System.Uri)">
      <apidata name="Lookup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="userName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="host">
          <type api="T:System.Uri" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.IAccountStorage" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser">
      <apidata name="IAuthenticationUser" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="P:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser.Username" />
        <element api="P:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser.Password" />
        <element api="P:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser.HA1" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser.HA1">
      <apidata name="HA1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_HA1" />
      <setter name="set_HA1" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser.Password">
      <apidata name="Password" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Password" />
      <setter name="set_Password" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser.Username">
      <apidata name="Username" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Username" />
      <setter name="set_Username" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Authentication.IAuthenticator">
      <apidata name="IAuthenticator" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.Services.Authentication.DigestAuthenticator" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Authentication.IAuthenticator.CreateChallenge(Griffin.Networking.Http.Protocol.IRequest,Griffin.Networking.Http.Protocol.IResponse)" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.IAuthenticator.Authenticate(Griffin.Networking.Http.Protocol.IRequest)" />
        <element api="P:Griffin.Networking.Http.Services.Authentication.IAuthenticator.AuthenticationScheme" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.IAuthenticator.Authenticate(Griffin.Networking.Http.Protocol.IRequest)">
      <apidata name="Authenticate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticator" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Authentication.IAuthenticator.AuthenticationScheme">
      <apidata name="AuthenticationScheme" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_AuthenticationScheme" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticator" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.IAuthenticator.CreateChallenge(Griffin.Networking.Http.Protocol.IRequest,Griffin.Networking.Http.Protocol.IResponse)">
      <apidata name="CreateChallenge" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="httpRequest">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
        <parameter name="response">
          <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticator" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Authentication.IPrincipalFactory">
      <apidata name="IPrincipalFactory" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Authentication.IPrincipalFactory.Create(Griffin.Networking.Http.Services.Authentication.PrincipalFactoryContext)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.IPrincipalFactory.Create(Griffin.Networking.Http.Services.Authentication.PrincipalFactoryContext)">
      <apidata name="Create" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Services.Authentication.PrincipalFactoryContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Security.Principal.IPrincipal" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.IPrincipalFactory" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Authentication.IRealmRepository">
      <apidata name="IRealmRepository" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.Services.Authentication.HostAsRealmRepository" ref="true" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.SingleRealmRepository" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Authentication.IRealmRepository.GetRealm(Griffin.Networking.Http.Protocol.IRequest)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.IRealmRepository.GetRealm(Griffin.Networking.Http.Protocol.IRequest)">
      <apidata name="GetRealm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="request">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.IRealmRepository" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Authentication.IUserWithRoles">
      <apidata name="IUserWithRoles" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:Griffin.Networking.Http.Services.Authentication.IAccountStorage" ref="true" />
      </implements>
      <elements>
        <element api="P:Griffin.Networking.Http.Services.Authentication.IUserWithRoles.RoleNames" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.IAccountStorage.Lookup(System.String,System.Uri)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Authentication.IUserWithRoles.RoleNames">
      <apidata name="RoleNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RoleNames" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.IUserWithRoles" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Authentication.PrincipalFactoryContext">
      <apidata name="PrincipalFactoryContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Authentication.PrincipalFactoryContext.#ctor(Griffin.Networking.Http.Protocol.IRequest,Griffin.Networking.Http.Services.Authentication.IAuthenticationUser)" />
        <element api="P:Griffin.Networking.Http.Services.Authentication.PrincipalFactoryContext.User" />
        <element api="P:Griffin.Networking.Http.Services.Authentication.PrincipalFactoryContext.Request" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.PrincipalFactoryContext.#ctor(Griffin.Networking.Http.Protocol.IRequest,Griffin.Networking.Http.Services.Authentication.IAuthenticationUser)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="request">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
        <parameter name="user">
          <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.PrincipalFactoryContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Authentication.PrincipalFactoryContext.Request">
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Request" />
      <setter name="set_Request" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.PrincipalFactoryContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Authentication.PrincipalFactoryContext.User">
      <apidata name="User" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_User" />
      <setter name="set_User" />
      <returns>
        <type api="T:Griffin.Networking.Http.Services.Authentication.IAuthenticationUser" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.PrincipalFactoryContext" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Authentication.SingleRealmRepository">
      <apidata name="SingleRealmRepository" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Services.Authentication.IRealmRepository" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Authentication.SingleRealmRepository.#ctor(System.String)" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.SingleRealmRepository.GetRealm(Griffin.Networking.Http.Protocol.IRequest)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.SingleRealmRepository.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.SingleRealmRepository" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.SingleRealmRepository.GetRealm(Griffin.Networking.Http.Protocol.IRequest)">
      <apidata name="GetRealm" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="request">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Services.Authentication.IRealmRepository.GetRealm(Griffin.Networking.Http.Protocol.IRequest)">
          <type api="T:Griffin.Networking.Http.Services.Authentication.IRealmRepository" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.SingleRealmRepository" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Services.Authentication.Digest">
      <apidata name="Griffin.Networking.Http.Services.Authentication.Digest" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Services.Authentication.Digest.Nonce" />
        <element api="T:Griffin.Networking.Http.Services.Authentication.Digest.NonceService" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Authentication.Digest.Nonce">
      <apidata name="Nonce" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Authentication.Digest.Nonce.#ctor(System.DateTime)" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.Digest.Nonce.Validate(System.Int32)" />
        <element api="P:Griffin.Networking.Http.Services.Authentication.Digest.Nonce.PassedCounts" />
        <element api="P:Griffin.Networking.Http.Services.Authentication.Digest.Nonce.LastUpdate" />
        <element api="P:Griffin.Networking.Http.Services.Authentication.Digest.Nonce.Expired" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication.Digest" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.Digest.Nonce.#ctor(System.DateTime)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="expires">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication.Digest" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.Digest.Nonce" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Authentication.Digest.Nonce.Expired">
      <apidata name="Expired" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Expired" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication.Digest" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.Digest.Nonce" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Authentication.Digest.Nonce.LastUpdate">
      <apidata name="LastUpdate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_LastUpdate" />
      <setter name="set_LastUpdate" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication.Digest" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.Digest.Nonce" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Authentication.Digest.Nonce.PassedCounts">
      <apidata name="PassedCounts" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_PassedCounts" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication.Digest" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.Digest.Nonce" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.Digest.Nonce.Validate(System.Int32)">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication.Digest" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.Digest.Nonce" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Authentication.Digest.NonceService">
      <apidata name="NonceService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Authentication.Digest.NonceService.#ctor" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.Digest.NonceService.#ctor(System.TimeSpan)" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.Digest.NonceService.Dispose" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.Digest.NonceService.IsValid(System.String,System.Int32)" />
        <element api="M:Griffin.Networking.Http.Services.Authentication.Digest.NonceService.CreateNonce" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication.Digest" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.Digest.NonceService.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication.Digest" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.Digest.NonceService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.Digest.NonceService.#ctor(System.TimeSpan)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="expiresTimeout">
          <type api="T:System.TimeSpan" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication.Digest" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.Digest.NonceService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.Digest.NonceService.CreateNonce">
      <apidata name="CreateNonce" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication.Digest" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.Digest.NonceService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.Digest.NonceService.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication.Digest" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.Digest.NonceService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Authentication.Digest.NonceService.IsValid(System.String,System.Int32)">
      <apidata name="IsValid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="counter">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Authentication.Digest" />
        <type api="T:Griffin.Networking.Http.Services.Authentication.Digest.NonceService" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Services.BodyDecoders">
      <apidata name="Griffin.Networking.Http.Services.BodyDecoders" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder" />
        <element api="T:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder" />
        <element api="T:Griffin.Networking.Http.Services.BodyDecoders.CompositeBodyDecoder" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Services.BodyDecoders.CompositeBodyDecoder">
      <apidata name="CompositeBodyDecoder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Services.IBodyDecoder" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.BodyDecoders.CompositeBodyDecoder.#ctor" />
        <element api="M:Griffin.Networking.Http.Services.BodyDecoders.CompositeBodyDecoder.Decode(Griffin.Networking.Http.Protocol.IRequest)" />
        <element api="M:Griffin.Networking.Http.Services.BodyDecoders.CompositeBodyDecoder.Add(System.String,Griffin.Networking.Http.Services.IBodyDecoder)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.BodyDecoders.CompositeBodyDecoder.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.CompositeBodyDecoder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.BodyDecoders.CompositeBodyDecoder.Add(System.String,Griffin.Networking.Http.Services.IBodyDecoder)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="mimeType">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="decoder">
          <type api="T:Griffin.Networking.Http.Services.IBodyDecoder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.CompositeBodyDecoder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.BodyDecoders.CompositeBodyDecoder.Decode(Griffin.Networking.Http.Protocol.IRequest)">
      <apidata name="Decode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Services.IBodyDecoder.Decode(Griffin.Networking.Http.Protocol.IRequest)">
          <type api="T:Griffin.Networking.Http.Services.IBodyDecoder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.CompositeBodyDecoder" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder">
      <apidata name="MultipartDecoder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Services.IBodyDecoder" ref="true" />
      </implements>
      <elements>
        <element api="F:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder.FormData" />
        <element api="F:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder.MimeType" />
        <element api="M:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder.Decode(Griffin.Networking.Http.Protocol.IRequest)" />
        <element api="M:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder.#ctor" />
        <element api="P:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder.ContentTypes" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder.ContentTypes">
      <apidata name="ContentTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContentTypes" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder.Decode(Griffin.Networking.Http.Protocol.IRequest)">
      <apidata name="Decode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Services.IBodyDecoder.Decode(Griffin.Networking.Http.Protocol.IRequest)">
          <type api="T:Griffin.Networking.Http.Services.IBodyDecoder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder" ref="true" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder.FormData">
      <apidata name="FormData" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder" ref="true" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder.MimeType">
      <apidata name="MimeType" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.MultipartDecoder" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder">
      <apidata name="UrlFormattedDecoder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Services.IBodyDecoder" ref="true" />
      </implements>
      <elements>
        <element api="F:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder.MimeType" />
        <element api="M:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder.Decode(Griffin.Networking.Http.Protocol.IRequest)" />
        <element api="M:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder.#ctor" />
        <element api="P:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder.ContentTypes" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder.ContentTypes">
      <apidata name="ContentTypes" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ContentTypes" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder.Decode(Griffin.Networking.Http.Protocol.IRequest)">
      <apidata name="Decode" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Services.IBodyDecoder.Decode(Griffin.Networking.Http.Protocol.IRequest)">
          <type api="T:Griffin.Networking.Http.Services.IBodyDecoder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder" ref="true" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder.MimeType">
      <apidata name="MimeType" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.BodyDecoders" />
        <type api="T:Griffin.Networking.Http.Services.BodyDecoders.UrlFormattedDecoder" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Services.Errors">
      <apidata name="Griffin.Networking.Http.Services.Errors" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Services.Errors.IErrorFormatter" />
        <element api="T:Griffin.Networking.Http.Services.Errors.SimpleErrorFormatter" />
        <element api="T:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext">
      <apidata name="ErrorFormatterContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext.#ctor(System.Exception,Griffin.Networking.Http.Protocol.IRequest,Griffin.Networking.Http.Protocol.IResponse)" />
        <element api="P:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext.Exception" />
        <element api="P:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext.Response" />
        <element api="P:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext.Request" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Errors" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext.#ctor(System.Exception,Griffin.Networking.Http.Protocol.IRequest,Griffin.Networking.Http.Protocol.IResponse)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="request">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
        <parameter name="response">
          <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Errors" />
        <type api="T:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext.Exception">
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Exception" />
      <setter name="set_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Errors" />
        <type api="T:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext.Request">
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Request" />
      <setter name="set_Request" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Errors" />
        <type api="T:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext.Response">
      <apidata name="Response" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Response" />
      <setter name="set_Response" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IResponse" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Errors" />
        <type api="T:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Errors.IErrorFormatter">
      <apidata name="IErrorFormatter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.Services.Errors.SimpleErrorFormatter" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Errors.IErrorFormatter.Format(Griffin.Networking.Http.Services.Errors.ErrorFormatterContext)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Errors" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Errors.IErrorFormatter.Format(Griffin.Networking.Http.Services.Errors.ErrorFormatterContext)">
      <apidata name="Format" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Errors" />
        <type api="T:Griffin.Networking.Http.Services.Errors.IErrorFormatter" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Errors.SimpleErrorFormatter">
      <apidata name="SimpleErrorFormatter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Services.Errors.IErrorFormatter" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Errors.SimpleErrorFormatter.Format(Griffin.Networking.Http.Services.Errors.ErrorFormatterContext)" />
        <element api="M:Griffin.Networking.Http.Services.Errors.SimpleErrorFormatter.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Errors" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Errors.SimpleErrorFormatter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Errors" />
        <type api="T:Griffin.Networking.Http.Services.Errors.SimpleErrorFormatter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Errors.SimpleErrorFormatter.Format(Griffin.Networking.Http.Services.Errors.ErrorFormatterContext)">
      <apidata name="Format" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Services.Errors.ErrorFormatterContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Http.Services.Errors.IErrorFormatter.Format(Griffin.Networking.Http.Services.Errors.ErrorFormatterContext)">
          <type api="T:Griffin.Networking.Http.Services.Errors.IErrorFormatter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Errors" />
        <type api="T:Griffin.Networking.Http.Services.Errors.SimpleErrorFormatter" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Services.Files">
      <apidata name="Griffin.Networking.Http.Services.Files" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Services.Files.MimeTypeProvider" />
        <element api="T:Griffin.Networking.Http.Services.Files.IFileService" />
        <element api="T:Griffin.Networking.Http.Services.Files.CompositeFileService" />
        <element api="T:Griffin.Networking.Http.Services.Files.DiskFileService" />
        <element api="T:Griffin.Networking.Http.Services.Files.FileContext" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Files.CompositeFileService">
      <apidata name="CompositeFileService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Services.Files.IFileService" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Files.CompositeFileService.#ctor(Griffin.Networking.Http.Services.Files.IFileService[])" />
        <element api="M:Griffin.Networking.Http.Services.Files.CompositeFileService.GetFile(Griffin.Networking.Http.Services.Files.FileContext)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Files.CompositeFileService.#ctor(Griffin.Networking.Http.Services.Files.IFileService[])">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="fileServices" params="true">
          <arrayOf rank="1">
            <type api="T:Griffin.Networking.Http.Services.Files.IFileService" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.CompositeFileService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Files.CompositeFileService.GetFile(Griffin.Networking.Http.Services.Files.FileContext)">
      <apidata name="GetFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Services.Files.FileContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Services.Files.IFileService.GetFile(Griffin.Networking.Http.Services.Files.FileContext)">
          <type api="T:Griffin.Networking.Http.Services.Files.IFileService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.CompositeFileService" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Files.DiskFileService">
      <apidata name="DiskFileService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Services.Files.IFileService" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Files.DiskFileService.#ctor(System.String,System.String)" />
        <element api="M:Griffin.Networking.Http.Services.Files.DiskFileService.GetFile(Griffin.Networking.Http.Services.Files.FileContext)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Files.DiskFileService.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="rootUri">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="rootFilePath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.DiskFileService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Files.DiskFileService.GetFile(Griffin.Networking.Http.Services.Files.FileContext)">
      <apidata name="GetFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Services.Files.FileContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Services.Files.IFileService.GetFile(Griffin.Networking.Http.Services.Files.FileContext)">
          <type api="T:Griffin.Networking.Http.Services.Files.IFileService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.DiskFileService" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Files.FileContext">
      <apidata name="FileContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Files.FileContext.#ctor(Griffin.Networking.Http.Protocol.IRequest,System.DateTime)" />
        <element api="M:Griffin.Networking.Http.Services.Files.FileContext.SetFile(System.String,System.IO.Stream,System.DateTime)" />
        <element api="M:Griffin.Networking.Http.Services.Files.FileContext.SetNotModified(System.String)" />
        <element api="P:Griffin.Networking.Http.Services.Files.FileContext.IsFound" />
        <element api="P:Griffin.Networking.Http.Services.Files.FileContext.Request" />
        <element api="P:Griffin.Networking.Http.Services.Files.FileContext.BrowserCacheDate" />
        <element api="P:Griffin.Networking.Http.Services.Files.FileContext.LastModifiedAtUtc" />
        <element api="P:Griffin.Networking.Http.Services.Files.FileContext.FileStream" />
        <element api="P:Griffin.Networking.Http.Services.Files.FileContext.Filename" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Files.FileContext.#ctor(Griffin.Networking.Http.Protocol.IRequest,System.DateTime)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="request">
          <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
        </parameter>
        <parameter name="browserCacheDate">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.FileContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Files.FileContext.BrowserCacheDate">
      <apidata name="BrowserCacheDate" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BrowserCacheDate" />
      <setter name="set_BrowserCacheDate" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.FileContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Files.FileContext.Filename">
      <apidata name="Filename" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Filename" />
      <setter name="set_Filename" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.FileContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Files.FileContext.FileStream">
      <apidata name="FileStream" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_FileStream" />
      <setter name="set_FileStream" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.FileContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Files.FileContext.IsFound">
      <apidata name="IsFound" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_IsFound" />
      <setter name="set_IsFound" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.FileContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Files.FileContext.LastModifiedAtUtc">
      <apidata name="LastModifiedAtUtc" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_LastModifiedAtUtc" />
      <setter name="set_LastModifiedAtUtc" />
      <returns>
        <type api="T:System.DateTime" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.FileContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Files.FileContext.Request">
      <apidata name="Request" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Request" />
      <setter name="set_Request" />
      <returns>
        <type api="T:Griffin.Networking.Http.Protocol.IRequest" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.FileContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Files.FileContext.SetFile(System.String,System.IO.Stream,System.DateTime)">
      <apidata name="SetFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
        <parameter name="lastModifiedAtUtc">
          <type api="T:System.DateTime" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.FileContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Files.FileContext.SetNotModified(System.String)">
      <apidata name="SetNotModified" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fileName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.FileContext" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Files.IFileService">
      <apidata name="IFileService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.Services.Files.CompositeFileService" ref="true" />
        <type api="T:Griffin.Networking.Http.Services.Files.DiskFileService" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Files.IFileService.GetFile(Griffin.Networking.Http.Services.Files.FileContext)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Files.IFileService.GetFile(Griffin.Networking.Http.Services.Files.FileContext)">
      <apidata name="GetFile" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Services.Files.FileContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.IFileService" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Files.MimeTypeProvider">
      <apidata name="MimeTypeProvider" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Griffin.Networking.Http.Services.Files.MimeTypeProvider._instance" />
        <element api="M:Griffin.Networking.Http.Services.Files.MimeTypeProvider.Add(System.String,System.String)" />
        <element api="M:Griffin.Networking.Http.Services.Files.MimeTypeProvider.Remove(System.String)" />
        <element api="M:Griffin.Networking.Http.Services.Files.MimeTypeProvider.Get(System.String)" />
        <element api="P:Griffin.Networking.Http.Services.Files.MimeTypeProvider.Instance" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Http.Services.Files.MimeTypeProvider._instance">
      <apidata name="_instance" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Griffin.Networking.Http.Services.Files.MimeTypeProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.MimeTypeProvider" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Files.MimeTypeProvider.Add(System.String,System.String)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="extension">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="mimeType">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.MimeTypeProvider" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Files.MimeTypeProvider.Get(System.String)">
      <apidata name="Get" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="filename">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.MimeTypeProvider" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.Files.MimeTypeProvider.Instance">
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:Griffin.Networking.Http.Services.Files.MimeTypeProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.MimeTypeProvider" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Files.MimeTypeProvider.Remove(System.String)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="extension">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Files" />
        <type api="T:Griffin.Networking.Http.Services.Files.MimeTypeProvider" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Services.Routing">
      <apidata name="Griffin.Networking.Http.Services.Routing" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Services.Routing.IRequestRouter" />
        <element api="T:Griffin.Networking.Http.Services.Routing.DefaultDocumentRouter" />
        <element api="T:Griffin.Networking.Http.Services.Routing.RegexPattern" />
        <element api="T:Griffin.Networking.Http.Services.Routing.RegexRouter" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Routing.DefaultDocumentRouter">
      <apidata name="DefaultDocumentRouter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Services.Routing.IRequestRouter" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Routing.DefaultDocumentRouter.#ctor(System.String,System.String)" />
        <element api="M:Griffin.Networking.Http.Services.Routing.DefaultDocumentRouter.Route(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Routing" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Routing.DefaultDocumentRouter.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="homeDirectory">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="documentName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Routing" />
        <type api="T:Griffin.Networking.Http.Services.Routing.DefaultDocumentRouter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Routing.DefaultDocumentRouter.Route(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="Route" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Services.Routing.IRequestRouter.Route(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Services.Routing.IRequestRouter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Routing" />
        <type api="T:Griffin.Networking.Http.Services.Routing.DefaultDocumentRouter" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Routing.IRequestRouter">
      <apidata name="IRequestRouter" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.Services.Routing.DefaultDocumentRouter" ref="true" />
        <type api="T:Griffin.Networking.Http.Services.Routing.RegexRouter" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Routing.IRequestRouter.Route(Griffin.Networking.Http.Server.IHttpContext)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Routing" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Routing.IRequestRouter.Route(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="Route" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Routing" />
        <type api="T:Griffin.Networking.Http.Services.Routing.IRequestRouter" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Routing.RegexPattern">
      <apidata name="RegexPattern" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Routing.RegexPattern.#ctor(System.String,System.Object)" />
        <element api="M:Griffin.Networking.Http.Services.Routing.RegexPattern.Match(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Routing" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Routing.RegexPattern.#ctor(System.String,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaults">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Routing" />
        <type api="T:Griffin.Networking.Http.Services.Routing.RegexPattern" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Routing.RegexPattern.Match(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="Match" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Routing" />
        <type api="T:Griffin.Networking.Http.Services.Routing.RegexPattern" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.Routing.RegexRouter">
      <apidata name="RegexRouter" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Http.Services.Routing.IRequestRouter" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.Routing.RegexRouter.Route(Griffin.Networking.Http.Server.IHttpContext)" />
        <element api="M:Griffin.Networking.Http.Services.Routing.RegexRouter.Add(System.String,System.Object)" />
        <element api="M:Griffin.Networking.Http.Services.Routing.RegexRouter.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Routing" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Routing.RegexRouter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Routing" />
        <type api="T:Griffin.Networking.Http.Services.Routing.RegexRouter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Routing.RegexRouter.Add(System.String,System.Object)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="pattern">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="defaults">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Routing" />
        <type api="T:Griffin.Networking.Http.Services.Routing.RegexRouter" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.Routing.RegexRouter.Route(Griffin.Networking.Http.Server.IHttpContext)">
      <apidata name="Route" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Server.IHttpContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Http.Services.Routing.IRequestRouter.Route(Griffin.Networking.Http.Server.IHttpContext)">
          <type api="T:Griffin.Networking.Http.Services.Routing.IRequestRouter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.Routing" />
        <type api="T:Griffin.Networking.Http.Services.Routing.RegexRouter" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Services.ViewEngines">
      <apidata name="Griffin.Networking.Http.Services.ViewEngines" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Services.ViewEngines.IViewEngine" />
        <element api="T:Griffin.Networking.Http.Services.ViewEngines.ViewContext" />
        <element api="T:Griffin.Networking.Http.Services.ViewEngines.ViewNotFoundException" />
        <element api="T:Griffin.Networking.Http.Services.ViewEngines.ViewService" />
        <element api="T:Griffin.Networking.Http.Services.ViewEngines.ViewEngineContext" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Services.ViewEngines.IViewEngine">
      <apidata name="IViewEngine" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:Griffin.Networking.Http.Services.ViewEngines.IViewEngine.Render(Griffin.Networking.Http.Services.ViewEngines.ViewEngineContext)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.ViewEngines.IViewEngine.Render(Griffin.Networking.Http.Services.ViewEngines.ViewEngineContext)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewEngineContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.IViewEngine" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.ViewEngines.ViewContext">
      <apidata name="ViewContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.ViewEngines.ViewContext.#ctor" />
        <element api="P:Griffin.Networking.Http.Services.ViewEngines.ViewContext.ViewPath" />
        <element api="P:Griffin.Networking.Http.Services.ViewEngines.ViewContext.ViewWriter" />
        <element api="P:Griffin.Networking.Http.Services.ViewEngines.ViewContext.Model" />
        <element api="P:Griffin.Networking.Http.Services.ViewEngines.ViewContext.ModuleType" />
        <element api="P:Griffin.Networking.Http.Services.ViewEngines.ViewContext.ViewData" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.ViewEngines.ViewContext.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.ViewEngines.ViewContext.Model">
      <apidata name="Model" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Model" />
      <setter name="set_Model" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.ViewEngines.ViewContext.ModuleType">
      <apidata name="ModuleType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ModuleType" />
      <setter name="set_ModuleType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.ViewEngines.ViewContext.ViewData">
      <apidata name="ViewData" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ViewData" />
      <setter name="set_ViewData" />
      <returns>
        <type api="T:Griffin.Networking.Http.Server.IItemStorage" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.ViewEngines.ViewContext.ViewPath">
      <apidata name="ViewPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ViewPath" />
      <setter name="set_ViewPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.ViewEngines.ViewContext.ViewWriter">
      <apidata name="ViewWriter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ViewWriter" />
      <setter name="set_ViewWriter" />
      <returns>
        <type api="T:System.IO.TextWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewContext" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.ViewEngines.ViewEngineContext">
      <apidata name="ViewEngineContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.ViewEngines.ViewEngineContext.#ctor" />
        <element api="P:Griffin.Networking.Http.Services.ViewEngines.ViewEngineContext.ViewContext" />
        <element api="P:Griffin.Networking.Http.Services.ViewEngines.ViewEngineContext.FileService" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.ViewEngines.ViewEngineContext.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewEngineContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.ViewEngines.ViewEngineContext.FileService">
      <apidata name="FileService" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FileService" />
      <setter name="set_FileService" />
      <returns>
        <type api="T:Griffin.Networking.Http.Services.Files.IFileService" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewEngineContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.ViewEngines.ViewEngineContext.ViewContext">
      <apidata name="ViewContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ViewContext" />
      <setter name="set_ViewContext" />
      <returns>
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewContext" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewEngineContext" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.ViewEngines.ViewNotFoundException">
      <apidata name="ViewNotFoundException" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Http.HttpException" ref="true" />
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.ViewEngines.ViewNotFoundException.#ctor(System.String)" />
        <element api="P:Griffin.Networking.Http.Services.ViewEngines.ViewNotFoundException.ViewPath" />
        <element api="P:Griffin.Networking.Http.HttpException.StatusCode" />
        <element api="M:System.Exception.GetBaseException">
          <apidata name="GetBaseException" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetBaseException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Exception.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <overrides>
            <member api="M:System.Object.ToString">
              <type api="T:System.Object" ref="true" />
            </member>
          </overrides>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.ToString">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline this type of method across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <apidata name="GetObjectData" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="info">
              <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
            </parameter>
            <parameter name="context">
              <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
            </parameter>
          </parameters>
          <implements>
            <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
            </member>
            <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Exception.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <implements>
            <member api="M:System.Runtime.InteropServices._Exception.GetType">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Message">
          <apidata name="Message" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Message" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Message">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Data">
          <apidata name="Data" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_Data" />
          <returns>
            <type api="T:System.Collections.IDictionary" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.InnerException">
          <apidata name="InnerException" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_InnerException">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Exception" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.InnerException">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.TargetSite">
          <apidata name="TargetSite" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" final="true" />
          <propertydata get="true" />
          <getter name="get_TargetSite">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.Reflection.MethodBase" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.TargetSite">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.StackTrace">
          <apidata name="StackTrace" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" />
          <getter name="get_StackTrace">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.StackTrace">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HelpLink">
          <apidata name="HelpLink" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_HelpLink">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_HelpLink">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.HelpLink">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.Source">
          <apidata name="Source" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <propertydata get="true" set="true" />
          <getter name="get_Source" />
          <setter name="set_Source">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <implements>
            <member api="P:System.Runtime.InteropServices._Exception.Source">
              <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
            </member>
          </implements>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="P:System.Exception.HResult">
          <apidata name="HResult" group="member" subgroup="property" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <propertydata get="true" set="true" set-visibility="family" />
          <getter name="get_HResult">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </getter>
          <setter name="set_HResult">
            <attributes>
              <attribute>
                <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
                <argument>
                  <type api="T:System.String" ref="true" />
                  <value>Performance critical to inline this type of method across NGen image boundaries</value>
                </argument>
              </attribute>
            </attributes>
          </setter>
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="E:System.Exception.SerializeObjectState">
          <apidata name="SerializeObjectState" group="member" subgroup="event" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <eventdata add="true" remove="true" />
          <adder name="add_SerializeObjectState" />
          <remover name="remove_SerializeObjectState" />
          <eventhandler>
            <type api="T:System.EventHandler`1" ref="true">
              <specialization>
                <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
              </specialization>
            </type>
          </eventhandler>
          <eventargs>
            <type api="T:System.Runtime.Serialization.SafeSerializationEventArgs" ref="true" />
          </eventargs>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Exception" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.ViewEngines.ViewNotFoundException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="viewPath">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Services.ViewEngines.ViewNotFoundException.ViewPath">
      <apidata name="ViewPath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_ViewPath" />
      <setter name="set_ViewPath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Http.Services.ViewEngines.ViewService">
      <apidata name="ViewService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Http.Services.ViewEngines.ViewService.#ctor(Griffin.Networking.Http.Services.Files.IFileService)" />
        <element api="M:Griffin.Networking.Http.Services.ViewEngines.ViewService.Register(Griffin.Networking.Http.Services.ViewEngines.IViewEngine)" />
        <element api="M:Griffin.Networking.Http.Services.ViewEngines.ViewService.Render(Griffin.Networking.Http.Services.ViewEngines.ViewContext)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.ViewEngines.ViewService.#ctor(Griffin.Networking.Http.Services.Files.IFileService)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="fileService">
          <type api="T:Griffin.Networking.Http.Services.Files.IFileService" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.ViewEngines.ViewService.Register(Griffin.Networking.Http.Services.ViewEngines.IViewEngine)">
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="viewEngine">
          <type api="T:Griffin.Networking.Http.Services.ViewEngines.IViewEngine" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Services.ViewEngines.ViewService.Render(Griffin.Networking.Http.Services.ViewEngines.ViewContext)">
      <apidata name="Render" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Services.ViewEngines" />
        <type api="T:Griffin.Networking.Http.Services.ViewEngines.ViewService" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Http.Specification">
      <apidata name="Griffin.Networking.Http.Specification" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Http.Specification.IHttpCookieCollection`1" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Http.Specification.IHttpCookieCollection`1">
      <apidata name="IHttpCookieCollection" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:Griffin.Networking.Http.Protocol.IHttpCookie" ref="true" />
            </implements>
          </constrained>
          <variance covariant="true" />
        </template>
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:Griffin.Networking.Http.Specification.IHttpCookieCollection`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Http.Specification.IHttpCookieCollection`1.Clear" />
        <element api="M:Griffin.Networking.Http.Specification.IHttpCookieCollection`1.Remove(System.String)" />
        <element api="P:Griffin.Networking.Http.Specification.IHttpCookieCollection`1.Count" />
        <element api="P:Griffin.Networking.Http.Specification.IHttpCookieCollection`1.Item(System.String)" />
        <element api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Griffin.Networking.Http.Specification.IHttpCookieCollection`1" />
              </specialization>
            </type>
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections.Generic" />
            <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
              <specialization>
                <template name="T" index="0" api="T:Griffin.Networking.Http.Specification.IHttpCookieCollection`1" />
              </specialization>
            </type>
          </containers>
        </element>
        <element api="M:System.Collections.IEnumerable.GetEnumerator">
          <apidata name="GetEnumerator" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <returns>
            <type api="T:System.Collections.IEnumerator" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System.Collections" />
            <type api="T:System.Collections.IEnumerable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Specification" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Specification.IHttpCookieCollection`1.Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Specification" />
        <type api="T:Griffin.Networking.Http.Specification.IHttpCookieCollection`1" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Specification.IHttpCookieCollection`1.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Specification" />
        <type api="T:Griffin.Networking.Http.Specification.IHttpCookieCollection`1" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Http.Specification.IHttpCookieCollection`1.Item(System.String)">
      <apidata name="Item" group="member" subgroup="property" />
      <memberdata visibility="public" default="true" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_Item" />
      <parameters>
        <parameter name="id">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <template name="T" index="0" api="T:Griffin.Networking.Http.Specification.IHttpCookieCollection`1" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Specification" />
        <type api="T:Griffin.Networking.Http.Specification.IHttpCookieCollection`1" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Http.Specification.IHttpCookieCollection`1.Remove(System.String)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="cookieName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking.Http" module="Griffin.Networking.Http" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Http.Specification" />
        <type api="T:Griffin.Networking.Http.Specification.IHttpCookieCollection`1" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Logging">
      <apidata name="Griffin.Networking.Logging" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Logging.ILogger" />
        <element api="T:Griffin.Networking.Logging.BaseLogger" />
        <element api="T:Griffin.Networking.Logging.ConsoleLogger" />
        <element api="T:Griffin.Networking.Logging.FilteredLogger" />
        <element api="T:Griffin.Networking.Logging.LogLevel" />
        <element api="T:Griffin.Networking.Logging.LogManager" />
        <element api="T:Griffin.Networking.Logging.NullLogger" />
        <element api="T:Griffin.Networking.Logging.SimpleFilteredLogManager`1" />
        <element api="T:Griffin.Networking.Logging.SimpleLogManager`1" />
        <element api="T:Griffin.Networking.Logging.SystemDebugLogger" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Logging.BaseLogger">
      <apidata name="BaseLogger" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Griffin.Networking.Logging.ConsoleLogger" ref="true" />
          <type api="T:Griffin.Networking.Logging.FilteredLogger" ref="true" />
          <type api="T:Griffin.Networking.Logging.SystemDebugLogger" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Logging.BaseLogger.#ctor(System.Type)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Trace(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Trace(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Debug(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Debug(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Warning(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Warning(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Error(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Error(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Write(Griffin.Networking.Logging.LogLevel,System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.BuildExceptionDetails(System.Exception,System.Int32)" />
        <element api="P:Griffin.Networking.Logging.BaseLogger.SkipFrameCount" />
        <element api="P:Griffin.Networking.Logging.BaseLogger.LoggedType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.BaseLogger.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="loggedType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.BaseLogger.BuildExceptionDetails(System.Exception,System.Int32)">
      <apidata name="BuildExceptionDetails" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
        <parameter name="spaces">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.BaseLogger.Debug(System.String)">
      <apidata name="Debug" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Debug(System.String)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.BaseLogger.Debug(System.String,System.Exception)">
      <apidata name="Debug" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Debug(System.String,System.Exception)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.BaseLogger.Error(System.String)">
      <apidata name="Error" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Error(System.String)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.BaseLogger.Error(System.String,System.Exception)">
      <apidata name="Error" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Error(System.String,System.Exception)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Logging.BaseLogger.LoggedType">
      <apidata name="LoggedType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LoggedType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Logging.BaseLogger.SkipFrameCount">
      <apidata name="SkipFrameCount" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <propertydata get="true" />
      <getter name="get_SkipFrameCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.BaseLogger.Trace(System.String)">
      <apidata name="Trace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Trace(System.String)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.BaseLogger.Trace(System.String,System.Exception)">
      <apidata name="Trace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Trace(System.String,System.Exception)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.BaseLogger.Warning(System.String)">
      <apidata name="Warning" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Warning(System.String)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.BaseLogger.Warning(System.String,System.Exception)">
      <apidata name="Warning" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Warning(System.String,System.Exception)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.BaseLogger.Write(Griffin.Networking.Logging.LogLevel,System.String,System.Exception)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="logLevel">
          <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
        </parameter>
        <parameter name="msg">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Logging.ConsoleLogger">
      <apidata name="ConsoleLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Logging.ConsoleLogger.#ctor(System.Type)" />
        <element api="M:Griffin.Networking.Logging.ConsoleLogger.Write(Griffin.Networking.Logging.LogLevel,System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.ConsoleLogger.GetColor(Griffin.Networking.Logging.LogLevel)" />
        <element api="P:Griffin.Networking.Logging.ConsoleLogger.SkipFrameCount" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Trace(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Trace(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Debug(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Debug(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Warning(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Warning(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Error(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Error(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.BuildExceptionDetails(System.Exception,System.Int32)" />
        <element api="P:Griffin.Networking.Logging.BaseLogger.LoggedType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.ConsoleLogger.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="loggedType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.ConsoleLogger.GetColor(Griffin.Networking.Logging.LogLevel)">
      <apidata name="GetColor" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="logLevel">
          <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ConsoleColor" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Logging.ConsoleLogger.SkipFrameCount">
      <apidata name="SkipFrameCount" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Griffin.Networking.Logging.BaseLogger.SkipFrameCount">
          <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SkipFrameCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.ConsoleLogger.Write(Griffin.Networking.Logging.LogLevel,System.String,System.Exception)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Logging.BaseLogger.Write(Griffin.Networking.Logging.LogLevel,System.String,System.Exception)">
          <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="logLevel">
          <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
        </parameter>
        <parameter name="msg">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.ConsoleLogger" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Logging.FilteredLogger">
      <apidata name="FilteredLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Logging.FilteredLogger.#ctor(System.Type,Griffin.Networking.Logging.BaseLogger)" />
        <element api="M:Griffin.Networking.Logging.FilteredLogger.#ctor(Griffin.Networking.Logging.LogLevel,System.Type,Griffin.Networking.Logging.BaseLogger)" />
        <element api="M:Griffin.Networking.Logging.FilteredLogger.Write(Griffin.Networking.Logging.LogLevel,System.String,System.Exception)" />
        <element api="P:Griffin.Networking.Logging.FilteredLogger.SkipFrameCount" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Trace(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Trace(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Debug(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Debug(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Warning(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Warning(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Error(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Error(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.BuildExceptionDetails(System.Exception,System.Int32)" />
        <element api="P:Griffin.Networking.Logging.BaseLogger.LoggedType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.FilteredLogger.#ctor(Griffin.Networking.Logging.LogLevel,System.Type,Griffin.Networking.Logging.BaseLogger)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="minLevel">
          <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
        </parameter>
        <parameter name="loggedType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="innerLogger">
          <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.FilteredLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.FilteredLogger.#ctor(System.Type,Griffin.Networking.Logging.BaseLogger)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="innerLogger">
          <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.FilteredLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Logging.FilteredLogger.SkipFrameCount">
      <apidata name="SkipFrameCount" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Griffin.Networking.Logging.BaseLogger.SkipFrameCount">
          <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SkipFrameCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.FilteredLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.FilteredLogger.Write(Griffin.Networking.Logging.LogLevel,System.String,System.Exception)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Logging.BaseLogger.Write(Griffin.Networking.Logging.LogLevel,System.String,System.Exception)">
          <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="logLevel">
          <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
        </parameter>
        <parameter name="msg">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.FilteredLogger" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Logging.ILogger">
      <apidata name="ILogger" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
        <type api="T:Griffin.Networking.Logging.NullLogger" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Logging.ILogger.Trace(System.String)" />
        <element api="M:Griffin.Networking.Logging.ILogger.Trace(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.ILogger.Debug(System.String)" />
        <element api="M:Griffin.Networking.Logging.ILogger.Debug(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.ILogger.Warning(System.String)" />
        <element api="M:Griffin.Networking.Logging.ILogger.Warning(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.ILogger.Error(System.String)" />
        <element api="M:Griffin.Networking.Logging.ILogger.Error(System.String,System.Exception)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.ILogger.Debug(System.String)">
      <apidata name="Debug" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.ILogger.Debug(System.String,System.Exception)">
      <apidata name="Debug" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.ILogger.Error(System.String)">
      <apidata name="Error" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.ILogger.Error(System.String,System.Exception)">
      <apidata name="Error" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.ILogger.Trace(System.String)">
      <apidata name="Trace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.ILogger.Trace(System.String,System.Exception)">
      <apidata name="Trace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.ILogger.Warning(System.String)">
      <apidata name="Warning" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.ILogger.Warning(System.String,System.Exception)">
      <apidata name="Warning" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Logging.LogLevel">
      <apidata name="LogLevel" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="F:Griffin.Networking.Logging.LogLevel.Trace" />
        <element api="F:Griffin.Networking.Logging.LogLevel.Debug" />
        <element api="F:Griffin.Networking.Logging.LogLevel.Info" />
        <element api="F:Griffin.Networking.Logging.LogLevel.Warning" />
        <element api="F:Griffin.Networking.Logging.LogLevel.Error" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Logging.LogLevel.Debug">
      <apidata name="Debug" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Logging.LogLevel.Error">
      <apidata name="Error" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
      </returns>
      <value>4</value>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Logging.LogLevel.Info">
      <apidata name="Info" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Logging.LogLevel.Trace">
      <apidata name="Trace" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Logging.LogLevel.Warning">
      <apidata name="Warning" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
      </returns>
      <value>3</value>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Logging.LogManager">
      <apidata name="LogManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Griffin.Networking.Logging.SimpleFilteredLogManager`1" ref="true" />
          <type api="T:Griffin.Networking.Logging.SimpleLogManager`1" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Logging.LogManager.GetLogger``1" />
        <element api="M:Griffin.Networking.Logging.LogManager.GetLogger(System.Type)" />
        <element api="M:Griffin.Networking.Logging.LogManager.GetLoggerInternal(System.Type)" />
        <element api="M:Griffin.Networking.Logging.LogManager.Assign(Griffin.Networking.Logging.LogManager)" />
        <element api="M:Griffin.Networking.Logging.LogManager.#ctor" />
        <element api="P:Griffin.Networking.Logging.LogManager.Current" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.LogManager.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.LogManager" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.LogManager.Assign(Griffin.Networking.Logging.LogManager)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logManager">
          <type api="T:Griffin.Networking.Logging.LogManager" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.LogManager" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Logging.LogManager.Current">
      <apidata name="Current" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Current" />
      <returns>
        <type api="T:Griffin.Networking.Logging.LogManager" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.LogManager" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.LogManager.GetLogger``1">
      <apidata name="GetLogger" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained ref="true" />
        </template>
      </templates>
      <returns>
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.LogManager" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.LogManager.GetLogger(System.Type)">
      <apidata name="GetLogger" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="loggingType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.LogManager" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.LogManager.GetLoggerInternal(System.Type)">
      <apidata name="GetLoggerInternal" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="loggingType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.LogManager" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Logging.NullLogger">
      <apidata name="NullLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Logging.NullLogger.Trace(System.String)" />
        <element api="M:Griffin.Networking.Logging.NullLogger.Trace(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.NullLogger.Debug(System.String)" />
        <element api="M:Griffin.Networking.Logging.NullLogger.Debug(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.NullLogger.Warning(System.String)" />
        <element api="M:Griffin.Networking.Logging.NullLogger.Warning(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.NullLogger.Error(System.String)" />
        <element api="M:Griffin.Networking.Logging.NullLogger.Error(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.NullLogger.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.NullLogger.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.NullLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.NullLogger.Debug(System.String)">
      <apidata name="Debug" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Debug(System.String)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.NullLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.NullLogger.Debug(System.String,System.Exception)">
      <apidata name="Debug" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Debug(System.String,System.Exception)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.NullLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.NullLogger.Error(System.String)">
      <apidata name="Error" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Error(System.String)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.NullLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.NullLogger.Error(System.String,System.Exception)">
      <apidata name="Error" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Error(System.String,System.Exception)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.NullLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.NullLogger.Trace(System.String)">
      <apidata name="Trace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Trace(System.String)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.NullLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.NullLogger.Trace(System.String,System.Exception)">
      <apidata name="Trace" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Trace(System.String,System.Exception)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.NullLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.NullLogger.Warning(System.String)">
      <apidata name="Warning" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Warning(System.String)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.NullLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.NullLogger.Warning(System.String,System.Exception)">
      <apidata name="Warning" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Logging.ILogger.Warning(System.String,System.Exception)">
          <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.NullLogger" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Logging.SimpleFilteredLogManager`1">
      <apidata name="SimpleFilteredLogManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Logging.LogManager" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Griffin.Networking.Logging.SimpleFilteredLogManager`1.#ctor(Griffin.Networking.Logging.LogLevel)" />
        <element api="M:Griffin.Networking.Logging.SimpleFilteredLogManager`1.GetLoggerInternal(System.Type)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.SimpleFilteredLogManager`1.#ctor(Griffin.Networking.Logging.LogLevel)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="minimumLevel">
          <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.SimpleFilteredLogManager`1" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.SimpleFilteredLogManager`1.GetLoggerInternal(System.Type)">
      <apidata name="GetLoggerInternal" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Logging.LogManager.GetLoggerInternal(System.Type)">
          <type api="T:Griffin.Networking.Logging.LogManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="loggingType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.SimpleFilteredLogManager`1" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Logging.SimpleLogManager`1">
      <apidata name="SimpleLogManager" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Logging.LogManager" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Griffin.Networking.Logging.SimpleLogManager`1.#ctor" />
        <element api="M:Griffin.Networking.Logging.SimpleLogManager`1.GetLoggerInternal(System.Type)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.SimpleLogManager`1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.SimpleLogManager`1" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.SimpleLogManager`1.GetLoggerInternal(System.Type)">
      <apidata name="GetLoggerInternal" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Logging.LogManager.GetLoggerInternal(System.Type)">
          <type api="T:Griffin.Networking.Logging.LogManager" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="loggingType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Logging.ILogger" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.SimpleLogManager`1" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Logging.SystemDebugLogger">
      <apidata name="SystemDebugLogger" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Logging.SystemDebugLogger.#ctor(System.Type)" />
        <element api="M:Griffin.Networking.Logging.SystemDebugLogger.Write(Griffin.Networking.Logging.LogLevel,System.String,System.Exception)" />
        <element api="P:Griffin.Networking.Logging.SystemDebugLogger.SkipFrameCount" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Trace(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Trace(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Debug(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Debug(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Warning(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Warning(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Error(System.String)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.Error(System.String,System.Exception)" />
        <element api="M:Griffin.Networking.Logging.BaseLogger.BuildExceptionDetails(System.Exception,System.Int32)" />
        <element api="P:Griffin.Networking.Logging.BaseLogger.LoggedType" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.SystemDebugLogger.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="loggedType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.SystemDebugLogger" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Logging.SystemDebugLogger.SkipFrameCount">
      <apidata name="SkipFrameCount" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Griffin.Networking.Logging.BaseLogger.SkipFrameCount">
          <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_SkipFrameCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.SystemDebugLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Logging.SystemDebugLogger.Write(Griffin.Networking.Logging.LogLevel,System.String,System.Exception)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Logging.BaseLogger.Write(Griffin.Networking.Logging.LogLevel,System.String,System.Exception)">
          <type api="T:Griffin.Networking.Logging.BaseLogger" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="logLevel">
          <type api="T:Griffin.Networking.Logging.LogLevel" ref="false" />
        </parameter>
        <parameter name="msg">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Logging" />
        <type api="T:Griffin.Networking.Logging.SystemDebugLogger" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Messaging">
      <apidata name="Griffin.Networking.Messaging" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Messaging.MessagingClient" />
        <element api="T:Griffin.Networking.Messaging.MessagingService" />
        <element api="T:Griffin.Networking.Messaging.ReceivedMessageEventArgs" />
        <element api="T:Griffin.Networking.Messaging.MessagingServer" />
        <element api="T:Griffin.Networking.Messaging.IMessageBuilder" />
        <element api="T:Griffin.Networking.Messaging.IMessageFormatterFactory" />
        <element api="T:Griffin.Networking.Messaging.IMessageSerializer" />
        <element api="T:Griffin.Networking.Messaging.MessagingClientContext" />
        <element api="T:Griffin.Networking.Messaging.MessagingServerConfiguration" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Messaging.IMessageBuilder">
      <apidata name="IMessageBuilder" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Protocols.Basic.BasicMessageBuilder" ref="true" />
        <type api="T:Griffin.Networking.Http.HttpMessageBuilder" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Messaging.IMessageBuilder.Append(Griffin.Networking.Buffers.IBufferReader)" />
        <element api="M:Griffin.Networking.Messaging.IMessageBuilder.TryDequeue(System.Object@)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.IMessageBuilder.Append(Griffin.Networking.Buffers.IBufferReader)">
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.IMessageBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.IMessageBuilder.TryDequeue(System.Object@)">
      <apidata name="TryDequeue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.IMessageBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Messaging.IMessageFormatterFactory">
      <apidata name="IMessageFormatterFactory" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Protocols.Basic.BasicMessageFactory" ref="true" />
        <type api="T:Griffin.Networking.Http.HttpMessageFactory" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Messaging.IMessageFormatterFactory.CreateSerializer" />
        <element api="M:Griffin.Networking.Messaging.IMessageFormatterFactory.CreateBuilder" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.IMessageFormatterFactory.CreateBuilder">
      <apidata name="CreateBuilder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Griffin.Networking.Messaging.IMessageBuilder" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.IMessageFormatterFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.IMessageFormatterFactory.CreateSerializer">
      <apidata name="CreateSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Griffin.Networking.Messaging.IMessageSerializer" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.IMessageFormatterFactory" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Messaging.IMessageSerializer">
      <apidata name="IMessageSerializer" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Protocols.Basic.BasicMessageSerializer" ref="true" />
        <type api="T:Griffin.Networking.Http.HttpMessageSerializer" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Messaging.IMessageSerializer.Serialize(System.Object,Griffin.Networking.Buffers.IBufferWriter)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.IMessageSerializer.Serialize(System.Object,Griffin.Networking.Buffers.IBufferWriter)">
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:Griffin.Networking.Buffers.IBufferWriter" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.IMessageSerializer" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Messaging.MessagingClient">
      <apidata name="MessagingClient" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Clients.ClientBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Messaging.MessagingClient.#ctor(Griffin.Networking.Messaging.IMessageFormatterFactory)" />
        <element api="M:Griffin.Networking.Messaging.MessagingClient.OnReceived(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Messaging.MessagingClient.Send(System.Object)" />
        <element api="M:Griffin.Networking.Clients.ClientBase.Send(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Clients.ClientBase.Send(System.IO.Stream)" />
        <element api="E:Griffin.Networking.Messaging.MessagingClient.Received" />
        <element api="M:Griffin.Networking.Clients.ClientBase.HandleDisconnect(System.Net.Sockets.SocketAsyncEventArgs)" />
        <element api="M:Griffin.Networking.Clients.ClientBase.Connect(System.Net.IPEndPoint)" />
        <element api="M:Griffin.Networking.Clients.ClientBase.Close" />
        <element api="E:Griffin.Networking.Clients.ClientBase.Disconnected" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.MessagingClient.#ctor(Griffin.Networking.Messaging.IMessageFormatterFactory)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="formatterFactory">
          <type api="T:Griffin.Networking.Messaging.IMessageFormatterFactory" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingClient" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.MessagingClient.OnReceived(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name="OnReceived" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Clients.ClientBase.OnReceived(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
          <type api="T:Griffin.Networking.Clients.ClientBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="buffer">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="bytesRead">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingClient" ref="true" />
      </containers>
    </api>
    <api id="E:Griffin.Networking.Messaging.MessagingClient.Received">
      <apidata name="Received" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Received" />
      <remover name="remove_Received" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Griffin.Networking.Messaging.ReceivedMessageEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Griffin.Networking.Messaging.ReceivedMessageEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingClient" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.MessagingClient.Send(System.Object)">
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingClient" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Messaging.MessagingClientContext">
      <apidata name="MessagingClientContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Messaging.MessagingClientContext.#ctor(Griffin.Networking.Buffers.IBufferSlice,Griffin.Networking.Messaging.IMessageFormatterFactory)" />
        <element api="M:Griffin.Networking.Messaging.MessagingClientContext.HandleRead(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Messaging.MessagingClientContext.Write(System.Object)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Send(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Send(System.IO.Stream)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Close" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Close(System.Boolean)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.TriggerDisconnect(System.Net.Sockets.SocketError)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.OnDisconnect(System.Net.Sockets.SocketError)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.TriggerClientReceive(System.Object)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Assign(System.Net.Sockets.Socket,Griffin.Networking.Servers.IServerService)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.SetWriteBuffer(Griffin.Networking.Buffers.IBufferSlice)" />
        <element api="P:Griffin.Networking.Servers.ServerClientContext.ReadBuffer" />
        <element api="P:Griffin.Networking.Servers.ServerClientContext.RemoteEndPoint" />
        <element api="E:Griffin.Networking.Servers.ServerClientContext.Disconnected" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.MessagingClientContext.#ctor(Griffin.Networking.Buffers.IBufferSlice,Griffin.Networking.Messaging.IMessageFormatterFactory)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="readBuffer">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="formatterFactory">
          <type api="T:Griffin.Networking.Messaging.IMessageFormatterFactory" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.MessagingClientContext.HandleRead(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name="HandleRead" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Servers.ServerClientContext.HandleRead(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
          <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="slice">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="bytesRead">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.MessagingClientContext.Write(System.Object)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingClientContext" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Messaging.MessagingServer">
      <apidata name="MessagingServer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Servers.Server" ref="true" />
          <type api="T:Griffin.Networking.Servers.ServerBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Messaging.MessagingServer.#ctor(Griffin.Networking.Servers.IServiceFactory,Griffin.Networking.Messaging.MessagingServerConfiguration)" />
        <element api="M:Griffin.Networking.Messaging.MessagingServer.CreateClientContext(Griffin.Networking.Buffers.IBufferSlice)" />
        <element api="M:Griffin.Networking.Servers.Server.CreateClient(System.Net.EndPoint)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.OnClientDisconnected(Griffin.Networking.Servers.ServerClientContext)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.Start(System.Net.IPEndPoint)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.OnClientConnected(Griffin.Networking.Servers.ServerClientContext)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.ValidateClient(System.Net.Sockets.Socket)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.Stop" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.MessagingServer.#ctor(Griffin.Networking.Servers.IServiceFactory,Griffin.Networking.Messaging.MessagingServerConfiguration)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="clientFactory">
          <type api="T:Griffin.Networking.Servers.IServiceFactory" ref="true" />
        </parameter>
        <parameter name="configuration">
          <type api="T:Griffin.Networking.Messaging.MessagingServerConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingServer" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.MessagingServer.CreateClientContext(Griffin.Networking.Buffers.IBufferSlice)">
      <apidata name="CreateClientContext" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Servers.ServerBase.CreateClientContext(Griffin.Networking.Buffers.IBufferSlice)">
          <type api="T:Griffin.Networking.Servers.ServerBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="readBuffer">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingServer" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Messaging.MessagingServerConfiguration">
      <apidata name="MessagingServerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Servers.ServerConfiguration" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Messaging.MessagingServerConfiguration.#ctor(Griffin.Networking.Messaging.IMessageFormatterFactory)" />
        <element api="P:Griffin.Networking.Messaging.MessagingServerConfiguration.MessageFormatterFactory" />
        <element api="M:Griffin.Networking.Servers.ServerConfiguration.Validate" />
        <element api="P:Griffin.Networking.Servers.ServerConfiguration.MaximumNumberOfClients" />
        <element api="P:Griffin.Networking.Servers.ServerConfiguration.BufferSize" />
        <element api="P:Griffin.Networking.Servers.ServerConfiguration.BufferSliceStack" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.MessagingServerConfiguration.#ctor(Griffin.Networking.Messaging.IMessageFormatterFactory)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="messageFormatterFactory">
          <type api="T:Griffin.Networking.Messaging.IMessageFormatterFactory" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingServerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Messaging.MessagingServerConfiguration.MessageFormatterFactory">
      <apidata name="MessageFormatterFactory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MessageFormatterFactory" />
      <setter name="set_MessageFormatterFactory" />
      <returns>
        <type api="T:Griffin.Networking.Messaging.IMessageFormatterFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingServerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Messaging.MessagingService">
      <apidata name="MessagingService" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Messaging.MessagingService.Dispose" />
        <element api="M:Griffin.Networking.Messaging.MessagingService.HandleReceive(System.Object)" />
        <element api="M:Griffin.Networking.Messaging.MessagingService.#ctor" />
        <element api="P:Griffin.Networking.Messaging.MessagingService.Context" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.MessagingService.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingService" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Messaging.MessagingService.Context">
      <apidata name="Context" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Context" />
      <setter name="set_Context" />
      <returns>
        <type api="T:Griffin.Networking.Messaging.MessagingClientContext" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.MessagingService.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.MessagingService.HandleReceive(System.Object)">
      <apidata name="HandleReceive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Servers.IServerService.HandleReceive(System.Object)">
          <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.MessagingService" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Messaging.ReceivedMessageEventArgs">
      <apidata name="ReceivedMessageEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Messaging.ReceivedMessageEventArgs.#ctor(System.Object)" />
        <element api="P:Griffin.Networking.Messaging.ReceivedMessageEventArgs.Message" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Messaging.ReceivedMessageEventArgs.#ctor(System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.ReceivedMessageEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Messaging.ReceivedMessageEventArgs.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Message" />
      <setter name="set_Message" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Messaging" />
        <type api="T:Griffin.Networking.Messaging.ReceivedMessageEventArgs" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Pipelines">
      <apidata name="Griffin.Networking.Pipelines" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Pipelines.IPipelineHandler" />
        <element api="T:Griffin.Networking.Pipelines.IDownstreamHandler" />
        <element api="T:Griffin.Networking.Pipelines.IPipeline" />
        <element api="T:Griffin.Networking.Pipelines.IPipelineFactory" />
        <element api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" />
        <element api="T:Griffin.Networking.Pipelines.IPipelineMessage" />
        <element api="T:Griffin.Networking.Pipelines.IUpstreamHandler" />
        <element api="T:Griffin.Networking.Pipelines.DelegatePipelineFactory" />
        <element api="T:Griffin.Networking.Pipelines.Pipeline" />
        <element api="T:Griffin.Networking.Pipelines.PipelineServer" />
        <element api="T:Griffin.Networking.Pipelines.PipelineServerService" />
        <element api="T:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Pipelines.DelegatePipelineFactory">
      <apidata name="DelegatePipelineFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineFactory" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.DelegatePipelineFactory.Build" />
        <element api="M:Griffin.Networking.Pipelines.DelegatePipelineFactory.AddDownstreamHandler(System.Func{Griffin.Networking.Pipelines.IDownstreamHandler})" />
        <element api="M:Griffin.Networking.Pipelines.DelegatePipelineFactory.AddDownstreamHandler(Griffin.Networking.Pipelines.IDownstreamHandler)" />
        <element api="M:Griffin.Networking.Pipelines.DelegatePipelineFactory.AddUpstreamHandler(System.Func{Griffin.Networking.Pipelines.IUpstreamHandler})" />
        <element api="M:Griffin.Networking.Pipelines.DelegatePipelineFactory.AddUpstreamHandler(Griffin.Networking.Pipelines.IUpstreamHandler)" />
        <element api="M:Griffin.Networking.Pipelines.DelegatePipelineFactory.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.DelegatePipelineFactory.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.DelegatePipelineFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.DelegatePipelineFactory.AddDownstreamHandler(Griffin.Networking.Pipelines.IDownstreamHandler)">
      <apidata name="AddDownstreamHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handler">
          <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.DelegatePipelineFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.DelegatePipelineFactory.AddDownstreamHandler(System.Func{Griffin.Networking.Pipelines.IDownstreamHandler})">
      <apidata name="AddDownstreamHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="factoryMethod">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.DelegatePipelineFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.DelegatePipelineFactory.AddUpstreamHandler(Griffin.Networking.Pipelines.IUpstreamHandler)">
      <apidata name="AddUpstreamHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handler">
          <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.DelegatePipelineFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.DelegatePipelineFactory.AddUpstreamHandler(System.Func{Griffin.Networking.Pipelines.IUpstreamHandler})">
      <apidata name="AddUpstreamHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="factoryMethod">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.DelegatePipelineFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.DelegatePipelineFactory.Build">
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Griffin.Networking.Pipelines.IPipeline" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IPipelineFactory.Build">
          <type api="T:Griffin.Networking.Pipelines.IPipelineFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.DelegatePipelineFactory" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.IDownstreamHandler">
      <apidata name="IDownstreamHandler" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
      </implements>
      <implementors>
        <type api="T:Griffin.Networking.Pipelines.Pipeline" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.PipelineServerService" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.AuthenticationHandler" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.BufferTracer" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.RequestScope" ref="true" />
        <type api="T:Griffin.Networking.Http.Pipeline.Handlers.ResponseEncoder" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.IDownstreamHandler.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.IDownstreamHandler.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleDownstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.IPipeline">
      <apidata name="IPipeline" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Pipelines.Pipeline" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.IPipeline.SendUpstream(Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:Griffin.Networking.Pipelines.IPipeline.SetChannel(Griffin.Networking.Pipelines.IDownstreamHandler)" />
        <element api="M:Griffin.Networking.Pipelines.IPipeline.SendDownstream(Griffin.Networking.Pipelines.IPipelineMessage)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.IPipeline.SendDownstream(Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="SendDownstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.IPipeline" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.IPipeline.SendUpstream(Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="SendUpstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.IPipeline" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.IPipeline.SetChannel(Griffin.Networking.Pipelines.IDownstreamHandler)">
      <apidata name="SetChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="handler">
          <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.IPipeline" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.IPipelineFactory">
      <apidata name="IPipelineFactory" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Pipelines.DelegatePipelineFactory" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.IPipelineFactory.Build" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.IPipelineFactory.Build">
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:Griffin.Networking.Pipelines.IPipeline" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.IPipelineFactory" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.IPipelineHandler">
      <apidata name="IPipelineHandler" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Pipeline" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.PipelineServerService" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.AuthenticationHandler" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.BodyDecoder" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.BufferTracer" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.HttpErrorHandler" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.PipelineFailureHandler" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.FileHandler" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.RequestScope" ref="true" />
        <type api="T:Griffin.Networking.Http.Pipeline.Handlers.HeaderDecoder" ref="true" />
        <type api="T:Griffin.Networking.Http.Pipeline.Handlers.ResponseEncoder" ref="true" />
      </implementors>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.IPipelineHandlerContext">
      <apidata name="IPipelineHandlerContext" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <elements>
        <element api="M:Griffin.Networking.Pipelines.IPipelineHandlerContext.SendUpstream(Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:Griffin.Networking.Pipelines.IPipelineHandlerContext.SendDownstream(Griffin.Networking.Pipelines.IPipelineMessage)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.IPipelineHandlerContext.SendDownstream(Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="SendDownstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.IPipelineHandlerContext.SendUpstream(Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="SendUpstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.IPipelineMessage">
      <apidata name="IPipelineMessage" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Pipelines.Messages.ClientConnected" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Messages.BindSocket" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Close" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Closed" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Connect" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Connected" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Disconnect" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Disconnected" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Messages.PipelineFailure" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Received" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Messages.ReceivedInStream" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Messages.SendBuffer" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Messages.SendSlice" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Messages.SendStream" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Sent" ref="true" />
        <type api="T:Griffin.Networking.Http.Messages.ReceivedHttpRequest" ref="true" />
        <type api="T:Griffin.Networking.Http.Pipeline.Messages.SendHttpResponse" ref="true" />
      </implementors>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.IUpstreamHandler">
      <apidata name="IUpstreamHandler" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
      </implements>
      <implementors>
        <type api="T:Griffin.Networking.Http.Handlers.AuthenticationHandler" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.BodyDecoder" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.BufferTracer" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.HttpErrorHandler" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.PipelineFailureHandler" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.FileHandler" ref="true" />
        <type api="T:Griffin.Networking.Http.Handlers.RequestScope" ref="true" />
        <type api="T:Griffin.Networking.Http.Pipeline.Handlers.HeaderDecoder" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.IUpstreamHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.IUpstreamHandler.HandleUpstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleUpstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Pipeline">
      <apidata name="Pipeline" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipeline" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Pipeline.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:Griffin.Networking.Pipelines.Pipeline.SetChannel(Griffin.Networking.Pipelines.IDownstreamHandler)" />
        <element api="M:Griffin.Networking.Pipelines.Pipeline.SendDownstream(Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:Griffin.Networking.Pipelines.Pipeline.SendUpstream(Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:Griffin.Networking.Pipelines.Pipeline.AddDownstreamHandler(Griffin.Networking.Pipelines.IDownstreamHandler)" />
        <element api="M:Griffin.Networking.Pipelines.Pipeline.AddUpstreamHandler(Griffin.Networking.Pipelines.IUpstreamHandler)" />
        <element api="M:Griffin.Networking.Pipelines.Pipeline.ToString" />
        <element api="M:Griffin.Networking.Pipelines.Pipeline.#ctor" />
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Pipeline.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.Pipeline" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Pipeline.AddDownstreamHandler(Griffin.Networking.Pipelines.IDownstreamHandler)">
      <apidata name="AddDownstreamHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handler">
          <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.Pipeline" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Pipeline.AddUpstreamHandler(Griffin.Networking.Pipelines.IUpstreamHandler)">
      <apidata name="AddUpstreamHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handler">
          <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.Pipeline" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Pipeline.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleDownstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IDownstreamHandler.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.Pipeline" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Pipeline.SendDownstream(Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="SendDownstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IPipeline.SendDownstream(Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IPipeline" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.Pipeline" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Pipeline.SendUpstream(Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="SendUpstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IPipeline.SendUpstream(Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IPipeline" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.Pipeline" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Pipeline.SetChannel(Griffin.Networking.Pipelines.IDownstreamHandler)">
      <apidata name="SetChannel" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="handler">
          <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IPipeline.SetChannel(Griffin.Networking.Pipelines.IDownstreamHandler)">
          <type api="T:Griffin.Networking.Pipelines.IPipeline" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.Pipeline" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Pipeline.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.Pipeline" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.PipelineServer">
      <apidata name="PipelineServer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Servers.ServerBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.PipelineServer.#ctor(Griffin.Networking.Pipelines.IPipelineFactory,Griffin.Networking.Servers.ServerConfiguration)" />
        <element api="M:Griffin.Networking.Pipelines.PipelineServer.CreateClient(System.Net.EndPoint)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.CreateClientContext(Griffin.Networking.Buffers.IBufferSlice)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.OnClientDisconnected(Griffin.Networking.Servers.ServerClientContext)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.Start(System.Net.IPEndPoint)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.OnClientConnected(Griffin.Networking.Servers.ServerClientContext)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.ValidateClient(System.Net.Sockets.Socket)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.Stop" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.PipelineServer.#ctor(Griffin.Networking.Pipelines.IPipelineFactory,Griffin.Networking.Servers.ServerConfiguration)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="factory">
          <type api="T:Griffin.Networking.Pipelines.IPipelineFactory" ref="true" />
        </parameter>
        <parameter name="configuration">
          <type api="T:Griffin.Networking.Servers.ServerConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.PipelineServer" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.PipelineServer.CreateClient(System.Net.EndPoint)">
      <apidata name="CreateClient" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Servers.ServerBase.CreateClient(System.Net.EndPoint)">
          <type api="T:Griffin.Networking.Servers.ServerBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="remoteEndPoint">
          <type api="T:System.Net.EndPoint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.PipelineServer" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.PipelineServerService">
      <apidata name="PipelineServerService" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.PipelineServerService.#ctor(Griffin.Networking.Pipelines.IPipeline)" />
        <element api="M:Griffin.Networking.Pipelines.PipelineServerService.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)" />
        <element api="M:Griffin.Networking.Pipelines.PipelineServerService.Dispose" />
        <element api="M:Griffin.Networking.Pipelines.PipelineServerService.Assign(Griffin.Networking.Servers.IServerClientContext)" />
        <element api="M:Griffin.Networking.Pipelines.PipelineServerService.HandleReceive(System.Object)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.PipelineServerService.#ctor(Griffin.Networking.Pipelines.IPipeline)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="pipeline">
          <type api="T:Griffin.Networking.Pipelines.IPipeline" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.PipelineServerService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.PipelineServerService.Assign(Griffin.Networking.Servers.IServerClientContext)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Servers.IServerClientContext" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Servers.IServerService.Assign(Griffin.Networking.Servers.IServerClientContext)">
          <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.PipelineServerService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.PipelineServerService.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.PipelineServerService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.PipelineServerService.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
      <apidata name="HandleDownstream" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Pipelines.IPipelineHandlerContext" ref="true" />
        </parameter>
        <parameter name="message">
          <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IDownstreamHandler.HandleDownstream(Griffin.Networking.Pipelines.IPipelineHandlerContext,Griffin.Networking.Pipelines.IPipelineMessage)">
          <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.PipelineServerService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.PipelineServerService.HandleReceive(System.Object)">
      <apidata name="HandleReceive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Servers.IServerService.HandleReceive(System.Object)">
          <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.PipelineServerService" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory">
      <apidata name="ServiceLocatorPipelineFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineFactory" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory.#ctor(Griffin.Networking.IServiceLocator)" />
        <element api="M:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory.Build" />
        <element api="M:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory.AddDownstreamHandler``1" />
        <element api="M:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory.AddDownstreamHandler(Griffin.Networking.Pipelines.IDownstreamHandler)" />
        <element api="M:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory.AddUpstreamHandler``1" />
        <element api="M:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory.AddUpstreamHandler(Griffin.Networking.Pipelines.IUpstreamHandler)" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory.#ctor(Griffin.Networking.IServiceLocator)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="serviceLocator">
          <type api="T:Griffin.Networking.IServiceLocator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory.AddDownstreamHandler``1">
      <apidata name="AddDownstreamHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory.AddDownstreamHandler(Griffin.Networking.Pipelines.IDownstreamHandler)">
      <apidata name="AddDownstreamHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handler">
          <type api="T:Griffin.Networking.Pipelines.IDownstreamHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory.AddUpstreamHandler``1">
      <apidata name="AddUpstreamHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <templates>
        <template name="T">
          <constrained>
            <implements>
              <type api="T:Griffin.Networking.Pipelines.IPipelineHandler" ref="true" />
            </implements>
          </constrained>
        </template>
      </templates>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory.AddUpstreamHandler(Griffin.Networking.Pipelines.IUpstreamHandler)">
      <apidata name="AddUpstreamHandler" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="handler">
          <type api="T:Griffin.Networking.Pipelines.IUpstreamHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory.Build">
      <apidata name="Build" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Griffin.Networking.Pipelines.IPipeline" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Pipelines.IPipelineFactory.Build">
          <type api="T:Griffin.Networking.Pipelines.IPipelineFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines" />
        <type api="T:Griffin.Networking.Pipelines.ServiceLocatorPipelineFactory" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Pipelines.Messages">
      <apidata name="Griffin.Networking.Pipelines.Messages" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Pipelines.Messages.ClientConnected" />
        <element api="T:Griffin.Networking.Pipelines.Messages.BindSocket" />
        <element api="T:Griffin.Networking.Pipelines.Messages.Close" />
        <element api="T:Griffin.Networking.Pipelines.Messages.Closed" />
        <element api="T:Griffin.Networking.Pipelines.Messages.Connect" />
        <element api="T:Griffin.Networking.Pipelines.Messages.Connected" />
        <element api="T:Griffin.Networking.Pipelines.Messages.Disconnect" />
        <element api="T:Griffin.Networking.Pipelines.Messages.Disconnected" />
        <element api="T:Griffin.Networking.Pipelines.Messages.PipelineFailure" />
        <element api="T:Griffin.Networking.Pipelines.Messages.Received" />
        <element api="T:Griffin.Networking.Pipelines.Messages.ReceivedInStream" />
        <element api="T:Griffin.Networking.Pipelines.Messages.SendBuffer" />
        <element api="T:Griffin.Networking.Pipelines.Messages.SendSlice" />
        <element api="T:Griffin.Networking.Pipelines.Messages.SendStream" />
        <element api="T:Griffin.Networking.Pipelines.Messages.Sent" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.BindSocket">
      <apidata name="BindSocket" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.BindSocket.#ctor(System.Net.IPEndPoint)" />
        <element api="P:Griffin.Networking.Pipelines.Messages.BindSocket.EndPoint" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.BindSocket.#ctor(System.Net.IPEndPoint)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="endPoint">
          <type api="T:System.Net.IPEndPoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.BindSocket" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.BindSocket.EndPoint">
      <apidata name="EndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_EndPoint" />
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.BindSocket" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.ClientConnected">
      <apidata name="ClientConnected" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.ClientConnected.#ctor(Griffin.Networking.Servers.IServerService)" />
        <element api="P:Griffin.Networking.Pipelines.Messages.ClientConnected.Client" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.ClientConnected.#ctor(Griffin.Networking.Servers.IServerService)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="client">
          <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.ClientConnected" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.ClientConnected.Client">
      <apidata name="Client" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Client" />
      <setter name="set_Client" />
      <returns>
        <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.ClientConnected" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.Close">
      <apidata name="Close" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.Close.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.Close.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Close" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.Closed">
      <apidata name="Closed" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.Closed.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.Closed.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Closed" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.Connect">
      <apidata name="Connect" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.Connect.#ctor(System.Net.EndPoint)" />
        <element api="P:Griffin.Networking.Pipelines.Messages.Connect.RemoteEndPoint" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.Connect.#ctor(System.Net.EndPoint)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="remoteEndPoint">
          <type api="T:System.Net.EndPoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Connect" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.Connect.RemoteEndPoint">
      <apidata name="RemoteEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RemoteEndPoint" />
      <returns>
        <type api="T:System.Net.EndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Connect" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.Connected">
      <apidata name="Connected" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.Connected.#ctor(System.Net.EndPoint)" />
        <element api="P:Griffin.Networking.Pipelines.Messages.Connected.RemoteEndPoint" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.Connected.#ctor(System.Net.EndPoint)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="remoteEndPoint">
          <type api="T:System.Net.EndPoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Connected" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.Connected.RemoteEndPoint">
      <apidata name="RemoteEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_RemoteEndPoint" />
      <setter name="set_RemoteEndPoint" />
      <returns>
        <type api="T:System.Net.EndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Connected" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.Disconnect">
      <apidata name="Disconnect" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.Disconnect.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.Disconnect.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Disconnect" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.Disconnected">
      <apidata name="Disconnected" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.Disconnected.#ctor(System.Exception)" />
        <element api="P:Griffin.Networking.Pipelines.Messages.Disconnected.Exception" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.Disconnected.#ctor(System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Disconnected" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.Disconnected.Exception">
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Disconnected" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.PipelineFailure">
      <apidata name="PipelineFailure" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Griffin.Networking.Http.Messages.HttpError" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.PipelineFailure.#ctor(System.Exception)" />
        <element api="P:Griffin.Networking.Pipelines.Messages.PipelineFailure.Exception" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.PipelineFailure.#ctor(System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="exception">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.PipelineFailure" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.PipelineFailure.Exception">
      <apidata name="Exception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Exception" />
      <setter name="set_Exception" />
      <returns>
        <type api="T:System.Exception" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.PipelineFailure" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.Received">
      <apidata name="Received" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.Received.#ctor(System.Net.EndPoint,Griffin.Networking.Buffers.IBufferReader)" />
        <element api="P:Griffin.Networking.Pipelines.Messages.Received.RemoteEndPoint" />
        <element api="P:Griffin.Networking.Pipelines.Messages.Received.BufferReader" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.Received.#ctor(System.Net.EndPoint,Griffin.Networking.Buffers.IBufferReader)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="remoteEndPoint">
          <type api="T:System.Net.EndPoint" ref="true" />
        </parameter>
        <parameter name="reader">
          <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Received" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.Received.BufferReader">
      <apidata name="BufferReader" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_BufferReader" />
      <setter name="set_BufferReader" />
      <returns>
        <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Received" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.Received.RemoteEndPoint">
      <apidata name="RemoteEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_RemoteEndPoint" />
      <setter name="set_RemoteEndPoint" />
      <returns>
        <type api="T:System.Net.EndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Received" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.ReceivedInStream">
      <apidata name="ReceivedInStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.ReceivedInStream.#ctor(System.IO.Stream)" />
        <element api="P:Griffin.Networking.Pipelines.Messages.ReceivedInStream.Stream" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.ReceivedInStream.#ctor(System.IO.Stream)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.ReceivedInStream" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.ReceivedInStream.Stream">
      <apidata name="Stream" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Stream" />
      <setter name="set_Stream" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.ReceivedInStream" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.SendBuffer">
      <apidata name="SendBuffer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.SendBuffer.#ctor(System.Byte[],System.Int32,System.Int32)" />
        <element api="P:Griffin.Networking.Pipelines.Messages.SendBuffer.Buffer" />
        <element api="P:Griffin.Networking.Pipelines.Messages.SendBuffer.Offset" />
        <element api="P:Griffin.Networking.Pipelines.Messages.SendBuffer.Count" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.SendBuffer.#ctor(System.Byte[],System.Int32,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="buffer">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
        <parameter name="offset">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.SendBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.SendBuffer.Buffer">
      <apidata name="Buffer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Buffer" />
      <setter name="set_Buffer" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Byte" ref="false" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.SendBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.SendBuffer.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Count" />
      <setter name="set_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.SendBuffer" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.SendBuffer.Offset">
      <apidata name="Offset" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="family" />
      <getter name="get_Offset" />
      <setter name="set_Offset" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.SendBuffer" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.SendSlice">
      <apidata name="SendSlice" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.SendSlice.#ctor(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="P:Griffin.Networking.Pipelines.Messages.SendSlice.Slice" />
        <element api="P:Griffin.Networking.Pipelines.Messages.SendSlice.Length" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.SendSlice.#ctor(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="slice">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.SendSlice" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.SendSlice.Length">
      <apidata name="Length" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Length" />
      <setter name="set_Length" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.SendSlice" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.SendSlice.Slice">
      <apidata name="Slice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Slice" />
      <setter name="set_Slice" />
      <returns>
        <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.SendSlice" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.SendStream">
      <apidata name="SendStream" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.SendStream.#ctor(System.IO.Stream)" />
        <element api="P:Griffin.Networking.Pipelines.Messages.SendStream.Stream" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.SendStream.#ctor(System.IO.Stream)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.SendStream" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.SendStream.Stream">
      <apidata name="Stream" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_Stream" />
      <setter name="set_Stream" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.SendStream" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Pipelines.Messages.Sent">
      <apidata name="Sent" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Pipelines.IPipelineMessage" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Pipelines.Messages.Sent.#ctor(Griffin.Networking.Buffers.BufferSlice)" />
        <element api="P:Griffin.Networking.Pipelines.Messages.Sent.BufferSlice" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Pipelines.Messages.Sent.#ctor(Griffin.Networking.Buffers.BufferSlice)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="bufferSlice">
          <type api="T:Griffin.Networking.Buffers.BufferSlice" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Sent" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Pipelines.Messages.Sent.BufferSlice">
      <apidata name="BufferSlice" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" set-visibility="private" />
      <getter name="get_BufferSlice" />
      <setter name="set_BufferSlice" />
      <returns>
        <type api="T:Griffin.Networking.Buffers.BufferSlice" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Pipelines.Messages" />
        <type api="T:Griffin.Networking.Pipelines.Messages.Sent" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Protocols.Basic">
      <apidata name="Griffin.Networking.Protocols.Basic" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Protocols.Basic.BasicMessageBuilder" />
        <element api="T:Griffin.Networking.Protocols.Basic.BasicMessageFactory" />
        <element api="T:Griffin.Networking.Protocols.Basic.BasicMessageSerializer" />
        <element api="T:Griffin.Networking.Protocols.Basic.Packet" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Protocols.Basic.BasicMessageBuilder">
      <apidata name="BasicMessageBuilder" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Messaging.IMessageBuilder" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Protocols.Basic.BasicMessageBuilder.#ctor" />
        <element api="M:Griffin.Networking.Protocols.Basic.BasicMessageBuilder.Append(Griffin.Networking.Buffers.IBufferReader)" />
        <element api="M:Griffin.Networking.Protocols.Basic.BasicMessageBuilder.TryDequeue(System.Object@)" />
        <element api="M:Griffin.Networking.Protocols.Basic.BasicMessageBuilder.ReadHeaderBytes(Griffin.Networking.Buffers.IBufferReader)" />
        <element api="M:Griffin.Networking.Protocols.Basic.BasicMessageBuilder.ReadBodyBytes(Griffin.Networking.Buffers.IBufferReader)" />
        <element api="M:Griffin.Networking.Protocols.Basic.BasicMessageBuilder.CreatePacket(System.Byte[])" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Protocols.Basic.BasicMessageBuilder.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.BasicMessageBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Protocols.Basic.BasicMessageBuilder.Append(Griffin.Networking.Buffers.IBufferReader)">
      <apidata name="Append" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Messaging.IMessageBuilder.Append(Griffin.Networking.Buffers.IBufferReader)">
          <type api="T:Griffin.Networking.Messaging.IMessageBuilder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.BasicMessageBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Protocols.Basic.BasicMessageBuilder.CreatePacket(System.Byte[])">
      <apidata name="CreatePacket" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="header">
          <arrayOf rank="1">
            <type api="T:System.Byte" ref="false" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Protocols.Basic.Packet" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.BasicMessageBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Protocols.Basic.BasicMessageBuilder.ReadBodyBytes(Griffin.Networking.Buffers.IBufferReader)">
      <apidata name="ReadBodyBytes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.BasicMessageBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Protocols.Basic.BasicMessageBuilder.ReadHeaderBytes(Griffin.Networking.Buffers.IBufferReader)">
      <apidata name="ReadHeaderBytes" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:Griffin.Networking.Buffers.IBufferReader" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.BasicMessageBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Protocols.Basic.BasicMessageBuilder.TryDequeue(System.Object@)">
      <apidata name="TryDequeue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Messaging.IMessageBuilder.TryDequeue(System.Object@)">
          <type api="T:Griffin.Networking.Messaging.IMessageBuilder" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.BasicMessageBuilder" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Protocols.Basic.BasicMessageFactory">
      <apidata name="BasicMessageFactory" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Messaging.IMessageFormatterFactory" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Protocols.Basic.BasicMessageFactory.CreateSerializer" />
        <element api="M:Griffin.Networking.Protocols.Basic.BasicMessageFactory.CreateBuilder" />
        <element api="M:Griffin.Networking.Protocols.Basic.BasicMessageFactory.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Protocols.Basic.BasicMessageFactory.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.BasicMessageFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Protocols.Basic.BasicMessageFactory.CreateBuilder">
      <apidata name="CreateBuilder" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Griffin.Networking.Messaging.IMessageBuilder" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Messaging.IMessageFormatterFactory.CreateBuilder">
          <type api="T:Griffin.Networking.Messaging.IMessageFormatterFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.BasicMessageFactory" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Protocols.Basic.BasicMessageFactory.CreateSerializer">
      <apidata name="CreateSerializer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Griffin.Networking.Messaging.IMessageSerializer" ref="true" />
      </returns>
      <implements>
        <member api="M:Griffin.Networking.Messaging.IMessageFormatterFactory.CreateSerializer">
          <type api="T:Griffin.Networking.Messaging.IMessageFormatterFactory" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.BasicMessageFactory" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Protocols.Basic.BasicMessageSerializer">
      <apidata name="BasicMessageSerializer" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Messaging.IMessageSerializer" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Protocols.Basic.BasicMessageSerializer.Serialize(System.Object,Griffin.Networking.Buffers.IBufferWriter)" />
        <element api="M:Griffin.Networking.Protocols.Basic.BasicMessageSerializer.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Protocols.Basic.BasicMessageSerializer.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.BasicMessageSerializer" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Protocols.Basic.BasicMessageSerializer.Serialize(System.Object,Griffin.Networking.Buffers.IBufferWriter)">
      <apidata name="Serialize" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="writer">
          <type api="T:Griffin.Networking.Buffers.IBufferWriter" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Messaging.IMessageSerializer.Serialize(System.Object,Griffin.Networking.Buffers.IBufferWriter)">
          <type api="T:Griffin.Networking.Messaging.IMessageSerializer" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.BasicMessageSerializer" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Protocols.Basic.Packet">
      <apidata name="Packet" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Griffin.Networking.Protocols.Basic.Packet.HeaderLength" />
        <element api="F:Griffin.Networking.Protocols.Basic.Packet.ContentLength" />
        <element api="F:Griffin.Networking.Protocols.Basic.Packet.Message" />
        <element api="F:Griffin.Networking.Protocols.Basic.Packet.Version" />
        <element api="M:Griffin.Networking.Protocols.Basic.Packet.#ctor" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Protocols.Basic.Packet.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.Packet" ref="true" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Protocols.Basic.Packet.ContentLength">
      <apidata name="ContentLength" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.Packet" ref="true" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Protocols.Basic.Packet.HeaderLength">
      <apidata name="HeaderLength" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.Packet" ref="true" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Protocols.Basic.Packet.Message">
      <apidata name="Message" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.Stream" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.Packet" ref="true" />
      </containers>
    </api>
    <api id="F:Griffin.Networking.Protocols.Basic.Packet.Version">
      <apidata name="Version" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Byte" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking.Protocols.Basic" module="Griffin.Networking.Protocols.Basic" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Protocols.Basic" />
        <type api="T:Griffin.Networking.Protocols.Basic.Packet" ref="true" />
      </containers>
    </api>
    <api id="N:Griffin.Networking.Servers">
      <apidata name="Griffin.Networking.Servers" group="namespace" />
      <elements>
        <element api="T:Griffin.Networking.Servers.IServerService" />
        <element api="T:Griffin.Networking.Servers.ServerBase" />
        <element api="T:Griffin.Networking.Servers.Server" />
        <element api="T:Griffin.Networking.Servers.IServerClientContext" />
        <element api="T:Griffin.Networking.Servers.ServerClientContext" />
        <element api="T:Griffin.Networking.Servers.IServiceFactory" />
        <element api="T:Griffin.Networking.Servers.ServerConfiguration" />
      </elements>
    </api>
    <api id="T:Griffin.Networking.Servers.IServerClientContext">
      <apidata name="IServerClientContext" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Servers.IServerClientContext.Send(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Servers.IServerClientContext.Send(System.IO.Stream)" />
        <element api="M:Griffin.Networking.Servers.IServerClientContext.Close" />
        <element api="P:Griffin.Networking.Servers.IServerClientContext.RemoteEndPoint" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.IServerClientContext.Close">
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.IServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Servers.IServerClientContext.RemoteEndPoint">
      <apidata name="RemoteEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_RemoteEndPoint" />
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.IServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.IServerClientContext.Send(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="slice">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.IServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.IServerClientContext.Send(System.IO.Stream)">
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.IServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Servers.IServerService">
      <apidata name="IServerService" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <implementors>
        <type api="T:Griffin.Networking.Messaging.MessagingService" ref="true" />
        <type api="T:Griffin.Networking.Pipelines.PipelineServerService" ref="true" />
        <type api="T:Griffin.Networking.Http.HttpService" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Servers.IServerService.Assign(Griffin.Networking.Servers.IServerClientContext)" />
        <element api="M:Griffin.Networking.Servers.IServerService.HandleReceive(System.Object)" />
        <element api="M:System.IDisposable.Dispose">
          <apidata name="Dispose" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata abstract="true" virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.IDisposable" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.IServerService.Assign(Griffin.Networking.Servers.IServerClientContext)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Servers.IServerClientContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.IServerService.HandleReceive(System.Object)">
      <apidata name="HandleReceive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="message">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Servers.IServiceFactory">
      <apidata name="IServiceFactory" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <implementors>
        <type api="T:Griffin.Networking.Http.HttpServerClientFactory" ref="true" />
        <type api="T:Griffin.Networking.Http.Server.HttpServer" ref="true" />
      </implementors>
      <elements>
        <element api="M:Griffin.Networking.Servers.IServiceFactory.CreateClient(System.Net.EndPoint)" />
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.IServiceFactory.CreateClient(System.Net.EndPoint)">
      <apidata name="CreateClient" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="remoteEndPoint">
          <type api="T:System.Net.EndPoint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.IServiceFactory" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Servers.Server">
      <apidata name="Server" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:Griffin.Networking.Servers.ServerBase" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Griffin.Networking.Messaging.MessagingServer" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Servers.Server.#ctor(Griffin.Networking.Servers.IServiceFactory,Griffin.Networking.Servers.ServerConfiguration)" />
        <element api="M:Griffin.Networking.Servers.Server.CreateClient(System.Net.EndPoint)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.CreateClientContext(Griffin.Networking.Buffers.IBufferSlice)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.OnClientDisconnected(Griffin.Networking.Servers.ServerClientContext)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.Start(System.Net.IPEndPoint)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.OnClientConnected(Griffin.Networking.Servers.ServerClientContext)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.ValidateClient(System.Net.Sockets.Socket)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.Stop" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.Server.#ctor(Griffin.Networking.Servers.IServiceFactory,Griffin.Networking.Servers.ServerConfiguration)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="clientFactory">
          <type api="T:Griffin.Networking.Servers.IServiceFactory" ref="true" />
        </parameter>
        <parameter name="configuration">
          <type api="T:Griffin.Networking.Servers.ServerConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.Server" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.Server.CreateClient(System.Net.EndPoint)">
      <apidata name="CreateClient" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Griffin.Networking.Servers.ServerBase.CreateClient(System.Net.EndPoint)">
          <type api="T:Griffin.Networking.Servers.ServerBase" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="remoteEndPoint">
          <type api="T:System.Net.EndPoint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.Server" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Servers.ServerBase">
      <apidata name="ServerBase" group="type" subgroup="class" />
      <typedata visibility="public" abstract="true" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Griffin.Networking.Servers.Server" ref="true" />
          <type api="T:Griffin.Networking.Pipelines.PipelineServer" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Servers.ServerBase.#ctor(Griffin.Networking.Servers.ServerConfiguration)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.CreateClientContext(Griffin.Networking.Buffers.IBufferSlice)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.OnClientDisconnected(Griffin.Networking.Servers.ServerClientContext)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.Start(System.Net.IPEndPoint)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.CreateClient(System.Net.EndPoint)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.OnClientConnected(Griffin.Networking.Servers.ServerClientContext)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.ValidateClient(System.Net.Sockets.Socket)" />
        <element api="M:Griffin.Networking.Servers.ServerBase.Stop" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerBase.#ctor(Griffin.Networking.Servers.ServerConfiguration)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <parameters>
        <parameter name="configuration">
          <type api="T:Griffin.Networking.Servers.ServerConfiguration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerBase" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerBase.CreateClient(System.Net.EndPoint)">
      <apidata name="CreateClient" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="remoteEndPoint">
          <type api="T:System.Net.EndPoint" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerBase" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerBase.CreateClientContext(Griffin.Networking.Buffers.IBufferSlice)">
      <apidata name="CreateClientContext" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="readBuffer">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerBase" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerBase.OnClientConnected(Griffin.Networking.Servers.ServerClientContext)">
      <apidata name="OnClientConnected" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerBase" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerBase.OnClientDisconnected(Griffin.Networking.Servers.ServerClientContext)">
      <apidata name="OnClientDisconnected" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerBase" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerBase.Start(System.Net.IPEndPoint)">
      <apidata name="Start" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="localEndPoint">
          <type api="T:System.Net.IPEndPoint" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerBase" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerBase.Stop">
      <apidata name="Stop" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerBase" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerBase.ValidateClient(System.Net.Sockets.Socket)">
      <apidata name="ValidateClient" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="acceptedSocket">
          <type api="T:System.Net.Sockets.Socket" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerBase" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Servers.ServerClientContext">
      <apidata name="ServerClientContext" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Griffin.Networking.Messaging.MessagingClientContext" ref="true" />
          <type api="T:Griffin.Networking.Http.HttpServerClientContext" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Griffin.Networking.Servers.IServerClientContext" ref="true" />
      </implements>
      <elements>
        <element api="M:Griffin.Networking.Servers.ServerClientContext.#ctor(Griffin.Networking.Buffers.IBufferSlice)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Send(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Send(System.IO.Stream)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Close" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Close(System.Boolean)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.TriggerDisconnect(System.Net.Sockets.SocketError)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.OnDisconnect(System.Net.Sockets.SocketError)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.TriggerClientReceive(System.Object)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.HandleRead(Griffin.Networking.Buffers.IBufferSlice,System.Int32)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.Assign(System.Net.Sockets.Socket,Griffin.Networking.Servers.IServerService)" />
        <element api="M:Griffin.Networking.Servers.ServerClientContext.SetWriteBuffer(Griffin.Networking.Buffers.IBufferSlice)" />
        <element api="P:Griffin.Networking.Servers.ServerClientContext.ReadBuffer" />
        <element api="P:Griffin.Networking.Servers.ServerClientContext.RemoteEndPoint" />
        <element api="E:Griffin.Networking.Servers.ServerClientContext.Disconnected" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerClientContext.#ctor(Griffin.Networking.Buffers.IBufferSlice)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <parameters>
        <parameter name="readBuffer">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerClientContext.Assign(System.Net.Sockets.Socket,Griffin.Networking.Servers.IServerService)">
      <apidata name="Assign" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="socket">
          <type api="T:System.Net.Sockets.Socket" ref="true" />
        </parameter>
        <parameter name="client">
          <type api="T:Griffin.Networking.Servers.IServerService" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerClientContext.Close">
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Griffin.Networking.Servers.IServerClientContext.Close">
          <type api="T:Griffin.Networking.Servers.IServerClientContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerClientContext.Close(System.Boolean)">
      <apidata name="Close" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="triggerDisconnectEvent">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="E:Griffin.Networking.Servers.ServerClientContext.Disconnected">
      <apidata name="Disconnected" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_Disconnected" />
      <remover name="remove_Disconnected" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Griffin.Networking.DisconnectEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Griffin.Networking.DisconnectEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerClientContext.HandleRead(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name="HandleRead" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="readBuffer">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="bytesReceived">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerClientContext.OnDisconnect(System.Net.Sockets.SocketError)">
      <apidata name="OnDisconnect" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="error">
          <type api="T:System.Net.Sockets.SocketError" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Servers.ServerClientContext.ReadBuffer">
      <apidata name="ReadBuffer" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ReadBuffer" />
      <returns>
        <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Servers.ServerClientContext.RemoteEndPoint">
      <apidata name="RemoteEndPoint" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_RemoteEndPoint" />
      <returns>
        <type api="T:System.Net.IPEndPoint" ref="true" />
      </returns>
      <implements>
        <member api="P:Griffin.Networking.Servers.IServerClientContext.RemoteEndPoint">
          <type api="T:Griffin.Networking.Servers.IServerClientContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerClientContext.Send(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="slice">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
        <parameter name="length">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Servers.IServerClientContext.Send(Griffin.Networking.Buffers.IBufferSlice,System.Int32)">
          <type api="T:Griffin.Networking.Servers.IServerClientContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerClientContext.Send(System.IO.Stream)">
      <apidata name="Send" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="stream">
          <type api="T:System.IO.Stream" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Griffin.Networking.Servers.IServerClientContext.Send(System.IO.Stream)">
          <type api="T:Griffin.Networking.Servers.IServerClientContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerClientContext.SetWriteBuffer(Griffin.Networking.Buffers.IBufferSlice)">
      <apidata name="SetWriteBuffer" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="bufferSlice">
          <type api="T:Griffin.Networking.Buffers.IBufferSlice" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerClientContext.TriggerClientReceive(System.Object)">
      <apidata name="TriggerClientReceive" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="data">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerClientContext.TriggerDisconnect(System.Net.Sockets.SocketError)">
      <apidata name="TriggerDisconnect" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="error">
          <type api="T:System.Net.Sockets.SocketError" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerClientContext" ref="true" />
      </containers>
    </api>
    <api id="T:Griffin.Networking.Servers.ServerConfiguration">
      <apidata name="ServerConfiguration" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" layout="auto" format="ansi" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:Griffin.Networking.Messaging.MessagingServerConfiguration" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:Griffin.Networking.Servers.ServerConfiguration.#ctor" />
        <element api="M:Griffin.Networking.Servers.ServerConfiguration.Validate" />
        <element api="P:Griffin.Networking.Servers.ServerConfiguration.MaximumNumberOfClients" />
        <element api="P:Griffin.Networking.Servers.ServerConfiguration.BufferSize" />
        <element api="P:Griffin.Networking.Servers.ServerConfiguration.BufferSliceStack" />
        <element api="M:System.Object.ToString">
          <apidata name="ToString" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Equals(System.Object)">
          <apidata name="Equals" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <parameters>
            <parameter name="obj">
              <type api="T:System.Object" ref="true" />
            </parameter>
          </parameters>
          <returns>
            <type api="T:System.Boolean" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetHashCode">
          <apidata name="GetHashCode" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="true" />
          <returns>
            <type api="T:System.Int32" ref="false" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
          <attributes>
            <attribute>
              <type api="T:System.Runtime.TargetedPatchingOptOutAttribute" ref="true" />
              <argument>
                <type api="T:System.String" ref="true" />
                <value>Performance critical to inline across NGen image boundaries</value>
              </argument>
            </attribute>
          </attributes>
        </element>
        <element api="M:System.Object.GetType">
          <apidata name="GetType" group="member" subgroup="method" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Type" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.Finalize">
          <apidata name="Finalize" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="true" />
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
        <element api="M:System.Object.MemberwiseClone">
          <apidata name="MemberwiseClone" group="member" subgroup="method" />
          <memberdata visibility="family" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.Object" ref="true" />
          </returns>
          <containers>
            <library assembly="mscorlib" module="mscorlib" kind="DynamicallyLinkedLibrary" />
            <namespace api="N:System" />
            <type api="T:System.Object" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerConfiguration.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Servers.ServerConfiguration.BufferSize">
      <apidata name="BufferSize" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BufferSize" />
      <setter name="set_BufferSize" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Servers.ServerConfiguration.BufferSliceStack">
      <apidata name="BufferSliceStack" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BufferSliceStack" />
      <setter name="set_BufferSliceStack" />
      <returns>
        <type api="T:Griffin.Networking.Buffers.BufferSliceStack" ref="true" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="P:Griffin.Networking.Servers.ServerConfiguration.MaximumNumberOfClients">
      <apidata name="MaximumNumberOfClients" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximumNumberOfClients" />
      <setter name="set_MaximumNumberOfClients" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:Griffin.Networking.Servers.ServerConfiguration.Validate">
      <apidata name="Validate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata virtual="true" />
      <containers>
        <library assembly="Griffin.Networking" module="Griffin.Networking" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Griffin.Networking.Servers" />
        <type api="T:Griffin.Networking.Servers.ServerConfiguration" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>